// Code generated by goyacc -o /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.go /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y. DO NOT EDIT.

//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const LOWER_THAN_ORDER = 57352
const ORDER = 57353
const LOWER_THAN_COMMA = 57354
const SELECT = 57355
const INSERT = 57356
const UPDATE = 57357
const DELETE = 57358
const FROM = 57359
const WHERE = 57360
const GROUP = 57361
const HAVING = 57362
const BY = 57363
const LIMIT = 57364
const OFFSET = 57365
const FOR = 57366
const CONNECT = 57367
const MANAGE = 57368
const GRANTS = 57369
const OWNERSHIP = 57370
const REFERENCE = 57371
const LOWER_THAN_SET = 57372
const SET = 57373
const ALL = 57374
const DISTINCT = 57375
const DISTINCTROW = 57376
const AS = 57377
const EXISTS = 57378
const ASC = 57379
const DESC = 57380
const INTO = 57381
const DUPLICATE = 57382
const DEFAULT = 57383
const LOCK = 57384
const KEYS = 57385
const NULLS = 57386
const FIRST = 57387
const LAST = 57388
const AFTER = 57389
const ROLLUP = 57390
const INSTANT = 57391
const INPLACE = 57392
const COPY = 57393
const DISABLE = 57394
const ENABLE = 57395
const UNDEFINED = 57396
const MERGE = 57397
const TEMPTABLE = 57398
const DEFINER = 57399
const INVOKER = 57400
const SQL = 57401
const SECURITY = 57402
const CASCADED = 57403
const VALUES = 57404
const NEXT = 57405
const VALUE = 57406
const SHARE = 57407
const MODE = 57408
const SQL_NO_CACHE = 57409
const SQL_CACHE = 57410
const JOIN = 57411
const STRAIGHT_JOIN = 57412
const LEFT = 57413
const RIGHT = 57414
const INNER = 57415
const OUTER = 57416
const CROSS = 57417
const NATURAL = 57418
const USE = 57419
const FORCE = 57420
const CROSS_L2 = 57421
const LOWER_THAN_ON = 57422
const ON = 57423
const USING = 57424
const SUBQUERY_AS_EXPR = 57425
const LOWER_THAN_STRING = 57426
const ID = 57427
const AT_ID = 57428
const AT_AT_ID = 57429
const STRING = 57430
const VALUE_ARG = 57431
const LIST_ARG = 57432
const COMMENT = 57433
const COMMENT_KEYWORD = 57434
const QUOTE_ID = 57435
const STAGE = 57436
const CREDENTIALS = 57437
const STAGES = 57438
const SNAPSHOTS = 57439
const INTEGRAL = 57440
const HEX = 57441
const FLOAT = 57442
const HEXNUM = 57443
const BIT_LITERAL = 57444
const NULL = 57445
const TRUE = 57446
const FALSE = 57447
const LOWER_THAN_CHARSET = 57448
const CHARSET = 57449
const UNIQUE = 57450
const KEY = 57451
const OR = 57452
const PIPE_CONCAT = 57453
const XOR = 57454
const AND = 57455
const NOT = 57456
const BETWEEN = 57457
const CASE = 57458
const WHEN = 57459
const THEN = 57460
const ELSE = 57461
const END = 57462
const ELSEIF = 57463
const LOWER_THAN_EQ = 57464
const LE = 57465
const GE = 57466
const NE = 57467
const NULL_SAFE_EQUAL = 57468
const IS = 57469
const LIKE = 57470
const REGEXP = 57471
const IN = 57472
const ASSIGNMENT = 57473
const ILIKE = 57474
const SHIFT_LEFT = 57475
const SHIFT_RIGHT = 57476
const DIV = 57477
const MOD = 57478
const UNARY = 57479
const COLLATE = 57480
const BINARY = 57481
const UNDERSCORE_BINARY = 57482
const INTERVAL = 57483
const OUT = 57484
const INOUT = 57485
const BEGIN = 57486
const START = 57487
const TRANSACTION = 57488
const COMMIT = 57489
const ROLLBACK = 57490
const WORK = 57491
const CONSISTENT = 57492
const SNAPSHOT = 57493
const CHAIN = 57494
const NO = 57495
const RELEASE = 57496
const PRIORITY = 57497
const QUICK = 57498
const BIT = 57499
const TINYINT = 57500
const SMALLINT = 57501
const MEDIUMINT = 57502
const INT = 57503
const INTEGER = 57504
const BIGINT = 57505
const INTNUM = 57506
const REAL = 57507
const DOUBLE = 57508
const FLOAT_TYPE = 57509
const DECIMAL = 57510
const NUMERIC = 57511
const DECIMAL_VALUE = 57512
const TIME = 57513
const TIMESTAMP = 57514
const DATETIME = 57515
const YEAR = 57516
const CHAR = 57517
const VARCHAR = 57518
const BOOL = 57519
const CHARACTER = 57520
const VARBINARY = 57521
const NCHAR = 57522
const TEXT = 57523
const TINYTEXT = 57524
const MEDIUMTEXT = 57525
const LONGTEXT = 57526
const BLOB = 57527
const TINYBLOB = 57528
const MEDIUMBLOB = 57529
const LONGBLOB = 57530
const JSON = 57531
const ENUM = 57532
const UUID = 57533
const VECF32 = 57534
const VECF64 = 57535
const GEOMETRY = 57536
const POINT = 57537
const LINESTRING = 57538
const POLYGON = 57539
const GEOMETRYCOLLECTION = 57540
const MULTIPOINT = 57541
const MULTILINESTRING = 57542
const MULTIPOLYGON = 57543
const INT1 = 57544
const INT2 = 57545
const INT3 = 57546
const INT4 = 57547
const INT8 = 57548
const S3OPTION = 57549
const STAGEOPTION = 57550
const SQL_SMALL_RESULT = 57551
const SQL_BIG_RESULT = 57552
const SQL_BUFFER_RESULT = 57553
const LOW_PRIORITY = 57554
const HIGH_PRIORITY = 57555
const DELAYED = 57556
const CREATE = 57557
const ALTER = 57558
const DROP = 57559
const RENAME = 57560
const ANALYZE = 57561
const ADD = 57562
const RETURNS = 57563
const SCHEMA = 57564
const TABLE = 57565
const SEQUENCE = 57566
const INDEX = 57567
const VIEW = 57568
const TO = 57569
const IGNORE = 57570
const IF = 57571
const PRIMARY = 57572
const COLUMN = 57573
const CONSTRAINT = 57574
const SPATIAL = 57575
const FULLTEXT = 57576
const FOREIGN = 57577
const KEY_BLOCK_SIZE = 57578
const SHOW = 57579
const DESCRIBE = 57580
const EXPLAIN = 57581
const DATE = 57582
const ESCAPE = 57583
const REPAIR = 57584
const OPTIMIZE = 57585
const TRUNCATE = 57586
const MAXVALUE = 57587
const PARTITION = 57588
const REORGANIZE = 57589
const LESS = 57590
const THAN = 57591
const PROCEDURE = 57592
const TRIGGER = 57593
const STATUS = 57594
const VARIABLES = 57595
const ROLE = 57596
const PROXY = 57597
const AVG_ROW_LENGTH = 57598
const STORAGE = 57599
const DISK = 57600
const MEMORY = 57601
const CHECKSUM = 57602
const COMPRESSION = 57603
const DATA = 57604
const DIRECTORY = 57605
const DELAY_KEY_WRITE = 57606
const ENCRYPTION = 57607
const ENGINE = 57608
const MAX_ROWS = 57609
const MIN_ROWS = 57610
const PACK_KEYS = 57611
const ROW_FORMAT = 57612
const STATS_AUTO_RECALC = 57613
const STATS_PERSISTENT = 57614
const STATS_SAMPLE_PAGES = 57615
const DYNAMIC = 57616
const COMPRESSED = 57617
const REDUNDANT = 57618
const COMPACT = 57619
const FIXED = 57620
const COLUMN_FORMAT = 57621
const AUTO_RANDOM = 57622
const ENGINE_ATTRIBUTE = 57623
const SECONDARY_ENGINE_ATTRIBUTE = 57624
const INSERT_METHOD = 57625
const RESTRICT = 57626
const CASCADE = 57627
const ACTION = 57628
const PARTIAL = 57629
const SIMPLE = 57630
const CHECK = 57631
const ENFORCED = 57632
const RANGE = 57633
const LIST = 57634
const ALGORITHM = 57635
const LINEAR = 57636
const PARTITIONS = 57637
const SUBPARTITION = 57638
const SUBPARTITIONS = 57639
const CLUSTER = 57640
const TYPE = 57641
const ANY = 57642
const SOME = 57643
const EXTERNAL = 57644
const LOCALFILE = 57645
const URL = 57646
const PREPARE = 57647
const DEALLOCATE = 57648
const RESET = 57649
const EXTENSION = 57650
const INCREMENT = 57651
const CYCLE = 57652
const MINVALUE = 57653
const PUBLICATION = 57654
const SUBSCRIPTIONS = 57655
const PUBLICATIONS = 57656
const PROPERTIES = 57657
const PARSER = 57658
const VISIBLE = 57659
const INVISIBLE = 57660
const BTREE = 57661
const HASH = 57662
const RTREE = 57663
const BSI = 57664
const IVFFLAT = 57665
const MASTER = 57666
const ZONEMAP = 57667
const LEADING = 57668
const BOTH = 57669
const TRAILING = 57670
const UNKNOWN = 57671
const LISTS = 57672
const OP_TYPE = 57673
const REINDEX = 57674
const EXPIRE = 57675
const ACCOUNT = 57676
const ACCOUNTS = 57677
const UNLOCK = 57678
const DAY = 57679
const NEVER = 57680
const PUMP = 57681
const MYSQL_COMPATIBILITY_MODE = 57682
const UNIQUE_CHECK_ON_AUTOINCR = 57683
const MODIFY = 57684
const CHANGE = 57685
const SECOND = 57686
const ASCII = 57687
const COALESCE = 57688
const COLLATION = 57689
const HOUR = 57690
const MICROSECOND = 57691
const MINUTE = 57692
const MONTH = 57693
const QUARTER = 57694
const REPEAT = 57695
const REVERSE = 57696
const ROW_COUNT = 57697
const WEEK = 57698
const REVOKE = 57699
const FUNCTION = 57700
const PRIVILEGES = 57701
const TABLESPACE = 57702
const EXECUTE = 57703
const SUPER = 57704
const GRANT = 57705
const OPTION = 57706
const REFERENCES = 57707
const REPLICATION = 57708
const SLAVE = 57709
const CLIENT = 57710
const USAGE = 57711
const RELOAD = 57712
const FILE = 57713
const TEMPORARY = 57714
const ROUTINE = 57715
const EVENT = 57716
const SHUTDOWN = 57717
const NULLX = 57718
const AUTO_INCREMENT = 57719
const APPROXNUM = 57720
const SIGNED = 57721
const UNSIGNED = 57722
const ZEROFILL = 57723
const ENGINES = 57724
const LOW_CARDINALITY = 57725
const AUTOEXTEND_SIZE = 57726
const ADMIN_NAME = 57727
const RANDOM = 57728
const SUSPEND = 57729
const ATTRIBUTE = 57730
const HISTORY = 57731
const REUSE = 57732
const CURRENT = 57733
const OPTIONAL = 57734
const FAILED_LOGIN_ATTEMPTS = 57735
const PASSWORD_LOCK_TIME = 57736
const UNBOUNDED = 57737
const SECONDARY = 57738
const RESTRICTED = 57739
const USER = 57740
const IDENTIFIED = 57741
const CIPHER = 57742
const ISSUER = 57743
const X509 = 57744
const SUBJECT = 57745
const SAN = 57746
const REQUIRE = 57747
const SSL = 57748
const NONE = 57749
const PASSWORD = 57750
const SHARED = 57751
const EXCLUSIVE = 57752
const MAX_QUERIES_PER_HOUR = 57753
const MAX_UPDATES_PER_HOUR = 57754
const MAX_CONNECTIONS_PER_HOUR = 57755
const MAX_USER_CONNECTIONS = 57756
const FORMAT = 57757
const VERBOSE = 57758
const CONNECTION = 57759
const TRIGGERS = 57760
const PROFILES = 57761
const LOAD = 57762
const INLINE = 57763
const INFILE = 57764
const TERMINATED = 57765
const OPTIONALLY = 57766
const ENCLOSED = 57767
const ESCAPED = 57768
const STARTING = 57769
const LINES = 57770
const ROWS = 57771
const IMPORT = 57772
const DISCARD = 57773
const JSONTYPE = 57774
const MODUMP = 57775
const OVER = 57776
const PRECEDING = 57777
const FOLLOWING = 57778
const GROUPS = 57779
const DATABASES = 57780
const TABLES = 57781
const SEQUENCES = 57782
const EXTENDED = 57783
const FULL = 57784
const PROCESSLIST = 57785
const FIELDS = 57786
const COLUMNS = 57787
const OPEN = 57788
const ERRORS = 57789
const WARNINGS = 57790
const INDEXES = 57791
const SCHEMAS = 57792
const NODE = 57793
const LOCKS = 57794
const ROLES = 57795
const TABLE_NUMBER = 57796
const COLUMN_NUMBER = 57797
const TABLE_VALUES = 57798
const TABLE_SIZE = 57799
const NAMES = 57800
const GLOBAL = 57801
const PERSIST = 57802
const SESSION = 57803
const ISOLATION = 57804
const LEVEL = 57805
const READ = 57806
const WRITE = 57807
const ONLY = 57808
const REPEATABLE = 57809
const COMMITTED = 57810
const UNCOMMITTED = 57811
const SERIALIZABLE = 57812
const LOCAL = 57813
const EVENTS = 57814
const PLUGINS = 57815
const CURRENT_TIMESTAMP = 57816
const DATABASE = 57817
const CURRENT_TIME = 57818
const LOCALTIME = 57819
const LOCALTIMESTAMP = 57820
const UTC_DATE = 57821
const UTC_TIME = 57822
const UTC_TIMESTAMP = 57823
const REPLACE = 57824
const CONVERT = 57825
const SEPARATOR = 57826
const TIMESTAMPDIFF = 57827
const CURRENT_DATE = 57828
const CURRENT_USER = 57829
const CURRENT_ROLE = 57830
const SECOND_MICROSECOND = 57831
const MINUTE_MICROSECOND = 57832
const MINUTE_SECOND = 57833
const HOUR_MICROSECOND = 57834
const HOUR_SECOND = 57835
const HOUR_MINUTE = 57836
const DAY_MICROSECOND = 57837
const DAY_SECOND = 57838
const DAY_MINUTE = 57839
const DAY_HOUR = 57840
const YEAR_MONTH = 57841
const SQL_TSI_HOUR = 57842
const SQL_TSI_DAY = 57843
const SQL_TSI_WEEK = 57844
const SQL_TSI_MONTH = 57845
const SQL_TSI_QUARTER = 57846
const SQL_TSI_YEAR = 57847
const SQL_TSI_SECOND = 57848
const SQL_TSI_MINUTE = 57849
const RECURSIVE = 57850
const CONFIG = 57851
const DRAINER = 57852
const SOURCE = 57853
const STREAM = 57854
const HEADERS = 57855
const CONNECTOR = 57856
const CONNECTORS = 57857
const DAEMON = 57858
const PAUSE = 57859
const CANCEL = 57860
const TASK = 57861
const RESUME = 57862
const MATCH = 57863
const AGAINST = 57864
const BOOLEAN = 57865
const LANGUAGE = 57866
const WITH = 57867
const QUERY = 57868
const EXPANSION = 57869
const WITHOUT = 57870
const VALIDATION = 57871
const UPGRADE = 57872
const RETRY = 57873
const ADDDATE = 57874
const BIT_AND = 57875
const BIT_OR = 57876
const BIT_XOR = 57877
const CAST = 57878
const COUNT = 57879
const APPROX_COUNT = 57880
const APPROX_COUNT_DISTINCT = 57881
const SERIAL_EXTRACT = 57882
const APPROX_PERCENTILE = 57883
const CURDATE = 57884
const CURTIME = 57885
const DATE_ADD = 57886
const DATE_SUB = 57887
const EXTRACT = 57888
const GROUP_CONCAT = 57889
const MAX = 57890
const MID = 57891
const MIN = 57892
const NOW = 57893
const POSITION = 57894
const SESSION_USER = 57895
const STD = 57896
const STDDEV = 57897
const MEDIAN = 57898
const CLUSTER_CENTERS = 57899
const KMEANS = 57900
const STDDEV_POP = 57901
const STDDEV_SAMP = 57902
const SUBDATE = 57903
const SUBSTR = 57904
const SUBSTRING = 57905
const SUM = 57906
const SYSDATE = 57907
const SYSTEM_USER = 57908
const TRANSLATE = 57909
const TRIM = 57910
const VARIANCE = 57911
const VAR_POP = 57912
const VAR_SAMP = 57913
const AVG = 57914
const RANK = 57915
const ROW_NUMBER = 57916
const GROUPING = 57917
const DENSE_RANK = 57918
const BIT_CAST = 57919
const BITMAP_BIT_POSITION = 57920
const BITMAP_BUCKET_NUMBER = 57921
const BITMAP_COUNT = 57922
const BITMAP_CONSTRUCT_AGG = 57923
const BITMAP_OR_AGG = 57924
const NEXTVAL = 57925
const SETVAL = 57926
const CURRVAL = 57927
const LASTVAL = 57928
const ARROW = 57929
const ROW = 57930
const OUTFILE = 57931
const HEADER = 57932
const MAX_FILE_SIZE = 57933
const FORCE_QUOTE = 57934
const PARALLEL = 57935
const STRICT = 57936
const UNUSED = 57937
const BINDINGS = 57938
const DO = 57939
const DECLARE = 57940
const LOOP = 57941
const WHILE = 57942
const LEAVE = 57943
const ITERATE = 57944
const UNTIL = 57945
const CALL = 57946
const PREV = 57947
const SLIDING = 57948
const FILL = 57949
const SPBEGIN = 57950
const BACKEND = 57951
const SERVERS = 57952
const HANDLER = 57953
const PERCENT = 57954
const SAMPLE = 57955
const MO_TS = 57956
const KILL = 57957
const BACKUP = 57958
const FILESYSTEM = 57959
const PARALLELISM = 57960
const RESTORE = 57961
const QUERY_RESULT = 57962

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"LOWER_THAN_ORDER",
	"ORDER",
	"LOWER_THAN_COMMA",
	"SELECT",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"ROLLUP",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"UNDEFINED",
	"MERGE",
	"TEMPTABLE",
	"DEFINER",
	"INVOKER",
	"SQL",
	"SECURITY",
	"CASCADED",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"CROSS_L2",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"STAGE",
	"CREDENTIALS",
	"STAGES",
	"SNAPSHOTS",
	"INTEGRAL",
	"HEX",
	"FLOAT",
	"HEXNUM",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"VECF32",
	"VECF64",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"STAGEOPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"IVFFLAT",
	"MASTER",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"LISTS",
	"OP_TYPE",
	"REINDEX",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"UNIQUE_CHECK_ON_AUTOINCR",
	"MODIFY",
	"CHANGE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"SHARED",
	"EXCLUSIVE",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INLINE",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"JSONTYPE",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"SOURCE",
	"STREAM",
	"HEADERS",
	"CONNECTOR",
	"CONNECTORS",
	"DAEMON",
	"PAUSE",
	"CANCEL",
	"TASK",
	"RESUME",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UPGRADE",
	"RETRY",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT",
	"APPROX_COUNT_DISTINCT",
	"SERIAL_EXTRACT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"CLUSTER_CENTERS",
	"KMEANS",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"GROUPING",
	"DENSE_RANK",
	"BIT_CAST",
	"BITMAP_BIT_POSITION",
	"BITMAP_BUCKET_NUMBER",
	"BITMAP_COUNT",
	"BITMAP_CONSTRUCT_AGG",
	"BITMAP_OR_AGG",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"STRICT",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"PREV",
	"SLIDING",
	"FILL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"HANDLER",
	"PERCENT",
	"SAMPLE",
	"MO_TS",
	"KILL",
	"BACKUP",
	"FILESYSTEM",
	"PARALLELISM",
	"RESTORE",
	"QUERY_RESULT",
	"';'",
	"'{'",
	"'}'",
	"':'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:12166

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 123,
	11, 741,
	22, 741,
	-2, 734,
	-1, 144,
	240, 1145,
	242, 1044,
	-2, 1091,
	-1, 169,
	43, 564,
	242, 564,
	269, 571,
	270, 571,
	466, 564,
	-2, 601,
	-1, 210,
	641, 1904,
	-2, 477,
	-1, 511,
	641, 2023,
	-2, 365,
	-1, 569,
	641, 2082,
	-2, 363,
	-1, 570,
	641, 2083,
	-2, 364,
	-1, 571,
	641, 2084,
	-2, 366,
	-1, 704,
	321, 151,
	438, 151,
	439, 151,
	-2, 1809,
	-1, 770,
	84, 1596,
	-2, 1959,
	-1, 771,
	84, 1614,
	-2, 1930,
	-1, 775,
	84, 1615,
	-2, 1958,
	-1, 809,
	84, 1523,
	-2, 2156,
	-1, 810,
	84, 1524,
	-2, 2155,
	-1, 811,
	84, 1525,
	-2, 2145,
	-1, 812,
	84, 2117,
	-2, 2138,
	-1, 813,
	84, 2118,
	-2, 2139,
	-1, 814,
	84, 2119,
	-2, 2147,
	-1, 815,
	84, 2120,
	-2, 2127,
	-1, 816,
	84, 2121,
	-2, 2136,
	-1, 817,
	84, 2122,
	-2, 2148,
	-1, 818,
	84, 2123,
	-2, 2149,
	-1, 819,
	84, 2124,
	-2, 2154,
	-1, 820,
	84, 2125,
	-2, 2159,
	-1, 821,
	84, 2126,
	-2, 2160,
	-1, 822,
	84, 1592,
	-2, 1997,
	-1, 823,
	84, 1593,
	-2, 1793,
	-1, 824,
	84, 1594,
	-2, 2006,
	-1, 825,
	84, 1595,
	-2, 1802,
	-1, 827,
	84, 1598,
	-2, 1810,
	-1, 828,
	84, 1599,
	-2, 2030,
	-1, 830,
	84, 1602,
	-2, 1829,
	-1, 832,
	84, 1604,
	-2, 2042,
	-1, 833,
	84, 1605,
	-2, 2041,
	-1, 834,
	84, 1606,
	-2, 1873,
	-1, 835,
	84, 1607,
	-2, 1954,
	-1, 838,
	84, 1610,
	-2, 2053,
	-1, 840,
	84, 1612,
	-2, 2056,
	-1, 841,
	84, 1613,
	-2, 2058,
	-1, 842,
	84, 1616,
	-2, 2066,
	-1, 843,
	84, 1617,
	-2, 1939,
	-1, 844,
	84, 1618,
	-2, 1984,
	-1, 845,
	84, 1619,
	-2, 1949,
	-1, 846,
	84, 1620,
	-2, 1974,
	-1, 857,
	84, 1501,
	-2, 2150,
	-1, 858,
	84, 1502,
	-2, 2151,
	-1, 859,
	84, 1503,
	-2, 2152,
	-1, 948,
	461, 601,
	462, 601,
	-2, 565,
	-1, 995,
	126, 1793,
	137, 1793,
	157, 1793,
	-2, 1767,
	-1, 1111,
	22, 768,
	-2, 717,
	-1, 1217,
	11, 741,
	22, 741,
	-2, 1380,
	-1, 1300,
	22, 768,
	-2, 717,
	-1, 1630,
	84, 1667,
	-2, 1956,
	-1, 1631,
	84, 1668,
	-2, 1957,
	-1, 1789,
	85, 921,
	-2, 927,
	-1, 2223,
	109, 1083,
	153, 1083,
	192, 1083,
	195, 1083,
	282, 1083,
	-2, 1076,
	-1, 2375,
	11, 741,
	22, 741,
	-2, 864,
	-1, 2407,
	85, 1753,
	158, 1753,
	-2, 1941,
	-1, 2408,
	85, 1753,
	158, 1753,
	-2, 1940,
	-1, 2409,
	85, 1729,
	158, 1729,
	-2, 1927,
	-1, 2410,
	85, 1730,
	158, 1730,
	-2, 1932,
	-1, 2411,
	85, 1731,
	158, 1731,
	-2, 1861,
	-1, 2412,
	85, 1732,
	158, 1732,
	-2, 1855,
	-1, 2413,
	85, 1733,
	158, 1733,
	-2, 1783,
	-1, 2414,
	85, 1734,
	158, 1734,
	-2, 1929,
	-1, 2415,
	85, 1735,
	158, 1735,
	-2, 1859,
	-1, 2416,
	85, 1736,
	158, 1736,
	-2, 1854,
	-1, 2417,
	85, 1737,
	158, 1737,
	-2, 1843,
	-1, 2418,
	85, 1753,
	158, 1753,
	-2, 1844,
	-1, 2419,
	85, 1753,
	158, 1753,
	-2, 1845,
	-1, 2421,
	85, 1742,
	158, 1742,
	-2, 1974,
	-1, 2422,
	85, 1720,
	158, 1720,
	-2, 1959,
	-1, 2423,
	85, 1751,
	158, 1751,
	-2, 1930,
	-1, 2424,
	85, 1751,
	158, 1751,
	-2, 1958,
	-1, 2425,
	85, 1751,
	158, 1751,
	-2, 1811,
	-1, 2426,
	85, 1749,
	158, 1749,
	-2, 1949,
	-1, 2427,
	85, 1746,
	158, 1746,
	-2, 1834,
	-1, 2428,
	84, 1701,
	85, 1701,
	158, 1701,
	396, 1701,
	397, 1701,
	398, 1701,
	-2, 1782,
	-1, 2429,
	84, 1702,
	85, 1702,
	158, 1702,
	396, 1702,
	397, 1702,
	398, 1702,
	-2, 1784,
	-1, 2430,
	84, 1703,
	85, 1703,
	158, 1703,
	396, 1703,
	397, 1703,
	398, 1703,
	-2, 2002,
	-1, 2431,
	84, 1705,
	85, 1705,
	158, 1705,
	396, 1705,
	397, 1705,
	398, 1705,
	-2, 1931,
	-1, 2432,
	84, 1707,
	85, 1707,
	158, 1707,
	396, 1707,
	397, 1707,
	398, 1707,
	-2, 1913,
	-1, 2433,
	84, 1709,
	85, 1709,
	158, 1709,
	396, 1709,
	397, 1709,
	398, 1709,
	-2, 1860,
	-1, 2434,
	84, 1711,
	85, 1711,
	158, 1711,
	396, 1711,
	397, 1711,
	398, 1711,
	-2, 1839,
	-1, 2435,
	84, 1712,
	85, 1712,
	158, 1712,
	396, 1712,
	397, 1712,
	398, 1712,
	-2, 1840,
	-1, 2436,
	84, 1714,
	85, 1714,
	158, 1714,
	396, 1714,
	397, 1714,
	398, 1714,
	-2, 1781,
	-1, 2437,
	85, 1756,
	158, 1756,
	396, 1756,
	397, 1756,
	398, 1756,
	-2, 1816,
	-1, 2438,
	85, 1756,
	158, 1756,
	396, 1756,
	397, 1756,
	398, 1756,
	-2, 1830,
	-1, 2439,
	85, 1759,
	158, 1759,
	396, 1759,
	397, 1759,
	398, 1759,
	-2, 1812,
	-1, 2440,
	85, 1759,
	158, 1759,
	396, 1759,
	397, 1759,
	398, 1759,
	-2, 1876,
	-1, 2441,
	85, 1756,
	158, 1756,
	396, 1756,
	397, 1756,
	398, 1756,
	-2, 1897,
	-1, 2645,
	109, 1083,
	153, 1083,
	192, 1083,
	195, 1083,
	282, 1083,
	-2, 1077,
	-1, 2663,
	82, 661,
	158, 661,
	-2, 1260,
	-1, 3069,
	195, 1083,
	306, 1348,
	-2, 1320,
	-1, 3236,
	109, 1083,
	153, 1083,
	192, 1083,
	195, 1083,
	-2, 1201,
	-1, 3238,
	109, 1083,
	153, 1083,
	192, 1083,
	195, 1083,
	-2, 1201,
	-1, 3250,
	82, 661,
	158, 661,
	-2, 1260,
	-1, 3272,
	195, 1083,
	306, 1348,
	-2, 1321,
	-1, 3412,
	109, 1083,
	153, 1083,
	192, 1083,
	195, 1083,
	-2, 1202,
	-1, 3439,
	85, 1163,
	158, 1163,
	-2, 1083,
	-1, 3573,
	85, 1163,
	158, 1163,
	-2, 1083,
	-1, 3726,
	85, 1167,
	158, 1167,
	-2, 1083,
	-1, 3774,
	85, 1168,
	158, 1168,
	-2, 1083,
}

const yyPrivate = 57344

const yyLast = 49056

var yyAct = [...]int{
	737, 714, 3820, 739, 3794, 2693, 199, 3730, 1874, 3813,
	1610, 3257, 3351, 3736, 708, 3088, 3631, 3737, 3729, 3573,
	3055, 3614, 3657, 723, 3688, 716, 3158, 2496, 3467, 3551,
	3286, 3608, 1252, 2687, 3159, 3572, 3399, 1606, 3635, 3400,
	1447, 3397, 605, 3497, 767, 2690, 3355, 994, 3542, 1112,
	1385, 1524, 1391, 3615, 623, 3346, 629, 629, 1822, 3223,
	37, 3617, 629, 646, 655, 3419, 1657, 655, 2666, 1106,
	3273, 2271, 3409, 3025, 1613, 3381, 3239, 2986, 3414, 3064,
	3156, 1965, 3014, 2802, 2801, 3211, 712, 184, 2717, 2405,
	2800, 3084, 2783, 3073, 3066, 3241, 3114, 2531, 3198, 2864,
	2077, 3144, 2035, 2824, 2403, 667, 1962, 3124, 2274, 2797,
	663, 2634, 1671, 2993, 1440, 2997, 1834, 3072, 1930, 2987,
	706, 3034, 2253, 652, 2696, 2991, 2369, 2234, 1980, 2989,
	2969, 2646, 2187, 2988, 2984, 2201, 2911, 1513, 122, 711,
	2304, 2186, 1520, 2060, 1102, 2352, 2837, 923, 1764, 2073,
	2475, 2044, 2043, 36, 59, 2036, 2847, 2457, 1958, 2008,
	1525, 1933, 1528, 2072, 2370, 2357, 1931, 2622, 2617, 2719,
	2272, 2698, 1853, 605, 1864, 2658, 2223, 2233, 195, 8,
	194, 7, 1798, 6, 1051, 2401, 1604, 2563, 1487, 715,
	2074, 622, 1557, 1456, 1325, 1426, 988, 2213, 1664, 199,
	705, 199, 1833, 1042, 1043, 1356, 2107, 1644, 2267, 2084,
	629, 1036, 1037, 713, 1358, 1125, 1041, 957, 724, 1595,
	2042, 27, 2024, 2039, 1494, 2564, 1539, 1998, 2377, 1794,
	1425, 16, 1603, 1797, 1374, 660, 987, 14, 604, 638,
	1423, 1479, 669, 1672, 670, 922, 1609, 15, 1386, 861,
	100, 24, 641, 1370, 33, 17, 10, 1486, 23, 1394,
	899, 1362, 175, 185, 905, 181, 920, 1298, 1549, 1253,
	1039, 666, 943, 1185, 1186, 1187, 1184, 1185, 1186, 1187,
	1184, 654, 2081, 3536, 651, 2600, 1038, 3427, 1040, 1548,
	2600, 2600, 2379, 2881, 647, 2880, 3253, 3041, 1107, 2091,
	649, 3226, 1185, 1186, 1187, 1184, 2254, 2519, 2460, 1108,
	650, 1777, 1035, 183, 1501, 1000, 624, 648, 3151, 2463,
	2461, 863, 634, 2458, 1497, 1034, 1035, 864, 2185, 1317,
	1002, 1003, 1035, 2962, 2959, 2964, 2961, 3805, 625, 1408,
	2592, 2590, 1771, 1313, 1395, 1499, 3344, 2860, 658, 3276,
	1185, 1186, 1187, 1184, 2858, 1185, 1186, 1187, 1184, 2013,
	3603, 3504, 8, 3498, 7, 1107, 3347, 1033, 3157, 2057,
	3619, 1247, 2038, 862, 2938, 2030, 182, 55, 171, 145,
	927, 2312, 2594, 182, 873, 182, 3386, 2224, 2513, 3288,
	1183, 3382, 1147, 3711, 182, 630, 182, 55, 171, 145,
	182, 182, 3279, 2505, 1535, 2652, 2078, 1320, 182, 55,
	171, 145, 1543, 3274, 3240, 2225, 3558, 182, 3296, 3297,
	1534, 182, 3524, 3668, 3275, 1466, 1465, 1464, 1006, 1004,
	182, 55, 171, 145, 1938, 182, 55, 171, 145, 1555,
	1005, 1123, 2936, 1540, 1348, 2795, 665, 176, 1331, 2883,
	2872, 925, 926, 1779, 2650, 2089, 176, 3526, 2218, 2395,
	3559, 3280, 967, 182, 1182, 1542, 121, 176, 1321, 1975,
	1552, 176, 176, 1578, 852, 2396, 851, 853, 854, 176,
	855, 856, 1404, 2383, 1596, 1405, 2382, 1600, 176, 2384,
	628, 628, 1554, 874, 2830, 1566, 636, 998, 1942, 1155,
	1120, 176, 1157, 999, 2653, 2619, 176, 1162, 2831, 2832,
	1163, 1599, 121, 1943, 1944, 2620, 2963, 2960, 1781, 1782,
	1427, 2476, 1429, 1390, 3059, 966, 1382, 1389, 1392, 1393,
	1158, 976, 1392, 1393, 176, 1175, 1848, 1612, 1165, 3740,
	3741, 3368, 1180, 997, 996, 969, 3622, 3701, 968, 3621,
	3700, 3622, 3708, 3606, 3621, 3295, 3620, 2275, 3620, 3699,
	2174, 3761, 3704, 3057, 2618, 3798, 3799, 2865, 3160, 3160,
	3690, 1407, 3690, 3693, 3609, 3610, 3611, 3612, 3501, 1616,
	1330, 2500, 3284, 1117, 2866, 953, 2867, 2093, 2595, 1959,
	3212, 1500, 1498, 928, 3628, 1601, 1128, 3173, 2085, 3391,
	2738, 3219, 2021, 911, 3281, 3285, 3283, 3282, 2345, 1953,
	1151, 1949, 1591, 3006, 3008, 144, 1587, 180, 1160, 1598,
	930, 2212, 1507, 1506, 2609, 1178, 1179, 629, 629, 3298,
	2901, 2625, 1167, 3713, 3714, 1168, 1153, 169, 629, 1116,
	2998, 3706, 3290, 3291, 636, 2899, 3709, 3710, 1156, 1159,
	3528, 3529, 1177, 2510, 168, 2310, 1536, 655, 655, 1150,
	629, 3345, 2787, 1170, 701, 2859, 3002, 703, 2347, 3003,
	3004, 3533, 702, 3388, 1152, 972, 970, 2607, 971, 3367,
	2348, 2349, 1161, 952, 950, 3005, 1128, 3369, 3702, 3522,
	3298, 876, 3202, 1045, 3739, 2353, 1615, 1614, 3516, 2068,
	3517, 2593, 3277, 652, 652, 949, 1172, 621, 3289, 2090,
	2217, 3313, 3769, 2608, 3087, 3310, 3511, 924, 3023, 3061,
	3563, 1973, 1974, 1225, 1188, 1380, 1417, 877, 929, 962,
	3035, 1550, 1218, 1332, 1406, 2659, 1597, 3085, 3086, 1316,
	1547, 1228, 3650, 1166, 2793, 3645, 657, 1173, 1174, 656,
	2220, 1154, 958, 3303, 3519, 2096, 2098, 2099, 3516, 1164,
	3517, 2970, 3555, 1115, 977, 3535, 1236, 3176, 3636, 1116,
	1142, 3652, 2905, 2599, 3494, 1109, 2079, 707, 1108, 1108,
	1108, 3000, 1171, 1000, 3258, 3518, 973, 2079, 959, 963,
	2079, 3658, 1130, 1129, 1256, 2692, 1122, 3056, 1002, 1003,
	653, 2882, 1622, 1625, 1626, 2879, 3265, 1169, 946, 1369,
	944, 948, 966, 1623, 3519, 3314, 945, 942, 941, 3627,
	947, 932, 933, 931, 934, 935, 936, 937, 3458, 964,
	2112, 965, 653, 1035, 1035, 1035, 2080, 1035, 3294, 1035,
	1035, 3712, 960, 961, 913, 3518, 914, 1108, 2092, 3447,
	975, 3090, 2459, 2322, 653, 3831, 1000, 1502, 3557, 653,
	3358, 664, 56, 2321, 651, 651, 3816, 1133, 2631, 707,
	2767, 1002, 1003, 2398, 647, 647, 1436, 3564, 1319, 956,
	649, 649, 1130, 1129, 3527, 955, 2277, 1435, 1328, 623,
	650, 650, 862, 1257, 56, 1119, 1121, 648, 648, 2591,
	951, 1392, 1393, 1111, 1131, 146, 1139, 3387, 3453, 2514,
	1296, 1140, 146, 1301, 146, 3293, 56, 177, 178, 3556,
	179, 56, 923, 146, 1960, 146, 3009, 974, 1780, 146,
	146, 1367, 1221, 1222, 1223, 1224, 1141, 146, 1135, 1136,
	1392, 1393, 2624, 2902, 1226, 3062, 146, 2290, 1366, 1381,
	146, 2999, 1365, 2270, 2293, 3659, 1110, 2688, 2689, 146,
	2692, 3728, 999, 3530, 146, 1104, 3577, 3392, 2342, 2343,
	1384, 1383, 3543, 629, 3705, 1419, 3065, 1103, 3242, 954,
	3001, 605, 605, 2739, 2958, 2740, 2741, 2313, 2270, 3342,
	605, 605, 146, 1388, 1451, 1451, 2097, 629, 2287, 2628,
	2629, 1952, 3163, 1950, 1592, 3817, 3512, 1326, 3085, 3086,
	3513, 2292, 2826, 2828, 2627, 665, 2842, 2843, 3687, 655,
	1480, 623, 1216, 2276, 1424, 1490, 1490, 3624, 2278, 3377,
	1333, 1449, 1449, 3081, 2974, 1453, 199, 2506, 2387, 1489,
	1489, 2308, 3089, 1624, 2082, 605, 1147, 1340, 1458, 1268,
	1269, 2280, 2603, 2904, 2291, 2638, 2641, 2642, 2643, 2639,
	2640, 628, 1105, 1346, 1345, 1344, 3512, 1343, 659, 3205,
	3616, 967, 1114, 3468, 3469, 3470, 3474, 3472, 3473, 3471,
	1329, 2539, 2279, 917, 918, 919, 1335, 1336, 1337, 1338,
	1339, 1418, 1341, 3460, 1138, 3576, 1532, 912, 1347, 3449,
	3082, 1537, 1508, 3448, 2094, 2095, 1445, 1446, 1546, 1094,
	1090, 1091, 1092, 1093, 2736, 2544, 1353, 2543, 2542, 2540,
	2768, 2770, 2771, 2772, 2769, 3199, 2605, 2108, 2913, 2912,
	1302, 1300, 1146, 1576, 2195, 2194, 3814, 3815, 2193, 3727,
	1361, 915, 3454, 3455, 1324, 967, 1368, 1451, 1784, 1451,
	1116, 1571, 1572, 1378, 969, 1334, 3378, 968, 1322, 1323,
	1556, 1397, 1398, 1541, 1400, 1401, 1785, 1402, 882, 2975,
	1553, 1376, 1377, 1026, 1031, 1032, 967, 1431, 1433, 2678,
	2827, 2192, 2281, 652, 2541, 2190, 1443, 1444, 1355, 3021,
	1511, 1778, 1514, 1515, 1783, 1586, 2758, 2759, 1617, 1618,
	1619, 1620, 1621, 1516, 1517, 878, 2334, 2286, 2367, 879,
	3420, 2284, 1481, 1409, 1410, 1522, 1523, 1451, 1396, 881,
	2307, 1399, 1363, 884, 883, 1200, 3832, 1434, 969, 2215,
	3697, 968, 3164, 1363, 1670, 2142, 1183, 3121, 2141, 3827,
	1662, 1503, 1593, 1575, 1666, 1667, 1668, 1669, 1719, 1545,
	1113, 1574, 1527, 1703, 1658, 1531, 1530, 1003, 3040, 969,
	3822, 1713, 968, 2664, 1003, 1459, 634, 3811, 1147, 866,
	867, 868, 869, 1472, 1611, 2604, 1144, 3776, 2478, 1371,
	1375, 1375, 1375, 1491, 2204, 1632, 1633, 1634, 1635, 1636,
	1637, 1638, 1639, 1640, 1641, 1642, 1643, 3117, 1608, 1492,
	1478, 1655, 1656, 3083, 1371, 1371, 3839, 2205, 2206, 2277,
	2280, 1183, 2087, 978, 1766, 1116, 3748, 1113, 3022, 1145,
	3208, 2757, 3742, 2545, 2546, 3724, 1786, 1589, 3678, 3175,
	1627, 1480, 2179, 3823, 2665, 2368, 1795, 1451, 1800, 1801,
	3777, 1803, 1419, 629, 651, 2249, 2214, 1762, 629, 1728,
	3777, 1451, 1704, 1145, 647, 923, 1584, 3653, 1823, 3641,
	649, 1559, 2368, 2505, 3094, 1451, 1581, 1028, 1029, 1030,
	650, 1419, 1580, 3121, 1219, 1565, 646, 648, 1827, 1564,
	3596, 1765, 1567, 3595, 3590, 1585, 1583, 3092, 1602, 3749,
	1582, 1579, 1607, 1605, 3589, 3539, 1847, 1183, 3725, 1718,
	3588, 3539, 1843, 2968, 2665, 1854, 1854, 1415, 1419, 3587,
	1419, 1419, 2966, 2368, 629, 629, 3567, 1795, 1924, 871,
	2845, 1451, 1927, 1928, 1940, 3566, 1653, 1654, 2611, 1646,
	2087, 1457, 3642, 3538, 1185, 1186, 1187, 1184, 605, 1773,
	1451, 2281, 3319, 2596, 3267, 1802, 2276, 2270, 2275, 3232,
	2273, 2278, 1851, 3597, 2495, 1766, 2238, 3539, 1804, 2483,
	1766, 1766, 2265, 2398, 1297, 2078, 1941, 3539, 629, 1795,
	1451, 2263, 1985, 3539, 629, 629, 629, 663, 663, 2184,
	2248, 3191, 3539, 2178, 1995, 1996, 1997, 3187, 3102, 2087,
	2003, 2177, 2001, 1768, 1876, 2821, 2570, 199, 2087, 2149,
	199, 199, 2069, 199, 2562, 2279, 3539, 2521, 1922, 1976,
	2011, 1971, 1354, 2014, 1733, 2398, 2017, 3268, 1661, 2019,
	740, 750, 3233, 1437, 1857, 3824, 1791, 1792, 1793, 3253,
	741, 2849, 742, 746, 749, 745, 743, 744, 1806, 1807,
	1808, 1809, 1954, 1719, 1719, 2046, 1946, 1763, 1948, 2503,
	1769, 2491, 1968, 1969, 3192, 1719, 1719, 2485, 1966, 1967,
	3188, 3103, 2062, 2667, 1185, 1186, 1187, 1184, 2368, 1183,
	2508, 2480, 1790, 1825, 1826, 2061, 1984, 1183, 1855, 3218,
	1183, 1831, 1832, 1799, 2012, 747, 1594, 2015, 2016, 1961,
	2018, 1823, 1706, 1819, 2507, 1451, 2076, 1815, 1841, 1842,
	1820, 1856, 1987, 1988, 1989, 2472, 1541, 2056, 2277, 2280,
	2934, 1828, 1858, 1859, 1840, 1836, 2048, 748, 1852, 1830,
	1824, 3045, 2238, 3833, 2481, 2499, 1845, 2257, 2470, 652,
	2486, 2468, 2466, 1999, 1835, 2137, 1837, 1838, 2237, 2122,
	1839, 2180, 1701, 1702, 2481, 1705, 1921, 2156, 2067, 2070,
	1844, 2006, 1929, 1720, 1926, 2052, 1846, 2121, 2155, 1849,
	1850, 1945, 2140, 1947, 2131, 1993, 1727, 1799, 1729, 1561,
	1730, 1731, 1732, 1233, 1955, 2130, 2111, 3484, 2473, 1132,
	2116, 1000, 1185, 1186, 1187, 1184, 2129, 1185, 1186, 1187,
	1184, 1100, 1095, 1000, 2041, 3317, 1002, 1003, 1982, 3646,
	1003, 2471, 1983, 1216, 2467, 2467, 2041, 2086, 1002, 1003,
	1371, 2238, 1990, 1991, 2179, 1568, 1605, 1970, 2009, 2007,
	1183, 2128, 1403, 2896, 1375, 1439, 1359, 1147, 2118, 2135,
	1360, 1183, 3802, 2120, 880, 1183, 1375, 1183, 2105, 2106,
	2281, 1372, 2026, 3647, 1441, 2276, 2270, 2275, 1183, 2273,
	2278, 2152, 2058, 1708, 1707, 1442, 2157, 2158, 2159, 1183,
	2305, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170,
	2171, 2172, 2047, 3421, 3245, 3243, 2055, 1805, 2053, 2189,
	2087, 2191, 1810, 3537, 3508, 2066, 1000, 3451, 1569, 706,
	651, 3450, 629, 629, 629, 3436, 3393, 3225, 1708, 1707,
	647, 1002, 1003, 3036, 2279, 3122, 649, 629, 629, 629,
	629, 3113, 3107, 2071, 3104, 3051, 650, 3422, 3246, 3244,
	2235, 2065, 3016, 648, 1359, 2064, 2790, 1438, 1360, 2789,
	2241, 1419, 1413, 1414, 2636, 1416, 2601, 1420, 1421, 1422,
	2518, 866, 867, 868, 869, 2484, 2389, 2100, 1860, 1861,
	1203, 1204, 1205, 1206, 1207, 1200, 2102, 1419, 2051, 2050,
	1373, 2109, 2114, 2103, 2104, 885, 1745, 1646, 2049, 1467,
	1468, 1469, 1470, 1471, 2299, 1473, 1474, 1475, 1476, 1477,
	1350, 1349, 3037, 1483, 1484, 1485, 1199, 1198, 1208, 1209,
	1201, 1202, 1203, 1204, 1205, 1206, 1207, 1200, 1118, 1709,
	1710, 1711, 1981, 2458, 3149, 2144, 2528, 2452, 1981, 1981,
	1981, 1738, 1725, 2010, 1665, 1726, 2524, 1665, 2851, 2115,
	1462, 1187, 1184, 1495, 2306, 2010, 3038, 1185, 1186, 1187,
	1184, 3698, 1739, 1740, 1787, 1495, 2372, 2372, 1940, 2372,
	1199, 1198, 1208, 1209, 1201, 1202, 1203, 1204, 1205, 1206,
	1207, 1200, 1761, 1185, 1186, 1187, 1184, 605, 605, 1184,
	3463, 1766, 2181, 1766, 3152, 1116, 1185, 1186, 1187, 1184,
	3462, 1451, 629, 2259, 2868, 2728, 2256, 2462, 2258, 2726,
	2704, 1766, 1766, 2173, 2175, 2176, 2702, 629, 3442, 2198,
	1256, 871, 3807, 1116, 2442, 623, 3830, 2269, 752, 123,
	1490, 2268, 1940, 1652, 123, 2447, 2635, 2449, 2393, 2216,
	3806, 199, 3394, 3395, 1489, 1185, 1186, 1187, 1184, 1649,
	1651, 1648, 2311, 1650, 3150, 2314, 2315, 2316, 2317, 2318,
	2319, 2320, 1235, 2242, 2323, 2324, 2325, 2326, 2327, 2328,
	2329, 2330, 2331, 2332, 2333, 1234, 2335, 2336, 2337, 2338,
	2339, 2488, 2340, 2385, 3752, 2386, 2376, 3389, 635, 2250,
	3829, 123, 3216, 2374, 2487, 2378, 2490, 2262, 2501, 2497,
	2498, 3723, 2076, 2390, 2391, 1723, 1000, 2282, 2283, 1451,
	2288, 1451, 2584, 1451, 2585, 3722, 2255, 3648, 1116, 1257,
	1724, 1002, 1003, 2243, 2244, 3592, 2520, 2779, 2453, 3580,
	2245, 2777, 2775, 2246, 2247, 2251, 3570, 2764, 2252, 3560,
	1185, 1186, 1187, 1184, 3499, 2400, 3390, 2406, 2511, 2530,
	2446, 3217, 1451, 2548, 2350, 1185, 1186, 1187, 1184, 3424,
	2529, 3423, 3224, 2535, 2454, 3259, 3247, 2380, 2555, 3215,
	2549, 2550, 3007, 1451, 1185, 1186, 1187, 1184, 2552, 2553,
	2892, 2863, 2862, 1431, 1433, 2762, 2778, 2761, 2915, 1449,
	2776, 2774, 2547, 2927, 2558, 2394, 2763, 2760, 2752, 2397,
	1185, 1186, 1187, 1184, 2746, 1001, 2745, 2133, 2744, 1496,
	1449, 2743, 123, 2556, 2597, 2474, 2443, 2183, 2445, 2029,
	2028, 2602, 2027, 1617, 1766, 2023, 1375, 123, 2022, 123,
	2559, 2560, 1979, 1978, 1116, 1977, 1562, 2532, 1116, 2532,
	1315, 3115, 2515, 2992, 3826, 1451, 3825, 2536, 2632, 2633,
	1185, 1186, 1187, 1184, 2926, 1924, 2208, 2209, 2210, 3665,
	1098, 2557, 3352, 2663, 2517, 1185, 1186, 1187, 1184, 2669,
	2554, 2226, 2227, 2228, 2229, 2132, 2512, 3531, 3532, 2493,
	2526, 1185, 1186, 1187, 1184, 3800, 3768, 3767, 2680, 2502,
	2444, 2588, 2504, 2673, 2674, 2509, 3764, 3685, 1116, 2451,
	3630, 3398, 1185, 1186, 1187, 1184, 2701, 3613, 3604, 3733,
	3584, 3579, 3578, 1116, 1116, 1116, 1854, 2651, 1097, 1116,
	3634, 2712, 2713, 2714, 2715, 1116, 2722, 3534, 2723, 2724,
	3500, 2725, 2647, 2727, 2101, 2538, 1185, 1186, 1187, 1184,
	2522, 2523, 3444, 3661, 2722, 2648, 3405, 1185, 1186, 1187,
	1184, 2660, 2525, 3375, 3372, 1605, 2372, 3371, 2612, 3350,
	3348, 3327, 2406, 3326, 1986, 1185, 1186, 1187, 1184, 3323,
	2780, 3321, 1876, 2565, 2566, 2784, 2670, 3254, 605, 2571,
	3214, 2682, 3213, 2621, 1924, 1116, 1940, 1940, 1940, 1940,
	1201, 1202, 1203, 1204, 1205, 1206, 1207, 1200, 1116, 1940,
	3571, 3210, 2372, 1191, 1192, 1193, 1194, 1195, 1196, 1197,
	1189, 1003, 2699, 3200, 3184, 3182, 2699, 2695, 1451, 3110,
	3109, 2150, 2151, 2613, 2153, 3100, 3099, 2630, 3017, 629,
	629, 2160, 2706, 2654, 701, 2979, 1457, 703, 2707, 2708,
	2662, 2978, 702, 2711, 2614, 8, 2616, 7, 2973, 2718,
	2668, 1981, 2188, 2906, 1199, 1198, 1208, 1209, 1201, 1202,
	1203, 1204, 1205, 1206, 1207, 1200, 2681, 2903, 2684, 2861,
	2835, 2773, 2697, 2765, 2755, 2753, 2749, 2734, 2735, 2703,
	2748, 2747, 2817, 2598, 2494, 199, 2032, 2671, 2710, 2025,
	199, 1799, 2750, 2751, 808, 807, 2676, 2677, 1776, 2700,
	1775, 1563, 1264, 2855, 3373, 2857, 1260, 1259, 1101, 2803,
	875, 3521, 1719, 2742, 1719, 3520, 2786, 2878, 3509, 3374,
	2754, 3359, 2803, 3238, 1766, 3237, 2846, 3236, 3207, 1766,
	2891, 1185, 1186, 1187, 1184, 3196, 1451, 2672, 3194, 2898,
	2061, 3193, 2675, 2785, 3190, 2679, 3189, 3183, 2791, 3181,
	3165, 3155, 2804, 2805, 2806, 2807, 3154, 3140, 3139, 3046,
	2818, 2982, 2816, 2965, 2932, 3361, 2820, 2925, 2917, 2916,
	2910, 2873, 2852, 3360, 2788, 2909, 1515, 2856, 2836, 3307,
	2844, 2833, 2884, 3179, 2610, 2469, 1516, 1517, 2465, 2930,
	2464, 1765, 1185, 1186, 1187, 1184, 2877, 1522, 1523, 2931,
	1185, 1186, 1187, 1184, 2161, 2819, 1185, 1186, 1187, 1184,
	1185, 1186, 1187, 1184, 2154, 2875, 1185, 1186, 1187, 1184,
	2929, 2148, 2147, 2146, 2920, 2885, 2922, 2928, 182, 1527,
	171, 145, 1531, 1530, 2145, 2976, 2143, 2139, 2850, 2977,
	2138, 2136, 2895, 2900, 2854, 2853, 1116, 1185, 1186, 1187,
	1184, 2127, 2995, 2124, 1185, 1186, 1187, 1184, 2871, 2123,
	2031, 1759, 3011, 2874, 2869, 1003, 2876, 1758, 629, 2888,
	2886, 123, 123, 1001, 1757, 2887, 1003, 1722, 1721, 1712,
	3026, 1116, 1463, 1461, 629, 2894, 1116, 1116, 182, 2694,
	3751, 2907, 2582, 1254, 2908, 1940, 2235, 2661, 3044, 176,
	3660, 2914, 3599, 3586, 2119, 3581, 1510, 2918, 2919, 3478,
	3461, 3457, 2923, 2924, 3435, 3418, 2921, 2299, 3335, 1185,
	1186, 1187, 1184, 3333, 3305, 3020, 3304, 3301, 3300, 3071,
	3266, 3074, 2981, 3074, 3074, 3263, 3261, 3227, 1116, 2967,
	2581, 1521, 1512, 3029, 1526, 1529, 1217, 1518, 3033, 1357,
	3078, 2781, 2705, 3131, 2647, 2656, 2655, 3095, 2649, 176,
	2971, 3091, 2615, 2972, 2583, 1451, 1451, 1185, 1186, 1187,
	1184, 3058, 3060, 2479, 3054, 2388, 3093, 2980, 2341, 2939,
	2940, 1185, 1186, 1187, 1184, 2941, 2942, 2943, 2944, 2236,
	2945, 2946, 2947, 2948, 2949, 2950, 2951, 2952, 2953, 2954,
	2955, 2207, 1449, 1449, 2182, 3096, 3097, 3019, 3012, 3013,
	3677, 2580, 629, 3042, 2829, 3028, 3069, 2995, 1647, 1000,
	3031, 3032, 3070, 3043, 3675, 2579, 1419, 176, 3048, 1924,
	1924, 3079, 2578, 3053, 1002, 1003, 3039, 1003, 1185, 1186,
	1187, 1184, 1003, 2577, 1992, 2269, 1789, 1772, 1590, 2268,
	3075, 3076, 1185, 1186, 1187, 1184, 2576, 3080, 1544, 1185,
	1186, 1187, 1184, 2839, 2840, 1519, 1314, 1299, 1003, 1295,
	1185, 1186, 1187, 1184, 1294, 1293, 1116, 1292, 1291, 1290,
	2548, 1289, 1288, 1185, 1186, 1187, 1184, 3673, 2575, 3153,
	3671, 3433, 2574, 1303, 1734, 1735, 1736, 1737, 2573, 1287,
	1741, 1742, 1743, 1744, 1746, 1747, 1748, 1749, 1750, 1751,
	1752, 1753, 1754, 1755, 1756, 1185, 1186, 1187, 1184, 1185,
	1186, 1187, 1184, 2125, 3052, 1185, 1186, 1187, 1184, 3077,
	3106, 3431, 1286, 3108, 3112, 629, 1285, 3111, 3118, 3119,
	3101, 3105, 3116, 1284, 3129, 1199, 1198, 1208, 1209, 1201,
	1202, 1203, 1204, 1205, 1206, 1207, 1200, 3133, 1283, 1282,
	1416, 1281, 1280, 3047, 1279, 3136, 3137, 3138, 3049, 3050,
	1278, 1277, 3178, 3130, 2572, 1276, 1275, 1274, 1273, 3180,
	3142, 1272, 3148, 1271, 1270, 1199, 1198, 1208, 1209, 1201,
	1202, 1203, 1204, 1205, 1206, 1207, 1200, 1267, 1266, 1265,
	2406, 1185, 1186, 1187, 1184, 3166, 3203, 1263, 1262, 3302,
	2569, 3195, 1261, 1258, 1251, 1250, 3167, 3168, 1185, 1186,
	1187, 1184, 1248, 1247, 1246, 1245, 3172, 1244, 1460, 3171,
	2568, 1243, 635, 1242, 1241, 2532, 3185, 1185, 1186, 1187,
	1184, 1240, 2117, 3177, 1208, 1209, 1201, 1202, 1203, 1204,
	1205, 1206, 1207, 1200, 3231, 1239, 1238, 1185, 1186, 1187,
	1184, 1237, 1232, 1231, 123, 1230, 1229, 1149, 1099, 2240,
	2372, 1940, 3250, 3782, 3206, 2222, 2567, 3125, 3126, 1137,
	3780, 3209, 1198, 1208, 1209, 1201, 1202, 1203, 1204, 1205,
	1206, 1207, 1200, 3120, 3738, 3128, 3269, 2637, 2399, 1116,
	3201, 2034, 3018, 1185, 1186, 1187, 1184, 2561, 3071, 3132,
	1148, 3197, 1116, 2815, 2810, 2364, 2365, 2551, 3030, 1185,
	1186, 1187, 1184, 1116, 2809, 3316, 2808, 2527, 2813, 1451,
	3440, 123, 1660, 2814, 1185, 1186, 1187, 1184, 123, 3221,
	3222, 2492, 2482, 3252, 1185, 1186, 1187, 1184, 1924, 1351,
	3015, 123, 1116, 1766, 1185, 1186, 1187, 1184, 108, 1185,
	1186, 1187, 1184, 123, 58, 3598, 1449, 1766, 1003, 3318,
	3332, 3299, 2811, 3334, 3260, 1003, 3262, 2812, 3292, 3256,
	57, 199, 1817, 1818, 1812, 1813, 1814, 3169, 3170, 3249,
	3340, 3228, 3229, 3230, 1116, 3337, 3248, 3234, 3235, 3339,
	3329, 3306, 2890, 3338, 3311, 3308, 2359, 2363, 2364, 2365,
	2360, 3315, 2361, 2366, 2309, 3067, 2362, 3068, 631, 2730,
	3312, 3143, 3322, 3270, 632, 3325, 3320, 2731, 2732, 2733,
	1913, 1504, 2477, 3376, 3331, 3330, 3309, 2516, 3328, 1116,
	633, 2497, 2498, 2197, 1558, 3324, 1981, 2718, 1538, 1994,
	1143, 2990, 3357, 3336, 2983, 2683, 2657, 2261, 1116, 1451,
	1451, 2231, 1821, 1788, 3026, 1708, 1707, 3791, 3343, 1310,
	1311, 1308, 1309, 1306, 1307, 3413, 2803, 3413, 3353, 3354,
	1304, 1305, 3583, 3098, 2351, 2346, 1925, 1412, 1411, 1176,
	3407, 3408, 1116, 3429, 1116, 3135, 1449, 1658, 2838, 3403,
	2196, 2063, 3432, 1364, 3434, 1342, 1387, 3758, 3756, 3716,
	3695, 1451, 3694, 3692, 3383, 3385, 3384, 3637, 2803, 3600,
	3492, 3491, 3430, 3349, 3186, 3380, 3404, 3410, 3162, 629,
	3161, 1116, 1116, 3146, 3251, 1116, 1116, 3406, 2294, 2264,
	1560, 3417, 3416, 3145, 3255, 2848, 1363, 3204, 1658, 3252,
	2048, 2893, 3428, 3480, 3784, 3783, 1379, 2224, 2126, 1318,
	1134, 3783, 3475, 3784, 1823, 3459, 3489, 3465, 3466, 3174,
	3141, 3476, 3477, 3441, 3299, 3495, 3496, 3445, 3438, 1113,
	66, 3292, 3401, 3437, 866, 867, 868, 869, 1451, 1113,
	186, 3, 2, 3443, 3803, 3804, 1, 2589, 1770, 3362,
	1312, 3363, 870, 865, 1428, 2381, 1972, 1455, 1774, 3523,
	3486, 872, 2822, 2823, 3134, 3485, 1611, 2825, 1611, 2606,
	3515, 1003, 3487, 2354, 2083, 1449, 2792, 3481, 3507, 1692,
	2344, 2211, 3010, 1352, 916, 1714, 1573, 1025, 1127, 3506,
	3502, 1570, 1126, 1124, 1663, 754, 2037, 3541, 2782, 3552,
	3510, 3546, 1939, 2756, 3488, 3401, 3401, 3790, 3514, 3401,
	3401, 2359, 2363, 2364, 2365, 2360, 1116, 2361, 2366, 3819,
	3750, 2362, 3793, 1588, 738, 3686, 3569, 3605, 3575, 3754,
	3607, 3505, 2088, 3540, 3482, 1181, 2870, 939, 3483, 795,
	765, 1249, 3547, 3548, 3357, 1551, 3549, 2937, 2935, 1027,
	764, 3220, 3544, 2626, 3493, 3561, 3565, 2841, 3554, 1116,
	1024, 940, 2020, 3602, 1451, 3503, 1505, 1509, 2260, 3562,
	3656, 3439, 3063, 2691, 1533, 123, 3651, 3264, 123, 123,
	3366, 123, 3364, 3365, 3582, 671, 1951, 603, 985, 3479,
	3425, 3426, 2033, 672, 2239, 3591, 3707, 3585, 896, 2221,
	897, 1449, 889, 3623, 3593, 3626, 2645, 2644, 1628, 1190,
	1645, 2956, 2957, 1227, 1236, 3618, 710, 2113, 2623, 3287,
	1116, 1001, 2834, 65, 123, 64, 3601, 63, 62, 2002,
	207, 756, 206, 1001, 3638, 3396, 3682, 3795, 736, 735,
	1611, 734, 1688, 733, 732, 731, 1003, 123, 3633, 1685,
	2358, 2356, 2355, 1687, 1684, 1686, 1690, 1691, 3629, 3632,
	1935, 1689, 3655, 1934, 2000, 3024, 2721, 1116, 3640, 2716,
	1865, 1863, 2709, 2933, 2289, 1451, 3662, 2296, 3680, 1862,
	3683, 3735, 3666, 3401, 3670, 3672, 3674, 3676, 3667, 3654,
	3456, 2766, 3649, 3684, 3356, 3663, 1811, 2285, 1882, 2737,
	1879, 1878, 2729, 3669, 3452, 3594, 3446, 1910, 3550, 3412,
	3271, 3272, 1449, 3278, 2230, 3679, 1050, 1046, 1048, 3691,
	1451, 3689, 1049, 3552, 1047, 2537, 1217, 1199, 1198, 1208,
	1209, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1200, 3726,
	2266, 2985, 3715, 2203, 3401, 3734, 2202, 2200, 2199, 3720,
	3721, 3717, 3719, 1327, 3625, 3731, 3703, 1449, 3379, 2404,
	3718, 2402, 1096, 3127, 3123, 2045, 2059, 2889, 3639, 1936,
	1932, 2794, 3525, 3643, 3644, 1816, 890, 2219, 161, 51,
	3743, 105, 3744, 3763, 3745, 3757, 3746, 3759, 3760, 3747,
	159, 3401, 50, 94, 3755, 3753, 93, 1116, 104, 157,
	3762, 49, 3618, 191, 3664, 1695, 1696, 1697, 1698, 1699,
	1700, 1693, 1694, 3464, 190, 3575, 193, 192, 3772, 189,
	2455, 2456, 188, 3731, 1493, 187, 3774, 3775, 3773, 3778,
	3789, 3781, 3797, 3696, 3779, 3796, 3415, 860, 40, 39,
	3785, 3786, 3787, 3788, 38, 34, 13, 12, 35, 22,
	3808, 3801, 1116, 182, 55, 171, 145, 21, 1577, 20,
	2110, 26, 3809, 3655, 3810, 3812, 32, 31, 116, 115,
	30, 172, 3731, 3821, 3818, 114, 113, 1068, 164, 112,
	111, 110, 173, 3341, 1199, 1198, 1208, 1209, 1201, 1202,
	1203, 1204, 1205, 1206, 1207, 1200, 3828, 29, 19, 44,
	43, 42, 121, 9, 3797, 3835, 103, 3796, 3834, 101,
	28, 102, 99, 97, 3821, 3836, 95, 109, 77, 76,
	3840, 3770, 75, 3370, 176, 90, 89, 88, 3838, 3765,
	3766, 87, 86, 85, 1692, 182, 55, 171, 145, 1199,
	1198, 1208, 1209, 1201, 1202, 1203, 1204, 1205, 1206, 1207,
	1200, 83, 84, 172, 938, 74, 73, 72, 71, 70,
	164, 92, 98, 96, 173, 81, 91, 683, 682, 689,
	679, 82, 80, 79, 78, 69, 1611, 68, 67, 686,
	687, 143, 688, 692, 121, 142, 673, 141, 140, 139,
	137, 138, 136, 135, 134, 133, 697, 132, 131, 109,
	1054, 127, 128, 45, 129, 130, 176, 46, 47, 48,
	153, 152, 154, 156, 158, 155, 2375, 160, 150, 148,
	1076, 1080, 1082, 1084, 1086, 1087, 1089, 151, 1094, 1090,
	1091, 1092, 1093, 149, 1071, 1072, 1073, 1074, 1052, 1053,
	1077, 147, 1055, 60, 1056, 1057, 1058, 1059, 1060, 1061,
	1062, 1063, 1064, 1067, 1069, 1065, 1066, 1075, 11, 106,
	18, 25, 4, 0, 0, 1079, 1081, 1083, 1085, 1088,
	0, 0, 144, 170, 180, 0, 107, 0, 0, 0,
	1939, 0, 0, 127, 128, 0, 129, 130, 0, 123,
	0, 0, 0, 0, 169, 163, 162, 1688, 0, 0,
	1211, 61, 1215, 1070, 1685, 0, 0, 0, 1687, 1684,
	1686, 1690, 1691, 0, 0, 0, 1689, 0, 1212, 1214,
	1210, 0, 1213, 1199, 1198, 1208, 1209, 1201, 1202, 1203,
	1204, 1205, 1206, 1207, 1200, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 144, 170, 180, 0, 107, 0,
	0, 0, 165, 166, 167, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 163, 162, 0,
	0, 0, 0, 61, 0, 0, 674, 676, 675, 0,
	0, 0, 0, 174, 0, 0, 681, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 685, 0,
	0, 0, 0, 0, 117, 700, 0, 0, 168, 0,
	118, 0, 678, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2533, 2534, 165, 166, 167, 0, 0, 1673,
	1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683,
	1695, 1696, 1697, 1698, 1699, 1700, 1693, 1694, 0, 0,
	0, 0, 0, 0, 0, 174, 0, 119, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	54, 0, 0, 0, 0, 0, 117, 0, 0, 0,
	168, 0, 118, 0, 0, 123, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 123, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 680, 684, 690, 0, 691, 693, 0, 56,
	694, 695, 696, 0, 1911, 698, 699, 0, 0, 1872,
	0, 0, 1022, 0, 0, 0, 0, 0, 0, 119,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 54, 0, 177, 178, 0, 179, 0, 1913,
	1881, 0, 146, 0, 0, 0, 1078, 52, 0, 0,
	1914, 1915, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1185, 1186, 1187,
	1184, 0, 0, 0, 0, 0, 1880, 0, 0, 0,
	0, 56, 0, 0, 1023, 0, 0, 0, 0, 0,
	0, 0, 1888, 0, 1939, 1939, 1939, 1939, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1939, 0, 0,
	0, 0, 0, 0, 120, 41, 177, 178, 0, 179,
	0, 53, 0, 0, 146, 5, 0, 0, 0, 52,
	0, 0, 124, 125, 1911, 0, 126, 0, 0, 1872,
	0, 0, 0, 0, 0, 0, 1692, 0, 0, 0,
	0, 0, 0, 0, 0, 1017, 1012, 1007, 1011, 1015,
	1904, 677, 0, 0, 0, 0, 0, 0, 0, 1913,
	1881, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1914, 1915, 0, 1020, 0, 0, 0, 1010, 0, 0,
	0, 0, 0, 123, 0, 0, 120, 41, 123, 0,
	0, 0, 0, 53, 0, 0, 1880, 0, 0, 0,
	0, 0, 0, 0, 124, 125, 0, 0, 126, 123,
	0, 0, 1888, 0, 0, 0, 0, 0, 0, 0,
	123, 1871, 1873, 1870, 0, 1867, 0, 0, 1018, 0,
	1892, 0, 0, 0, 0, 1021, 0, 0, 0, 0,
	0, 1898, 0, 0, 0, 0, 0, 0, 0, 1883,
	0, 1866, 0, 0, 0, 0, 0, 1008, 0, 0,
	0, 1886, 1920, 0, 0, 1887, 1889, 1891, 0, 1893,
	1894, 1895, 1899, 1900, 1901, 1903, 1906, 1907, 1908, 0,
	1904, 1019, 0, 0, 0, 0, 1896, 1905, 1897, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1875, 1688,
	0, 0, 0, 0, 0, 0, 1685, 0, 0, 0,
	1687, 1684, 1686, 1690, 1691, 0, 0, 0, 1689, 0,
	1912, 1009, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1868, 1869, 0,
	0, 1871, 2686, 1870, 0, 2685, 0, 0, 0, 0,
	1892, 0, 0, 0, 0, 1909, 0, 0, 0, 0,
	0, 1898, 0, 0, 0, 0, 0, 0, 0, 1001,
	0, 123, 1885, 0, 0, 0, 123, 0, 0, 1884,
	0, 1886, 1920, 1939, 0, 1887, 1889, 1891, 1016, 1893,
	1894, 1895, 1899, 1900, 1901, 1903, 1906, 1907, 1908, 0,
	0, 0, 123, 1902, 0, 0, 1896, 1905, 1897, 0,
	0, 0, 1890, 0, 0, 0, 0, 0, 1875, 0,
	0, 1068, 0, 0, 1013, 1917, 1916, 1014, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1912, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681,
	1682, 1683, 1695, 1696, 1697, 1698, 1699, 1700, 1693, 1694,
	0, 0, 0, 0, 0, 0, 0, 1868, 1869, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1877, 0,
	0, 0, 0, 0, 0, 1909, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1885, 0, 0, 0, 0, 0, 0, 1884,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1919, 0, 0, 1918, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1902, 0, 0, 0, 0, 0, 0,
	0, 0, 1890, 0, 1054, 0, 0, 0, 1044, 0,
	0, 0, 0, 0, 0, 1917, 1916, 0, 0, 0,
	0, 0, 0, 0, 1076, 1080, 1082, 1084, 1086, 1087,
	1089, 0, 1094, 1090, 1091, 1092, 1093, 0, 1071, 1072,
	1073, 1074, 1052, 1053, 1077, 0, 1055, 0, 1056, 1057,
	1058, 1059, 1060, 1061, 1062, 1063, 1064, 1067, 1069, 1065,
	1066, 1075, 0, 0, 0, 0, 0, 0, 1877, 1079,
	1081, 1083, 1085, 1088, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1070, 0, 0,
	1919, 0, 0, 1918, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 123, 0, 0, 0, 0, 0, 0, 123,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 772,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 1939,
	495, 528, 517, 601, 483, 0, 0, 0, 0, 0,
	0, 725, 0, 0, 0, 310, 0, 0, 340, 532,
	514, 524, 515, 0, 500, 501, 502, 509, 320, 503,
	504, 505, 475, 506, 476, 507, 508, 763, 531, 482,
	401, 354, 549, 548, 0, 0, 831, 839, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 717,
	0, 0, 753, 808, 807, 740, 750, 0, 0, 283,
	205, 477, 597, 479, 478, 741, 0, 742, 746, 749,
	745, 743, 744, 0, 823, 0, 0, 0, 0, 0,
	0, 709, 721, 0, 726, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 123,
	0, 0, 0, 0, 0, 0, 0, 0, 718, 719,
	0, 0, 0, 0, 773, 0, 720, 0, 0, 768,
	747, 751, 0, 0, 0, 0, 273, 406, 423, 284,
	397, 436, 289, 404, 279, 369, 393, 0, 0, 275,
	421, 403, 351, 330, 331, 274, 0, 388, 308, 322,
	305, 367, 748, 771, 775, 304, 845, 769, 431, 277,
	1078, 430, 366, 417, 422, 352, 346, 276, 419, 350,
	345, 334, 312, 846, 335, 336, 326, 378, 344, 379,
	327, 356, 355, 357, 0, 123, 0, 0, 0, 459,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 590, 766, 0, 594, 0, 433, 0,
	0, 829, 0, 0, 0, 405, 0, 0, 337, 0,
	0, 0, 770, 0, 391, 372, 842, 0, 0, 389,
	342, 418, 380, 424, 407, 432, 385, 381, 268, 408,
	307, 353, 280, 282, 302, 309, 311, 313, 314, 362,
	363, 375, 396, 409, 410, 411, 306, 290, 390, 291,
	324, 292, 269, 298, 296, 299, 398, 300, 271, 376,
	415, 0, 319, 386, 349, 272, 348, 377, 414, 413,
	281, 440, 446, 447, 536, 0, 452, 617, 618, 619,
	461, 466, 467, 468, 470, 471, 472, 473, 537, 554,
	521, 491, 454, 545, 488, 492, 493, 557, 1716, 1715,
	1717, 445, 338, 339, 0, 317, 265, 266, 612, 827,
	368, 559, 592, 593, 484, 0, 841, 822, 824, 825,
	828, 832, 833, 834, 835, 836, 838, 840, 844, 611,
	0, 538, 553, 615, 552, 608, 374, 0, 395, 550,
	497, 0, 542, 516, 0, 543, 512, 547, 0, 486,
	123, 402, 426, 438, 455, 458, 487, 572, 573, 574,
	270, 457, 576, 577, 578, 579, 580, 581, 582, 575,
	843, 519, 496, 522, 437, 499, 498, 0, 0, 533,
	774, 534, 535, 358, 359, 360, 361, 830, 560, 288,
	456, 384, 0, 520, 0, 0, 0, 0, 0, 0,
	0, 0, 525, 526, 523, 620, 0, 583, 584, 0,
	0, 450, 451, 316, 323, 469, 325, 287, 373, 318,
	435, 332, 0, 462, 527, 463, 586, 589, 587, 588,
	365, 328, 329, 399, 333, 343, 387, 434, 371, 392,
	285, 425, 400, 347, 513, 540, 852, 826, 851, 853,
	854, 850, 855, 856, 837, 730, 0, 781, 848, 847,
	849, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 568, 567, 566, 565, 564, 563, 562, 561,
	0, 0, 510, 412, 297, 259, 293, 294, 301, 609,
	606, 416, 610, 0, 267, 490, 341, 0, 382, 315,
	555, 556, 0, 0, 815, 788, 789, 790, 727, 791,
	785, 786, 728, 787, 816, 779, 812, 813, 755, 782,
	792, 811, 793, 814, 817, 818, 857, 858, 799, 783,
	231, 859, 796, 819, 810, 809, 794, 780, 820, 821,
	762, 757, 797, 798, 784, 803, 804, 802, 805, 729,
	776, 777, 778, 800, 801, 758, 759, 760, 761, 0,
	0, 0, 441, 442, 443, 465, 0, 427, 489, 607,
	0, 0, 0, 0, 0, 0, 0, 539, 551, 585,
	0, 595, 596, 598, 600, 806, 602, 772, 613, 480,
	481, 614, 591, 0, 722, 0, 370, 0, 495, 528,
	517, 601, 483, 0, 0, 0, 0, 0, 0, 725,
	0, 0, 0, 310, 1767, 0, 340, 532, 514, 524,
	515, 0, 500, 501, 502, 509, 320, 503, 504, 505,
	475, 506, 476, 507, 508, 763, 531, 482, 401, 354,
	549, 548, 0, 0, 831, 839, 0, 0, 0, 0,
	0, 0, 0, 0, 1963, 0, 0, 717, 0, 0,
	753, 808, 807, 740, 750, 0, 0, 283, 205, 477,
	597, 479, 478, 741, 0, 742, 746, 749, 745, 743,
	744, 0, 823, 0, 0, 0, 0, 0, 0, 709,
	721, 0, 726, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 718, 719, 0, 0,
	0, 0, 773, 0, 720, 0, 0, 1964, 747, 751,
	0, 0, 0, 0, 273, 406, 423, 284, 397, 436,
	289, 404, 279, 369, 393, 0, 0, 275, 421, 403,
	351, 330, 331, 274, 0, 388, 308, 322, 305, 367,
	748, 771, 775, 304, 845, 769, 431, 277, 0, 430,
	366, 417, 422, 352, 346, 276, 419, 350, 345, 334,
	312, 846, 335, 336, 326, 378, 344, 379, 327, 356,
	355, 357, 0, 0, 0, 0, 0, 459, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 590, 766, 0, 594, 0, 433, 0, 0, 829,
	0, 0, 0, 405, 0, 0, 337, 0, 0, 0,
	770, 0, 391, 372, 842, 0, 0, 389, 342, 418,
	380, 424, 407, 432, 385, 381, 268, 408, 307, 353,
	280, 282, 302, 309, 311, 313, 314, 362, 363, 375,
	396, 409, 410, 411, 306, 290, 390, 291, 324, 292,
	269, 298, 296, 299, 398, 300, 271, 376, 415, 0,
	319, 386, 349, 272, 348, 377, 414, 413, 281, 440,
	446, 447, 536, 0, 452, 617, 618, 619, 461, 466,
	467, 468, 470, 471, 472, 473, 537, 554, 521, 491,
	454, 545, 488, 492, 493, 557, 0, 0, 0, 445,
	338, 339, 0, 317, 265, 266, 612, 827, 368, 559,
	592, 593, 484, 0, 841, 822, 824, 825, 828, 832,
	833, 834, 835, 836, 838, 840, 844, 611, 0, 538,
	553, 615, 552, 608, 374, 0, 395, 550, 497, 0,
	542, 516, 0, 543, 512, 547, 0, 486, 0, 402,
	426, 438, 455, 458, 487, 572, 573, 574, 270, 457,
	576, 577, 578, 579, 580, 581, 582, 575, 843, 519,
	496, 522, 437, 499, 498, 0, 0, 533, 774, 534,
	535, 358, 359, 360, 361, 830, 560, 288, 456, 384,
	0, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 526, 523, 620, 0, 583, 584, 0, 0, 450,
	451, 316, 323, 469, 325, 287, 373, 318, 435, 332,
	0, 462, 527, 463, 586, 589, 587, 588, 365, 328,
	329, 399, 333, 343, 387, 434, 371, 392, 285, 425,
	400, 347, 513, 540, 852, 826, 851, 853, 854, 850,
	855, 856, 837, 730, 0, 781, 848, 847, 849, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	568, 567, 566, 565, 564, 563, 562, 561, 0, 0,
	510, 412, 297, 259, 293, 294, 301, 609, 606, 416,
	610, 0, 267, 490, 341, 0, 382, 315, 555, 556,
	0, 0, 815, 788, 789, 790, 727, 791, 785, 786,
	728, 787, 816, 779, 812, 813, 755, 782, 792, 811,
	793, 814, 817, 818, 857, 858, 799, 783, 231, 859,
	796, 819, 810, 809, 794, 780, 820, 821, 762, 757,
	797, 798, 784, 803, 804, 802, 805, 729, 776, 777,
	778, 800, 801, 758, 759, 760, 761, 0, 0, 0,
	441, 442, 443, 465, 0, 427, 489, 607, 0, 0,
	0, 0, 0, 0, 0, 539, 551, 585, 0, 595,
	596, 598, 600, 806, 602, 0, 613, 480, 481, 614,
	591, 0, 722, 182, 772, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 0, 495, 528, 517, 601, 483,
	0, 0, 0, 0, 0, 0, 725, 0, 0, 0,
	310, 0, 0, 340, 532, 514, 524, 515, 0, 500,
	501, 502, 509, 320, 503, 504, 505, 475, 506, 476,
	507, 508, 1220, 531, 482, 401, 354, 549, 548, 0,
	0, 831, 839, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 717, 0, 0, 753, 808, 807,
	740, 750, 0, 0, 283, 205, 477, 597, 479, 478,
	741, 0, 742, 746, 749, 745, 743, 744, 0, 823,
	0, 0, 0, 0, 0, 0, 709, 721, 0, 726,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 718, 719, 0, 0, 0, 0, 773,
	0, 720, 0, 0, 768, 747, 751, 0, 0, 0,
	0, 273, 406, 423, 284, 397, 436, 289, 404, 279,
	369, 393, 0, 0, 275, 421, 403, 351, 330, 331,
	274, 0, 388, 308, 322, 305, 367, 748, 771, 775,
	304, 845, 769, 431, 277, 0, 430, 366, 417, 422,
	352, 346, 276, 419, 350, 345, 334, 312, 846, 335,
	336, 326, 378, 344, 379, 327, 356, 355, 357, 0,
	0, 0, 0, 0, 459, 460, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 590, 766,
	0, 594, 0, 433, 0, 0, 829, 0, 0, 0,
	405, 0, 0, 337, 0, 0, 0, 770, 0, 391,
	372, 842, 0, 0, 389, 342, 418, 380, 424, 407,
	432, 385, 381, 268, 408, 307, 353, 280, 282, 302,
	309, 311, 313, 314, 362, 363, 375, 396, 409, 410,
	411, 306, 290, 390, 291, 324, 292, 269, 298, 296,
	299, 398, 300, 271, 376, 415, 0, 319, 386, 349,
	272, 348, 377, 414, 413, 281, 440, 446, 447, 536,
	0, 452, 617, 618, 619, 461, 466, 467, 468, 470,
	471, 472, 473, 537, 554, 521, 491, 454, 545, 488,
	492, 493, 557, 0, 0, 0, 445, 338, 339, 0,
	317, 265, 266, 612, 827, 368, 559, 592, 593, 484,
	0, 841, 822, 824, 825, 828, 832, 833, 834, 835,
	836, 838, 840, 844, 611, 0, 538, 553, 615, 552,
	608, 374, 0, 395, 550, 497, 0, 542, 516, 0,
	543, 512, 547, 0, 486, 0, 402, 426, 438, 455,
	458, 487, 572, 573, 574, 270, 457, 576, 577, 578,
	579, 580, 581, 582, 575, 843, 519, 496, 522, 437,
	499, 498, 0, 0, 533, 774, 534, 535, 358, 359,
	360, 361, 830, 560, 288, 456, 384, 0, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 525, 526, 523,
	620, 0, 583, 584, 0, 0, 450, 451, 316, 323,
	469, 325, 287, 373, 318, 435, 332, 0, 462, 527,
	463, 586, 589, 587, 588, 365, 328, 329, 399, 333,
	343, 387, 434, 371, 392, 285, 425, 400, 347, 513,
	540, 852, 826, 851, 853, 854, 850, 855, 856, 837,
	730, 0, 781, 848, 847, 849, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 568, 567, 566,
	565, 564, 563, 562, 561, 0, 0, 510, 412, 297,
	259, 293, 294, 301, 609, 606, 416, 610, 0, 267,
	490, 341, 146, 382, 315, 555, 556, 0, 0, 815,
	788, 789, 790, 727, 791, 785, 786, 728, 787, 816,
	779, 812, 813, 755, 782, 792, 811, 793, 814, 817,
	818, 857, 858, 799, 783, 231, 859, 796, 819, 810,
	809, 794, 780, 820, 821, 762, 757, 797, 798, 784,
	803, 804, 802, 805, 729, 776, 777, 778, 800, 801,
	758, 759, 760, 761, 0, 0, 0, 441, 442, 443,
	465, 0, 427, 489, 607, 0, 0, 0, 0, 0,
	0, 0, 539, 551, 585, 0, 595, 596, 598, 600,
	806, 602, 772, 613, 480, 481, 614, 591, 0, 722,
	0, 370, 0, 495, 528, 517, 601, 483, 0, 0,
	0, 0, 0, 0, 725, 0, 0, 0, 310, 3837,
	0, 340, 532, 514, 524, 515, 0, 500, 501, 502,
	509, 320, 503, 504, 505, 475, 506, 476, 507, 508,
	763, 531, 482, 401, 354, 549, 548, 0, 0, 831,
	839, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 717, 0, 0, 753, 808, 807, 740, 750,
	0, 0, 283, 205, 477, 597, 479, 478, 741, 0,
	742, 746, 749, 745, 743, 744, 0, 823, 0, 0,
	0, 0, 0, 0, 709, 721, 0, 726, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 718, 719, 0, 0, 0, 0, 773, 0, 720,
	0, 0, 768, 747, 751, 0, 0, 0, 0, 273,
	406, 423, 284, 397, 436, 289, 404, 279, 369, 393,
	0, 0, 275, 421, 403, 351, 330, 331, 274, 0,
	388, 308, 322, 305, 367, 748, 771, 775, 304, 845,
	769, 431, 277, 0, 430, 366, 417, 422, 352, 346,
	276, 419, 350, 345, 334, 312, 846, 335, 336, 326,
	378, 344, 379, 327, 356, 355, 357, 0, 0, 0,
	0, 0, 459, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 590, 766, 0, 594,
	0, 433, 0, 0, 829, 0, 0, 0, 405, 0,
	0, 337, 0, 0, 0, 770, 0, 391, 372, 842,
	0, 0, 389, 342, 418, 380, 424, 407, 432, 385,
	381, 268, 408, 307, 353, 280, 282, 302, 309, 311,
	313, 314, 362, 363, 375, 396, 409, 410, 411, 306,
	290, 390, 291, 324, 292, 269, 298, 296, 299, 398,
	300, 271, 376, 415, 0, 319, 386, 349, 272, 348,
	377, 414, 413, 281, 440, 446, 447, 536, 0, 452,
	617, 618, 619, 461, 466, 467, 468, 470, 471, 472,
	473, 537, 554, 521, 491, 454, 545, 488, 492, 493,
	557, 0, 0, 0, 445, 338, 339, 0, 317, 265,
	266, 612, 827, 368, 559, 592, 593, 484, 0, 841,
	822, 824, 825, 828, 832, 833, 834, 835, 836, 838,
	840, 844, 611, 0, 538, 553, 615, 552, 608, 374,
	0, 395, 550, 497, 0, 542, 516, 0, 543, 512,
	547, 0, 486, 0, 402, 426, 438, 455, 458, 487,
	572, 573, 574, 270, 457, 576, 577, 578, 579, 580,
	581, 582, 575, 843, 519, 496, 522, 437, 499, 498,
	0, 0, 533, 774, 534, 535, 358, 359, 360, 361,
	830, 560, 288, 456, 384, 0, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 526, 523, 620, 0,
	583, 584, 0, 0, 450, 451, 316, 323, 469, 325,
	287, 373, 318, 435, 332, 0, 462, 527, 463, 586,
	589, 587, 588, 365, 328, 329, 399, 333, 343, 387,
	434, 371, 392, 285, 425, 400, 347, 513, 540, 852,
	826, 851, 853, 854, 850, 855, 856, 837, 730, 0,
	781, 848, 847, 849, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 568, 567, 566, 565, 564,
	563, 562, 561, 0, 0, 510, 412, 297, 259, 293,
	294, 301, 609, 606, 416, 610, 0, 267, 490, 341,
	0, 382, 315, 555, 556, 0, 0, 815, 788, 789,
	790, 727, 791, 785, 786, 728, 787, 816, 779, 812,
	813, 755, 782, 792, 811, 793, 814, 817, 818, 857,
	858, 799, 783, 231, 859, 796, 819, 810, 809, 794,
	780, 820, 821, 762, 757, 797, 798, 784, 803, 804,
	802, 805, 729, 776, 777, 778, 800, 801, 758, 759,
	760, 761, 0, 0, 0, 441, 442, 443, 465, 0,
	427, 489, 607, 0, 0, 0, 0, 0, 0, 0,
	539, 551, 585, 0, 595, 596, 598, 600, 806, 602,
	772, 613, 480, 481, 614, 591, 0, 722, 0, 370,
	0, 495, 528, 517, 601, 483, 0, 0, 0, 0,
	0, 0, 725, 0, 0, 0, 310, 0, 0, 340,
	532, 514, 524, 515, 0, 500, 501, 502, 509, 320,
	503, 504, 505, 475, 506, 476, 507, 508, 763, 531,
	482, 401, 354, 549, 548, 0, 0, 831, 839, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	717, 0, 0, 753, 808, 807, 740, 750, 0, 0,
	283, 205, 477, 597, 479, 478, 741, 0, 742, 746,
	749, 745, 743, 744, 0, 823, 0, 0, 0, 0,
	0, 0, 709, 721, 0, 726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 718,
	719, 0, 0, 0, 0, 773, 0, 720, 0, 0,
	768, 747, 751, 0, 0, 0, 0, 273, 406, 423,
	284, 397, 436, 289, 404, 279, 369, 393, 0, 0,
	275, 421, 403, 351, 330, 331, 274, 0, 388, 308,
	322, 305, 367, 748, 771, 775, 304, 845, 769, 431,
	277, 0, 430, 366, 417, 422, 352, 346, 276, 419,
	350, 345, 334, 312, 846, 335, 336, 326, 378, 344,
	379, 327, 356, 355, 357, 0, 0, 0, 0, 0,
	459, 460, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 590, 766, 0, 594, 0, 433,
	0, 0, 829, 0, 0, 0, 405, 0, 0, 337,
	0, 0, 0, 770, 0, 391, 372, 842, 3732, 0,
	389, 342, 418, 380, 424, 407, 432, 385, 381, 268,
	408, 307, 353, 280, 282, 302, 309, 311, 313, 314,
	362, 363, 375, 396, 409, 410, 411, 306, 290, 390,
	291, 324, 292, 269, 298, 296, 299, 398, 300, 271,
	376, 415, 0, 319, 386, 349, 272, 348, 377, 414,
	413, 281, 440, 446, 447, 536, 0, 452, 617, 618,
	619, 461, 466, 467, 468, 470, 471, 472, 473, 537,
	554, 521, 491, 454, 545, 488, 492, 493, 557, 0,
	0, 0, 445, 338, 339, 0, 317, 265, 266, 612,
	827, 368, 559, 592, 593, 484, 0, 841, 822, 824,
	825, 828, 832, 833, 834, 835, 836, 838, 840, 844,
	611, 0, 538, 553, 615, 552, 608, 374, 0, 395,
	550, 497, 0, 542, 516, 0, 543, 512, 547, 0,
	486, 0, 402, 426, 438, 455, 458, 487, 572, 573,
	574, 270, 457, 576, 577, 578, 579, 580, 581, 582,
	575, 843, 519, 496, 522, 437, 499, 498, 0, 0,
	533, 774, 534, 535, 358, 359, 360, 361, 830, 560,
	288, 456, 384, 0, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 525, 526, 523, 620, 0, 583, 584,
	0, 0, 450, 451, 316, 323, 469, 325, 287, 373,
	318, 435, 332, 0, 462, 527, 463, 586, 589, 587,
	588, 365, 328, 329, 399, 333, 343, 387, 434, 371,
	392, 285, 425, 400, 347, 513, 540, 852, 826, 851,
	853, 854, 850, 855, 856, 837, 730, 0, 781, 848,
	847, 849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 568, 567, 566, 565, 564, 563, 562,
	561, 0, 0, 510, 412, 297, 259, 293, 294, 301,
	609, 606, 416, 610, 0, 267, 490, 341, 0, 382,
	315, 555, 556, 0, 0, 815, 788, 789, 790, 727,
	791, 785, 786, 728, 787, 816, 779, 812, 813, 755,
	782, 792, 811, 793, 814, 817, 818, 857, 858, 799,
	783, 231, 859, 796, 819, 810, 809, 794, 780, 820,
	821, 762, 757, 797, 798, 784, 803, 804, 802, 805,
	729, 776, 777, 778, 800, 801, 758, 759, 760, 761,
	0, 0, 0, 441, 442, 443, 465, 0, 427, 489,
	607, 0, 0, 0, 0, 0, 0, 0, 539, 551,
	585, 0, 595, 596, 598, 600, 806, 602, 772, 613,
	480, 481, 614, 591, 0, 722, 0, 370, 0, 495,
	528, 517, 601, 483, 0, 0, 0, 0, 0, 0,
	725, 0, 0, 0, 310, 1767, 0, 340, 532, 514,
	524, 515, 0, 500, 501, 502, 509, 320, 503, 504,
	505, 475, 506, 476, 507, 508, 763, 531, 482, 401,
	354, 549, 548, 0, 0, 831, 839, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 717, 0,
	0, 753, 808, 807, 740, 750, 0, 0, 283, 205,
	477, 597, 479, 478, 741, 0, 742, 746, 749, 745,
	743, 744, 0, 823, 0, 0, 0, 0, 0, 0,
	709, 721, 0, 726, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 718, 719, 0,
	0, 0, 0, 773, 0, 720, 0, 0, 768, 747,
	751, 0, 0, 0, 0, 273, 406, 423, 284, 397,
	436, 289, 404, 279, 369, 393, 0, 0, 275, 421,
	403, 351, 330, 331, 274, 0, 388, 308, 322, 305,
	367, 748, 771, 775, 304, 845, 769, 431, 277, 0,
	430, 366, 417, 422, 352, 346, 276, 419, 350, 345,
	334, 312, 846, 335, 336, 326, 378, 344, 379, 327,
	356, 355, 357, 0, 0, 0, 0, 0, 459, 460,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 590, 766, 0, 594, 0, 433, 0, 0,
	829, 0, 0, 0, 405, 0, 0, 337, 0, 0,
	0, 770, 0, 391, 372, 842, 0, 0, 389, 342,
	418, 380, 424, 407, 432, 385, 381, 268, 408, 307,
	353, 280, 282, 302, 309, 311, 313, 314, 362, 363,
	375, 396, 409, 410, 411, 306, 290, 390, 291, 324,
	292, 269, 298, 296, 299, 398, 300, 271, 376, 415,
	0, 319, 386, 349, 272, 348, 377, 414, 413, 281,
	440, 446, 447, 536, 0, 452, 617, 618, 619, 461,
	466, 467, 468, 470, 471, 472, 473, 537, 554, 521,
	491, 454, 545, 488, 492, 493, 557, 0, 0, 0,
	445, 338, 339, 0, 317, 265, 266, 612, 827, 368,
	559, 592, 593, 484, 0, 841, 822, 824, 825, 828,
	832, 833, 834, 835, 836, 838, 840, 844, 611, 0,
	538, 553, 615, 552, 608, 374, 0, 395, 550, 497,
	0, 542, 516, 0, 543, 512, 547, 0, 486, 0,
	402, 426, 438, 455, 458, 487, 572, 573, 574, 270,
	457, 576, 577, 578, 579, 580, 581, 582, 575, 843,
	519, 496, 522, 437, 499, 498, 0, 0, 533, 774,
	534, 535, 358, 359, 360, 361, 830, 560, 288, 456,
	384, 0, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 526, 523, 620, 0, 583, 584, 0, 0,
	450, 451, 316, 323, 469, 325, 287, 373, 318, 435,
	332, 0, 462, 527, 463, 586, 589, 587, 588, 365,
	328, 329, 399, 333, 343, 387, 434, 371, 392, 285,
	425, 400, 347, 513, 540, 852, 826, 851, 853, 854,
	850, 855, 856, 837, 730, 0, 781, 848, 847, 849,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 568, 567, 566, 565, 564, 563, 562, 561, 0,
	0, 510, 412, 297, 259, 293, 294, 301, 609, 606,
	416, 610, 0, 267, 490, 341, 0, 382, 315, 555,
	556, 0, 0, 815, 788, 789, 790, 727, 791, 785,
	786, 728, 787, 816, 779, 812, 813, 755, 782, 792,
	811, 793, 814, 817, 818, 857, 858, 799, 783, 231,
	859, 796, 819, 810, 809, 794, 780, 820, 821, 762,
	757, 797, 798, 784, 803, 804, 802, 805, 729, 776,
	777, 778, 800, 801, 758, 759, 760, 761, 0, 0,
	0, 441, 442, 443, 465, 0, 427, 489, 607, 0,
	0, 0, 0, 0, 0, 0, 539, 551, 585, 0,
	595, 596, 598, 600, 806, 602, 772, 613, 480, 481,
	614, 591, 0, 722, 0, 370, 0, 495, 528, 517,
	601, 483, 0, 0, 0, 0, 0, 0, 725, 0,
	0, 0, 310, 0, 0, 340, 532, 514, 524, 515,
	0, 500, 501, 502, 509, 320, 503, 504, 505, 475,
	506, 476, 507, 508, 763, 531, 482, 401, 354, 549,
	548, 0, 0, 831, 839, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 717, 0, 0, 753,
	808, 807, 740, 750, 0, 0, 283, 205, 477, 597,
	479, 478, 741, 0, 742, 746, 749, 745, 743, 744,
	0, 823, 0, 0, 0, 0, 0, 0, 709, 721,
	0, 726, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 718, 719, 1488, 0, 0,
	0, 773, 0, 720, 0, 0, 768, 747, 751, 0,
	0, 0, 0, 273, 406, 423, 284, 397, 436, 289,
	404, 279, 369, 393, 0, 0, 275, 421, 403, 351,
	330, 331, 274, 0, 388, 308, 322, 305, 367, 748,
	771, 775, 304, 845, 769, 431, 277, 0, 430, 366,
	417, 422, 352, 346, 276, 419, 350, 345, 334, 312,
	846, 335, 336, 326, 378, 344, 379, 327, 356, 355,
	357, 0, 0, 0, 0, 0, 459, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	590, 766, 0, 594, 0, 433, 0, 0, 829, 0,
	0, 0, 405, 0, 0, 337, 0, 0, 0, 770,
	0, 391, 372, 842, 0, 0, 389, 342, 418, 380,
	424, 407, 432, 385, 381, 268, 408, 307, 353, 280,
	282, 302, 309, 311, 313, 314, 362, 363, 375, 396,
	409, 410, 411, 306, 290, 390, 291, 324, 292, 269,
	298, 296, 299, 398, 300, 271, 376, 415, 0, 319,
	386, 349, 272, 348, 377, 414, 413, 281, 440, 446,
	447, 536, 0, 452, 617, 618, 619, 461, 466, 467,
	468, 470, 471, 472, 473, 537, 554, 521, 491, 454,
	545, 488, 492, 493, 557, 0, 0, 0, 445, 338,
	339, 0, 317, 265, 266, 612, 827, 368, 559, 592,
	593, 484, 0, 841, 822, 824, 825, 828, 832, 833,
	834, 835, 836, 838, 840, 844, 611, 0, 538, 553,
	615, 552, 608, 374, 0, 395, 550, 497, 0, 542,
	516, 0, 543, 512, 547, 0, 486, 0, 402, 426,
	438, 455, 458, 487, 572, 573, 574, 270, 457, 576,
	577, 578, 579, 580, 581, 582, 575, 843, 519, 496,
	522, 437, 499, 498, 0, 0, 533, 774, 534, 535,
	358, 359, 360, 361, 830, 560, 288, 456, 384, 0,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	526, 523, 620, 0, 583, 584, 0, 0, 450, 451,
	316, 323, 469, 325, 287, 373, 318, 435, 332, 0,
	462, 527, 463, 586, 589, 587, 588, 365, 328, 329,
	399, 333, 343, 387, 434, 371, 392, 285, 425, 400,
	347, 513, 540, 852, 826, 851, 853, 854, 850, 855,
	856, 837, 730, 0, 781, 848, 847, 849, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 568,
	567, 566, 565, 564, 563, 562, 561, 0, 0, 510,
	412, 297, 259, 293, 294, 301, 609, 606, 416, 610,
	0, 267, 490, 341, 0, 382, 315, 555, 556, 0,
	0, 815, 788, 789, 790, 727, 791, 785, 786, 728,
	787, 816, 779, 812, 813, 755, 782, 792, 811, 793,
	814, 817, 818, 857, 858, 799, 783, 231, 859, 796,
	819, 810, 809, 794, 780, 820, 821, 762, 757, 797,
	798, 784, 803, 804, 802, 805, 729, 776, 777, 778,
	800, 801, 758, 759, 760, 761, 0, 0, 0, 441,
	442, 443, 465, 0, 427, 489, 607, 0, 0, 0,
	0, 0, 0, 0, 539, 551, 585, 0, 595, 596,
	598, 600, 806, 602, 0, 613, 480, 481, 614, 591,
	772, 722, 0, 2134, 0, 0, 0, 0, 0, 370,
	0, 495, 528, 517, 601, 483, 0, 0, 0, 0,
	0, 0, 725, 0, 0, 0, 310, 0, 0, 340,
	532, 514, 524, 515, 0, 500, 501, 502, 509, 320,
	503, 504, 505, 475, 506, 476, 507, 508, 763, 531,
	482, 401, 354, 549, 548, 0, 0, 831, 839, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	717, 0, 0, 753, 808, 807, 740, 750, 0, 0,
	283, 205, 477, 597, 479, 478, 741, 0, 742, 746,
	749, 745, 743, 744, 0, 823, 0, 0, 0, 0,
	0, 0, 709, 721, 0, 726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 718,
	719, 0, 0, 0, 0, 773, 0, 720, 0, 0,
	768, 747, 751, 0, 0, 0, 0, 273, 406, 423,
	284, 397, 436, 289, 404, 279, 369, 393, 0, 0,
	275, 421, 403, 351, 330, 331, 274, 0, 388, 308,
	322, 305, 367, 748, 771, 775, 304, 845, 769, 431,
	277, 0, 430, 366, 417, 422, 352, 346, 276, 419,
	350, 345, 334, 312, 846, 335, 336, 326, 378, 344,
	379, 327, 356, 355, 357, 0, 0, 0, 0, 0,
	459, 460, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 590, 766, 0, 594, 0, 433,
	0, 0, 829, 0, 0, 0, 405, 0, 0, 337,
	0, 0, 0, 770, 0, 391, 372, 842, 0, 0,
	389, 342, 418, 380, 424, 407, 432, 385, 381, 268,
	408, 307, 353, 280, 282, 302, 309, 311, 313, 314,
	362, 363, 375, 396, 409, 410, 411, 306, 290, 390,
	291, 324, 292, 269, 298, 296, 299, 398, 300, 271,
	376, 415, 0, 319, 386, 349, 272, 348, 377, 414,
	413, 281, 440, 446, 447, 536, 0, 452, 617, 618,
	619, 461, 466, 467, 468, 470, 471, 472, 473, 537,
	554, 521, 491, 454, 545, 488, 492, 493, 557, 0,
	0, 0, 445, 338, 339, 0, 317, 265, 266, 612,
	827, 368, 559, 592, 593, 484, 0, 841, 822, 824,
	825, 828, 832, 833, 834, 835, 836, 838, 840, 844,
	611, 0, 538, 553, 615, 552, 608, 374, 0, 395,
	550, 497, 0, 542, 516, 0, 543, 512, 547, 0,
	486, 0, 402, 426, 438, 455, 458, 487, 572, 573,
	574, 270, 457, 576, 577, 578, 579, 580, 581, 582,
	575, 843, 519, 496, 522, 437, 499, 498, 0, 0,
	533, 774, 534, 535, 358, 359, 360, 361, 830, 560,
	288, 456, 384, 0, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 525, 526, 523, 620, 0, 583, 584,
	0, 0, 450, 451, 316, 323, 469, 325, 287, 373,
	318, 435, 332, 0, 462, 527, 463, 586, 589, 587,
	588, 365, 328, 329, 399, 333, 343, 387, 434, 371,
	392, 285, 425, 400, 347, 513, 540, 852, 826, 851,
	853, 854, 850, 855, 856, 837, 730, 0, 781, 848,
	847, 849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 568, 567, 566, 565, 564, 563, 562,
	561, 0, 0, 510, 412, 297, 259, 293, 294, 301,
	609, 606, 416, 610, 0, 267, 490, 341, 0, 382,
	315, 555, 556, 0, 0, 815, 788, 789, 790, 727,
	791, 785, 786, 728, 787, 816, 779, 812, 813, 755,
	782, 792, 811, 793, 814, 817, 818, 857, 858, 799,
	783, 231, 859, 796, 819, 810, 809, 794, 780, 820,
	821, 762, 757, 797, 798, 784, 803, 804, 802, 805,
	729, 776, 777, 778, 800, 801, 758, 759, 760, 761,
	0, 0, 0, 441, 442, 443, 465, 0, 427, 489,
	607, 0, 0, 0, 0, 0, 0, 0, 539, 551,
	585, 0, 595, 596, 598, 600, 806, 602, 772, 613,
	480, 481, 614, 591, 0, 722, 0, 370, 0, 495,
	528, 517, 601, 483, 0, 0, 0, 0, 0, 0,
	725, 0, 0, 0, 310, 0, 0, 340, 532, 514,
	524, 515, 0, 500, 501, 502, 509, 320, 503, 504,
	505, 475, 506, 476, 507, 508, 763, 531, 482, 401,
	354, 549, 548, 0, 0, 831, 839, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 717, 0,
	0, 753, 808, 807, 740, 750, 0, 0, 283, 205,
	477, 597, 479, 478, 741, 0, 742, 746, 749, 745,
	743, 744, 0, 823, 0, 0, 0, 0, 0, 0,
	709, 721, 0, 726, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 718, 719, 1760,
	0, 0, 0, 773, 0, 720, 0, 0, 768, 747,
	751, 0, 0, 0, 0, 273, 406, 423, 284, 397,
	436, 289, 404, 279, 369, 393, 0, 0, 275, 421,
	403, 351, 330, 331, 274, 0, 388, 308, 322, 305,
	367, 748, 771, 775, 304, 845, 769, 431, 277, 0,
	430, 366, 417, 422, 352, 346, 276, 419, 350, 345,
	334, 312, 846, 335, 336, 326, 378, 344, 379, 327,
	356, 355, 357, 0, 0, 0, 0, 0, 459, 460,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 590, 766, 0, 594, 0, 433, 0, 0,
	829, 0, 0, 0, 405, 0, 0, 337, 0, 0,
	0, 770, 0, 391, 372, 842, 0, 0, 389, 342,
	418, 380, 424, 407, 432, 385, 381, 268, 408, 307,
	353, 280, 282, 302, 309, 311, 313, 314, 362, 363,
	375, 396, 409, 410, 411, 306, 290, 390, 291, 324,
	292, 269, 298, 296, 299, 398, 300, 271, 376, 415,
	0, 319, 386, 349, 272, 348, 377, 414, 413, 281,
	440, 446, 447, 536, 0, 452, 617, 618, 619, 461,
	466, 467, 468, 470, 471, 472, 473, 537, 554, 521,
	491, 454, 545, 488, 492, 493, 557, 0, 0, 0,
	445, 338, 339, 0, 317, 265, 266, 612, 827, 368,
	559, 592, 593, 484, 0, 841, 822, 824, 825, 828,
	832, 833, 834, 835, 836, 838, 840, 844, 611, 0,
	538, 553, 615, 552, 608, 374, 0, 395, 550, 497,
	0, 542, 516, 0, 543, 512, 547, 0, 486, 0,
	402, 426, 438, 455, 458, 487, 572, 573, 574, 270,
	457, 576, 577, 578, 579, 580, 581, 582, 575, 843,
	519, 496, 522, 437, 499, 498, 0, 0, 533, 774,
	534, 535, 358, 359, 360, 361, 830, 560, 288, 456,
	384, 0, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 526, 523, 620, 0, 583, 584, 0, 0,
	450, 451, 316, 323, 469, 325, 287, 373, 318, 435,
	332, 0, 462, 527, 463, 586, 589, 587, 588, 365,
	328, 329, 399, 333, 343, 387, 434, 371, 392, 285,
	425, 400, 347, 513, 540, 852, 826, 851, 853, 854,
	850, 855, 856, 837, 730, 0, 781, 848, 847, 849,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 568, 567, 566, 565, 564, 563, 562, 561, 0,
	0, 510, 412, 297, 259, 293, 294, 301, 609, 606,
	416, 610, 0, 267, 490, 341, 0, 382, 315, 555,
	556, 0, 0, 815, 788, 789, 790, 727, 791, 785,
	786, 728, 787, 816, 779, 812, 813, 755, 782, 792,
	811, 793, 814, 817, 818, 857, 858, 799, 783, 231,
	859, 796, 819, 810, 809, 794, 780, 820, 821, 762,
	757, 797, 798, 784, 803, 804, 802, 805, 729, 776,
	777, 778, 800, 801, 758, 759, 760, 761, 0, 0,
	0, 441, 442, 443, 465, 0, 427, 489, 607, 0,
	0, 0, 0, 0, 0, 0, 539, 551, 585, 0,
	595, 596, 598, 600, 806, 602, 772, 613, 480, 481,
	614, 591, 0, 722, 0, 370, 0, 495, 528, 517,
	601, 483, 0, 0, 0, 0, 0, 0, 725, 0,
	0, 0, 310, 0, 0, 340, 532, 514, 524, 515,
	0, 500, 501, 502, 509, 320, 503, 504, 505, 475,
	506, 476, 507, 508, 763, 531, 482, 401, 354, 549,
	548, 0, 0, 831, 839, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 717, 0, 0, 753,
	808, 807, 740, 750, 0, 0, 283, 205, 477, 597,
	479, 478, 741, 0, 742, 746, 749, 745, 743, 744,
	0, 823, 0, 0, 0, 0, 0, 0, 709, 721,
	0, 726, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 718, 719, 0, 0, 0,
	0, 773, 0, 720, 0, 0, 768, 747, 751, 0,
	0, 0, 0, 273, 406, 423, 284, 397, 436, 289,
	404, 279, 369, 393, 0, 0, 275, 421, 403, 351,
	330, 331, 274, 0, 388, 308, 322, 305, 367, 748,
	771, 775, 304, 845, 769, 431, 277, 0, 430, 366,
	417, 422, 352, 346, 276, 419, 350, 345, 334, 312,
	846, 335, 336, 326, 378, 344, 379, 327, 356, 355,
	357, 0, 0, 0, 0, 0, 459, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	590, 766, 0, 594, 0, 433, 0, 0, 829, 0,
	0, 0, 405, 0, 0, 337, 0, 0, 0, 770,
	0, 391, 372, 842, 0, 0, 389, 342, 418, 380,
	424, 407, 432, 385, 381, 268, 408, 307, 353, 280,
	282, 302, 309, 311, 313, 314, 362, 363, 375, 396,
	409, 410, 411, 306, 290, 390, 291, 324, 292, 269,
	298, 296, 299, 398, 300, 271, 376, 415, 0, 319,
	386, 349, 272, 348, 377, 414, 413, 281, 440, 446,
	447, 536, 0, 452, 617, 618, 619, 461, 466, 467,
	468, 470, 471, 472, 473, 537, 554, 521, 491, 454,
	545, 488, 492, 493, 557, 0, 0, 0, 445, 338,
	339, 0, 317, 265, 266, 612, 827, 368, 559, 592,
	593, 484, 0, 841, 822, 824, 825, 828, 832, 833,
	834, 835, 836, 838, 840, 844, 611, 0, 538, 553,
	615, 552, 608, 374, 0, 395, 550, 497, 0, 542,
	516, 0, 543, 512, 547, 0, 486, 0, 402, 426,
	438, 455, 458, 487, 572, 573, 574, 270, 457, 576,
	577, 578, 579, 580, 581, 582, 575, 843, 519, 496,
	522, 437, 499, 498, 0, 0, 533, 774, 534, 535,
	358, 359, 360, 361, 830, 560, 288, 456, 384, 0,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	526, 523, 620, 0, 583, 584, 0, 0, 450, 451,
	316, 323, 469, 325, 287, 373, 318, 435, 332, 0,
	462, 527, 463, 586, 589, 587, 588, 365, 328, 329,
	399, 333, 343, 387, 434, 371, 392, 285, 425, 400,
	347, 513, 540, 852, 826, 851, 853, 854, 850, 855,
	856, 837, 730, 0, 781, 848, 847, 849, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 568,
	567, 566, 565, 564, 563, 562, 561, 0, 0, 510,
	412, 297, 259, 293, 294, 301, 609, 606, 416, 610,
	0, 267, 490, 341, 0, 382, 315, 555, 556, 0,
	0, 815, 788, 789, 790, 727, 791, 785, 786, 728,
	787, 816, 779, 812, 813, 755, 782, 792, 811, 793,
	814, 817, 818, 857, 858, 799, 783, 231, 859, 796,
	819, 810, 809, 794, 780, 820, 821, 762, 757, 797,
	798, 784, 803, 804, 802, 805, 729, 776, 777, 778,
	800, 801, 758, 759, 760, 761, 0, 0, 0, 441,
	442, 443, 465, 0, 427, 489, 607, 0, 0, 0,
	0, 0, 0, 0, 539, 551, 585, 0, 595, 596,
	598, 600, 806, 602, 772, 613, 480, 481, 614, 591,
	0, 722, 0, 370, 0, 495, 528, 517, 601, 483,
	0, 0, 0, 0, 0, 0, 725, 0, 0, 0,
	310, 0, 0, 340, 532, 514, 524, 515, 0, 500,
	501, 502, 509, 320, 503, 504, 505, 475, 506, 476,
	507, 508, 763, 531, 482, 401, 354, 549, 548, 0,
	0, 831, 839, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 717, 0, 0, 753, 808, 807,
	740, 750, 0, 0, 283, 205, 477, 597, 479, 478,
	2586, 0, 2587, 746, 749, 745, 743, 744, 0, 823,
	0, 0, 0, 0, 0, 0, 709, 721, 0, 726,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 718, 719, 0, 0, 0, 0, 773,
	0, 720, 0, 0, 768, 747, 751, 0, 0, 0,
	0, 273, 406, 423, 284, 397, 436, 289, 404, 279,
	369, 393, 0, 0, 275, 421, 403, 351, 330, 331,
	274, 0, 388, 308, 322, 305, 367, 748, 771, 775,
	304, 845, 769, 431, 277, 0, 430, 366, 417, 422,
	352, 346, 276, 419, 350, 345, 334, 312, 846, 335,
	336, 326, 378, 344, 379, 327, 356, 355, 357, 0,
	0, 0, 0, 0, 459, 460, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 590, 766,
	0, 594, 0, 433, 0, 0, 829, 0, 0, 0,
	405, 0, 0, 337, 0, 0, 0, 770, 0, 391,
	372, 842, 0, 0, 389, 342, 418, 380, 424, 407,
	432, 385, 381, 268, 408, 307, 353, 280, 282, 302,
	309, 311, 313, 314, 362, 363, 375, 396, 409, 410,
	411, 306, 290, 390, 291, 324, 292, 269, 298, 296,
	299, 398, 300, 271, 376, 415, 0, 319, 386, 349,
	272, 348, 377, 414, 413, 281, 440, 446, 447, 536,
	0, 452, 617, 618, 619, 461, 466, 467, 468, 470,
	471, 472, 473, 537, 554, 521, 491, 454, 545, 488,
	492, 493, 557, 0, 0, 0, 445, 338, 339, 0,
	317, 265, 266, 612, 827, 368, 559, 592, 593, 484,
	0, 841, 822, 824, 825, 828, 832, 833, 834, 835,
	836, 838, 840, 844, 611, 0, 538, 553, 615, 552,
	608, 374, 0, 395, 550, 497, 0, 542, 516, 0,
	543, 512, 547, 0, 486, 0, 402, 426, 438, 455,
	458, 487, 572, 573, 574, 270, 457, 576, 577, 578,
	579, 580, 581, 582, 575, 843, 519, 496, 522, 437,
	499, 498, 0, 0, 533, 774, 534, 535, 358, 359,
	360, 361, 830, 560, 288, 456, 384, 0, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 525, 526, 523,
	620, 0, 583, 584, 0, 0, 450, 451, 316, 323,
	469, 325, 287, 373, 318, 435, 332, 0, 462, 527,
	463, 586, 589, 587, 588, 365, 328, 329, 399, 333,
	343, 387, 434, 371, 392, 285, 425, 400, 347, 513,
	540, 852, 826, 851, 853, 854, 850, 855, 856, 837,
	730, 0, 781, 848, 847, 849, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 568, 567, 566,
	565, 564, 563, 562, 561, 0, 0, 510, 412, 297,
	259, 293, 294, 301, 609, 606, 416, 610, 0, 267,
	490, 341, 0, 382, 315, 555, 556, 0, 0, 815,
	788, 789, 790, 727, 791, 785, 786, 728, 787, 816,
	779, 812, 813, 755, 782, 792, 811, 793, 814, 817,
	818, 857, 858, 799, 783, 231, 859, 796, 819, 810,
	809, 794, 780, 820, 821, 762, 757, 797, 798, 784,
	803, 804, 802, 805, 729, 776, 777, 778, 800, 801,
	758, 759, 760, 761, 0, 0, 0, 441, 442, 443,
	465, 0, 427, 489, 607, 0, 0, 0, 0, 0,
	0, 0, 539, 551, 585, 0, 595, 596, 598, 600,
	806, 602, 772, 613, 480, 481, 614, 591, 0, 722,
	0, 370, 0, 495, 528, 517, 601, 483, 0, 0,
	1629, 0, 0, 0, 725, 0, 0, 0, 310, 0,
	0, 340, 532, 514, 524, 515, 0, 500, 501, 502,
	509, 320, 503, 504, 505, 475, 506, 476, 507, 508,
	763, 531, 482, 401, 354, 549, 548, 0, 0, 831,
	839, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 717, 0, 0, 753, 808, 807, 740, 750,
	0, 0, 283, 205, 477, 597, 479, 478, 741, 0,
	742, 746, 749, 745, 743, 744, 0, 823, 0, 0,
	0, 0, 0, 0, 0, 721, 0, 726, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 718, 719, 0, 0, 0, 0, 773, 0, 720,
	0, 0, 768, 747, 751, 0, 0, 0, 0, 273,
	406, 423, 284, 397, 436, 289, 404, 279, 369, 393,
	0, 0, 275, 421, 403, 351, 330, 331, 274, 0,
	388, 308, 322, 305, 367, 748, 771, 775, 304, 845,
	769, 431, 277, 0, 430, 366, 417, 422, 352, 346,
	276, 419, 350, 345, 334, 312, 846, 335, 336, 326,
	378, 344, 379, 327, 356, 355, 357, 0, 0, 0,
	0, 0, 459, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 590, 766, 0, 594,
	0, 433, 0, 0, 829, 0, 0, 0, 405, 0,
	0, 337, 0, 0, 0, 770, 0, 391, 372, 842,
	0, 0, 389, 342, 418, 380, 424, 407, 432, 385,
	381, 268, 408, 307, 353, 280, 282, 302, 309, 311,
	313, 314, 362, 363, 375, 396, 409, 410, 411, 306,
	290, 390, 291, 324, 292, 269, 298, 296, 299, 398,
	300, 271, 376, 415, 0, 319, 386, 349, 272, 348,
	377, 414, 413, 281, 440, 1630, 1631, 536, 0, 452,
	617, 618, 619, 461, 466, 467, 468, 470, 471, 472,
	473, 537, 554, 521, 491, 454, 545, 488, 492, 493,
	557, 0, 0, 0, 445, 338, 339, 0, 317, 265,
	266, 612, 827, 368, 559, 592, 593, 484, 0, 841,
	822, 824, 825, 828, 832, 833, 834, 835, 836, 838,
	840, 844, 611, 0, 538, 553, 615, 552, 608, 374,
	0, 395, 550, 497, 0, 542, 516, 0, 543, 512,
	547, 0, 486, 0, 402, 426, 438, 455, 458, 487,
	572, 573, 574, 270, 457, 576, 577, 578, 579, 580,
	581, 582, 575, 843, 519, 496, 522, 437, 499, 498,
	0, 0, 533, 774, 534, 535, 358, 359, 360, 361,
	830, 560, 288, 456, 384, 0, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 526, 523, 620, 0,
	583, 584, 0, 0, 450, 451, 316, 323, 469, 325,
	287, 373, 318, 435, 332, 0, 462, 527, 463, 586,
	589, 587, 588, 365, 328, 329, 399, 333, 343, 387,
	434, 371, 392, 285, 425, 400, 347, 513, 540, 852,
	826, 851, 853, 854, 850, 855, 856, 837, 730, 0,
	781, 848, 847, 849, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 568, 567, 566, 565, 564,
	563, 562, 561, 0, 0, 510, 412, 297, 259, 293,
	294, 301, 609, 606, 416, 610, 0, 267, 490, 341,
	0, 382, 315, 555, 556, 0, 0, 815, 788, 789,
	790, 727, 791, 785, 786, 728, 787, 816, 779, 812,
	813, 755, 782, 792, 811, 793, 814, 817, 818, 857,
	858, 799, 783, 231, 859, 796, 819, 810, 809, 794,
	780, 820, 821, 762, 757, 797, 798, 784, 803, 804,
	802, 805, 729, 776, 777, 778, 800, 801, 758, 759,
	760, 761, 0, 0, 0, 441, 442, 443, 465, 0,
	427, 489, 607, 0, 0, 0, 0, 0, 0, 0,
	539, 551, 585, 0, 595, 596, 598, 600, 806, 602,
	772, 613, 480, 481, 614, 591, 0, 722, 0, 370,
	0, 495, 528, 517, 601, 483, 0, 0, 0, 0,
	0, 0, 725, 0, 0, 0, 310, 0, 0, 340,
	532, 514, 524, 515, 0, 500, 501, 502, 509, 320,
	503, 504, 505, 475, 506, 476, 507, 508, 763, 531,
	482, 401, 354, 549, 548, 0, 0, 831, 839, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	717, 0, 0, 753, 808, 807, 740, 750, 0, 0,
	283, 205, 477, 597, 479, 478, 741, 0, 742, 746,
	749, 745, 743, 744, 0, 823, 0, 0, 0, 0,
	0, 0, 0, 721, 0, 726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 718,
	719, 0, 0, 0, 0, 773, 0, 720, 0, 0,
	768, 747, 751, 0, 0, 0, 0, 273, 406, 423,
	284, 397, 436, 289, 404, 279, 369, 393, 0, 0,
	275, 421, 403, 351, 330, 331, 274, 0, 388, 308,
	322, 305, 367, 748, 771, 775, 304, 845, 769, 431,
	277, 0, 430, 366, 417, 422, 352, 346, 276, 419,
	350, 345, 334, 312, 846, 335, 336, 326, 378, 344,
	379, 327, 356, 355, 357, 0, 0, 0, 0, 0,
	459, 460, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 590, 766, 0, 594, 0, 433,
	0, 0, 829, 0, 0, 0, 405, 0, 0, 337,
	0, 0, 0, 770, 0, 391, 372, 842, 0, 0,
	389, 342, 418, 380, 424, 407, 432, 385, 381, 268,
	408, 307, 353, 280, 282, 302, 309, 311, 313, 314,
	362, 363, 375, 396, 409, 410, 411, 306, 290, 390,
	291, 324, 292, 269, 298, 296, 299, 398, 300, 271,
	376, 415, 0, 319, 386, 349, 272, 348, 377, 414,
	413, 281, 440, 446, 447, 536, 0, 452, 617, 618,
	619, 461, 466, 467, 468, 470, 471, 472, 473, 537,
	554, 521, 491, 454, 545, 488, 492, 493, 557, 0,
	0, 0, 445, 338, 339, 0, 317, 265, 266, 612,
	827, 368, 559, 592, 593, 484, 0, 841, 822, 824,
	825, 828, 832, 833, 834, 835, 836, 838, 840, 844,
	611, 0, 538, 553, 615, 552, 608, 374, 0, 395,
	550, 497, 0, 542, 516, 0, 543, 512, 547, 0,
	486, 0, 402, 426, 438, 455, 458, 487, 572, 573,
	574, 270, 457, 576, 577, 578, 579, 580, 581, 582,
	575, 843, 519, 496, 522, 437, 499, 498, 0, 0,
	533, 774, 534, 535, 358, 359, 360, 361, 830, 560,
	288, 456, 384, 0, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 525, 526, 523, 620, 0, 583, 584,
	0, 0, 450, 451, 316, 323, 469, 325, 287, 373,
	318, 435, 332, 0, 462, 527, 463, 586, 589, 587,
	588, 365, 328, 329, 399, 333, 343, 387, 434, 371,
	392, 285, 425, 400, 347, 513, 540, 852, 826, 851,
	853, 854, 850, 855, 856, 837, 730, 0, 781, 848,
	847, 849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 568, 567, 566, 565, 564, 563, 562,
	561, 0, 0, 510, 412, 297, 259, 293, 294, 301,
	609, 606, 416, 610, 0, 267, 490, 341, 0, 382,
	315, 555, 556, 0, 0, 815, 788, 789, 790, 727,
	791, 785, 786, 728, 787, 816, 779, 812, 813, 755,
	782, 792, 811, 793, 814, 817, 818, 857, 858, 799,
	783, 231, 859, 796, 819, 810, 809, 794, 780, 820,
	821, 762, 757, 797, 798, 784, 803, 804, 802, 805,
	729, 776, 777, 778, 800, 801, 758, 759, 760, 761,
	0, 0, 0, 441, 442, 443, 465, 0, 427, 489,
	607, 0, 0, 0, 0, 0, 0, 0, 539, 551,
	585, 0, 595, 596, 598, 600, 806, 602, 772, 613,
	480, 481, 614, 591, 0, 722, 0, 370, 0, 495,
	528, 517, 601, 483, 0, 0, 0, 0, 0, 0,
	725, 0, 0, 0, 310, 0, 0, 340, 532, 514,
	524, 515, 0, 500, 501, 502, 509, 320, 503, 504,
	505, 475, 506, 476, 507, 508, 763, 531, 482, 401,
	354, 549, 548, 0, 0, 831, 839, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 753, 808, 807, 740, 750, 0, 0, 283, 205,
	477, 597, 479, 478, 741, 0, 742, 746, 749, 745,
	743, 744, 0, 823, 0, 0, 0, 0, 0, 0,
	709, 721, 0, 726, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 718, 719, 0,
	0, 0, 0, 773, 0, 720, 0, 0, 768, 747,
	751, 0, 0, 0, 0, 273, 406, 423, 284, 397,
	436, 289, 404, 279, 369, 393, 0, 0, 275, 421,
	403, 351, 330, 331, 274, 0, 388, 308, 322, 305,
	367, 748, 771, 775, 304, 845, 769, 431, 277, 0,
	430, 366, 417, 422, 352, 346, 276, 419, 350, 345,
	334, 312, 846, 335, 336, 326, 378, 344, 379, 327,
	356, 355, 357, 0, 0, 0, 0, 0, 459, 460,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 590, 766, 0, 594, 0, 433, 0, 0,
	829, 0, 0, 0, 405, 0, 0, 337, 0, 0,
	0, 770, 0, 391, 372, 842, 0, 0, 389, 342,
	418, 380, 424, 407, 432, 385, 381, 268, 408, 307,
	353, 280, 282, 302, 309, 311, 313, 314, 362, 363,
	375, 396, 409, 410, 411, 306, 290, 390, 291, 324,
	292, 269, 298, 296, 299, 398, 300, 271, 376, 415,
	0, 319, 386, 349, 272, 348, 377, 414, 413, 281,
	440, 446, 447, 536, 0, 452, 617, 618, 619, 461,
	466, 467, 468, 470, 471, 472, 473, 537, 554, 521,
	491, 454, 545, 488, 492, 493, 557, 0, 0, 0,
	445, 338, 339, 0, 317, 265, 266, 612, 827, 368,
	559, 592, 593, 484, 0, 841, 822, 824, 825, 828,
	832, 833, 834, 835, 836, 838, 840, 844, 611, 0,
	538, 553, 615, 552, 608, 374, 0, 395, 550, 497,
	0, 542, 516, 0, 543, 512, 547, 0, 486, 0,
	402, 426, 438, 455, 458, 487, 572, 573, 574, 270,
	457, 576, 577, 578, 579, 580, 581, 582, 575, 843,
	519, 496, 522, 437, 499, 498, 0, 0, 533, 774,
	534, 535, 358, 359, 360, 361, 830, 560, 288, 456,
	384, 0, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 526, 523, 620, 0, 583, 584, 0, 0,
	450, 451, 316, 323, 469, 325, 287, 373, 318, 435,
	332, 0, 462, 527, 463, 586, 589, 587, 588, 365,
	328, 329, 399, 333, 343, 387, 434, 371, 392, 285,
	425, 400, 347, 513, 540, 852, 826, 851, 853, 854,
	850, 855, 856, 837, 730, 0, 781, 848, 847, 849,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 568, 567, 566, 565, 564, 563, 562, 561, 0,
	0, 510, 412, 297, 259, 293, 294, 301, 609, 606,
	416, 610, 0, 267, 490, 341, 0, 382, 315, 555,
	556, 0, 0, 815, 788, 789, 790, 727, 791, 785,
	786, 728, 787, 816, 779, 812, 813, 755, 782, 792,
	811, 793, 814, 817, 818, 857, 858, 799, 783, 231,
	859, 796, 819, 810, 809, 794, 780, 820, 821, 762,
	757, 797, 798, 784, 803, 804, 802, 805, 729, 776,
	777, 778, 800, 801, 758, 759, 760, 761, 0, 0,
	0, 441, 442, 443, 465, 0, 427, 489, 607, 0,
	0, 0, 0, 0, 0, 0, 539, 551, 585, 0,
	595, 596, 598, 600, 806, 602, 0, 613, 480, 481,
	614, 591, 0, 722, 182, 55, 171, 145, 0, 0,
	0, 0, 0, 0, 370, 0, 495, 528, 517, 601,
	483, 0, 172, 0, 0, 0, 0, 0, 0, 164,
	0, 310, 0, 173, 340, 532, 514, 524, 515, 0,
	500, 501, 502, 509, 320, 503, 504, 505, 475, 506,
	476, 507, 508, 121, 531, 482, 401, 354, 549, 548,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 0,
	0, 0, 0, 0, 0, 176, 0, 0, 204, 0,
	0, 0, 0, 0, 0, 283, 205, 477, 597, 479,
	478, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 406, 423, 284, 397, 436, 289, 404,
	279, 369, 393, 0, 0, 275, 421, 403, 351, 330,
	331, 274, 0, 388, 308, 322, 305, 367, 0, 420,
	448, 304, 439, 0, 431, 277, 0, 430, 366, 417,
	422, 352, 346, 276, 419, 350, 345, 334, 312, 464,
	335, 336, 326, 378, 344, 379, 327, 356, 355, 357,
	0, 0, 0, 0, 0, 459, 460, 0, 0, 0,
	0, 0, 0, 144, 170, 180, 0, 107, 0, 590,
	0, 0, 594, 0, 433, 0, 0, 197, 0, 0,
	0, 405, 0, 0, 337, 169, 163, 162, 449, 0,
	391, 372, 209, 0, 0, 389, 342, 418, 380, 424,
	407, 432, 385, 381, 268, 408, 307, 353, 280, 282,
	302, 309, 311, 313, 314, 362, 363, 375, 396, 409,
	410, 411, 306, 290, 390, 291, 324, 292, 269, 298,
	296, 299, 398, 300, 271, 376, 415, 0, 319, 386,
	349, 272, 348, 377, 414, 413, 281, 440, 446, 447,
	536, 0, 452, 569, 570, 571, 461, 466, 467, 468,
	470, 471, 472, 473, 537, 554, 521, 491, 454, 545,
	488, 492, 493, 557, 0, 0, 0, 445, 338, 339,
	0, 317, 265, 266, 428, 303, 368, 559, 592, 593,
	484, 0, 546, 485, 494, 295, 518, 530, 529, 364,
	444, 200, 541, 544, 474, 210, 0, 538, 553, 511,
	552, 211, 374, 0, 395, 550, 497, 0, 542, 516,
	0, 543, 512, 547, 0, 486, 0, 402, 426, 438,
	455, 458, 487, 572, 573, 574, 270, 457, 576, 577,
	578, 579, 580, 581, 582, 575, 429, 519, 496, 522,
	437, 499, 498, 0, 0, 533, 453, 534, 535, 358,
	359, 360, 361, 321, 560, 288, 456, 384, 119, 520,
	0, 0, 0, 0, 0, 0, 0, 0, 525, 526,
	523, 208, 0, 583, 584, 0, 0, 450, 451, 316,
	323, 469, 325, 287, 373, 318, 435, 332, 0, 462,
	527, 463, 586, 589, 587, 588, 365, 328, 329, 399,
	333, 343, 387, 434, 371, 392, 285, 425, 400, 347,
	513, 540, 0, 0, 0, 0, 0, 0, 0, 0,
	56, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 568, 567,
	566, 565, 564, 563, 562, 561, 0, 0, 510, 412,
	297, 259, 293, 294, 301, 383, 278, 416, 394, 0,
	267, 490, 341, 146, 382, 315, 555, 556, 52, 0,
	215, 216, 217, 218, 219, 220, 221, 222, 260, 223,
	224, 225, 226, 227, 228, 229, 232, 233, 234, 235,
	236, 237, 238, 239, 558, 230, 231, 240, 241, 242,
	243, 244, 245, 246, 247, 248, 249, 250, 251, 252,
	253, 0, 0, 0, 0, 261, 262, 263, 264, 0,
	0, 255, 256, 257, 258, 0, 0, 0, 441, 442,
	443, 465, 0, 427, 489, 212, 41, 198, 201, 203,
	202, 0, 53, 539, 551, 585, 5, 595, 596, 598,
	600, 599, 602, 124, 213, 480, 481, 214, 591, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	0, 495, 528, 517, 601, 483, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 0, 0, 340,
	532, 514, 524, 515, 0, 500, 501, 502, 509, 320,
	503, 504, 505, 475, 506, 476, 507, 508, 121, 531,
	482, 401, 354, 549, 548, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	176, 0, 0, 204, 0, 0, 0, 0, 0, 0,
	283, 205, 477, 597, 479, 478, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 286, 2277, 2280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 406, 423,
	284, 397, 436, 289, 404, 279, 369, 393, 0, 0,
	275, 421, 403, 351, 330, 331, 274, 0, 388, 308,
	322, 305, 367, 0, 420, 448, 304, 439, 0, 431,
	277, 0, 430, 366, 417, 422, 352, 346, 276, 419,
	350, 345, 334, 312, 464, 335, 336, 326, 378, 344,
	379, 327, 356, 355, 357, 0, 0, 0, 0, 0,
	459, 460, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 590, 0, 0, 594, 2281, 433,
	0, 0, 0, 2276, 0, 2275, 405, 2273, 2278, 337,
	0, 0, 0, 449, 0, 391, 372, 616, 0, 0,
	389, 342, 418, 380, 424, 407, 432, 385, 381, 268,
	408, 307, 353, 280, 282, 302, 309, 311, 313, 314,
	362, 363, 375, 396, 409, 410, 411, 306, 290, 390,
	291, 324, 292, 269, 298, 296, 299, 398, 300, 271,
	376, 415, 2279, 319, 386, 349, 272, 348, 377, 414,
	413, 281, 440, 446, 447, 536, 0, 452, 617, 618,
	619, 461, 466, 467, 468, 470, 471, 472, 473, 537,
	554, 521, 491, 454, 545, 488, 492, 493, 557, 0,
	0, 0, 445, 338, 339, 0, 317, 265, 266, 612,
	303, 368, 559, 592, 593, 484, 0, 546, 485, 494,
	295, 518, 530, 529, 364, 444, 0, 541, 544, 474,
	611, 0, 538, 553, 615, 552, 608, 374, 0, 395,
	550, 497, 0, 542, 516, 0, 543, 512, 547, 0,
	486, 0, 402, 426, 438, 455, 458, 487, 572, 573,
	574, 270, 457, 576, 577, 578, 579, 580, 581, 582,
	575, 429, 519, 496, 522, 437, 499, 498, 0, 0,
	533, 453, 534, 535, 358, 359, 360, 361, 321, 560,
	288, 456, 384, 0, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 525, 526, 523, 620, 0, 583, 584,
	0, 0, 450, 451, 316, 323, 469, 325, 287, 373,
	318, 435, 332, 0, 462, 527, 463, 586, 589, 587,
	588, 365, 328, 329, 399, 333, 343, 387, 434, 371,
	392, 285, 425, 400, 347, 513, 540, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 568, 567, 566, 565, 564, 563, 562,
	561, 0, 0, 510, 412, 297, 259, 293, 294, 301,
	609, 606, 416, 610, 0, 267, 490, 341, 146, 382,
	315, 555, 556, 0, 0, 215, 216, 217, 218, 219,
	220, 221, 222, 260, 223, 224, 225, 226, 227, 228,
	229, 232, 233, 234, 235, 236, 237, 238, 239, 558,
	230, 231, 240, 241, 242, 243, 244, 245, 246, 247,
	248, 249, 250, 251, 252, 253, 0, 0, 0, 0,
	261, 262, 263, 264, 0, 0, 255, 256, 257, 258,
	0, 0, 0, 441, 442, 443, 465, 0, 427, 489,
	607, 0, 0, 0, 0, 0, 0, 0, 539, 551,
	585, 0, 595, 596, 598, 600, 599, 602, 0, 613,
	480, 481, 614, 591, 370, 0, 495, 528, 517, 601,
	483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 0, 0, 340, 532, 514, 524, 515, 0,
	500, 501, 502, 509, 320, 503, 504, 505, 475, 506,
	476, 507, 508, 0, 531, 482, 401, 354, 549, 548,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1255, 0, 0, 204, 0,
	0, 740, 750, 0, 0, 283, 205, 477, 597, 479,
	478, 741, 0, 742, 746, 749, 745, 743, 744, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 747, 0, 0, 0,
	0, 0, 273, 406, 423, 284, 397, 436, 289, 404,
	279, 369, 393, 0, 0, 275, 421, 403, 351, 330,
	331, 274, 0, 388, 308, 322, 305, 367, 748, 420,
	448, 304, 439, 0, 431, 277, 0, 430, 366, 417,
	422, 352, 346, 276, 419, 350, 345, 334, 312, 464,
	335, 336, 326, 378, 344, 379, 327, 356, 355, 357,
	0, 0, 0, 0, 0, 459, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 590,
	0, 0, 594, 0, 433, 0, 0, 0, 0, 0,
	0, 405, 0, 0, 337, 0, 0, 0, 449, 0,
	391, 372, 616, 0, 0, 389, 342, 418, 380, 424,
	407, 432, 385, 381, 268, 408, 307, 353, 280, 282,
	302, 309, 311, 313, 314, 362, 363, 375, 396, 409,
	410, 411, 306, 290, 390, 291, 324, 292, 269, 298,
	296, 299, 398, 300, 271, 376, 415, 0, 319, 386,
	349, 272, 348, 377, 414, 413, 281, 440, 446, 447,
	536, 0, 452, 617, 618, 619, 461, 466, 467, 468,
	470, 471, 472, 473, 537, 554, 521, 491, 454, 545,
	488, 492, 493, 557, 0, 0, 0, 445, 338, 339,
	0, 317, 265, 266, 612, 303, 368, 559, 592, 593,
	484, 0, 546, 485, 494, 295, 518, 530, 529, 364,
	444, 0, 541, 544, 474, 611, 0, 538, 553, 615,
	552, 608, 374, 0, 395, 550, 497, 0, 542, 516,
	0, 543, 512, 547, 0, 486, 0, 402, 426, 438,
	455, 458, 487, 572, 573, 574, 270, 457, 576, 577,
	578, 579, 580, 581, 582, 575, 429, 519, 496, 522,
	437, 499, 498, 0, 0, 533, 453, 534, 535, 358,
	359, 360, 361, 321, 560, 288, 456, 384, 0, 520,
	0, 0, 0, 0, 0, 0, 0, 0, 525, 526,
	523, 620, 0, 583, 584, 0, 0, 450, 451, 316,
	323, 469, 325, 287, 373, 318, 435, 332, 0, 462,
	527, 463, 586, 589, 587, 588, 365, 328, 329, 399,
	333, 343, 387, 434, 371, 392, 285, 425, 400, 347,
	513, 540, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 568, 567,
	566, 565, 564, 563, 562, 561, 0, 0, 510, 412,
	297, 259, 293, 294, 301, 609, 606, 416, 610, 0,
	267, 490, 341, 0, 382, 315, 555, 556, 0, 0,
	215, 216, 217, 218, 219, 220, 221, 222, 260, 223,
	224, 225, 226, 227, 228, 229, 232, 233, 234, 235,
	236, 237, 238, 239, 558, 230, 231, 240, 241, 242,
	243, 244, 245, 246, 247, 248, 249, 250, 251, 252,
	253, 0, 0, 0, 0, 261, 262, 263, 264, 0,
	0, 255, 256, 257, 258, 0, 0, 0, 441, 442,
	443, 465, 0, 427, 489, 607, 0, 0, 0, 0,
	0, 0, 0, 539, 551, 585, 0, 595, 596, 598,
	600, 599, 602, 0, 613, 480, 481, 614, 591, 182,
	55, 171, 145, 0, 0, 0, 0, 0, 0, 370,
	639, 495, 528, 517, 601, 483, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 0, 0, 340,
	532, 514, 524, 515, 0, 500, 501, 502, 509, 320,
	503, 504, 505, 475, 506, 476, 507, 508, 0, 531,
	482, 401, 354, 549, 548, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 0,
	644, 0, 0, 204, 0, 0, 0, 0, 0, 0,
	283, 205, 477, 597, 479, 478, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 406, 423,
	284, 397, 436, 289, 404, 279, 369, 393, 0, 0,
	275, 421, 403, 351, 330, 331, 274, 0, 388, 308,
	322, 305, 367, 0, 420, 448, 304, 439, 0, 431,
	277, 0, 430, 366, 417, 422, 352, 346, 276, 419,
	350, 345, 334, 312, 464, 335, 336, 326, 378, 344,
	379, 327, 356, 355, 357, 0, 0, 0, 0, 0,
	459, 460, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 643, 0, 590, 0, 0, 594, 0, 433,
	0, 0, 0, 0, 0, 0, 405, 0, 0, 337,
	0, 0, 0, 449, 0, 391, 372, 616, 0, 0,
	389, 342, 418, 380, 424, 407, 432, 385, 381, 268,
	408, 307, 353, 280, 282, 302, 309, 311, 313, 314,
	362, 363, 375, 396, 409, 410, 411, 306, 290, 390,
	291, 324, 292, 269, 298, 296, 299, 398, 300, 271,
	376, 415, 0, 319, 386, 349, 272, 348, 377, 414,
	413, 281, 440, 446, 447, 536, 0, 452, 617, 618,
	619, 461, 466, 467, 468, 470, 471, 472, 473, 537,
	554, 521, 491, 454, 545, 488, 492, 493, 557, 0,
	0, 0, 445, 338, 339, 0, 317, 265, 266, 612,
	303, 368, 559, 592, 593, 484, 0, 546, 485, 494,
	295, 518, 530, 529, 364, 444, 0, 541, 544, 474,
	611, 0, 538, 553, 615, 552, 608, 374, 0, 395,
	550, 497, 0, 542, 516, 0, 543, 512, 547, 0,
	486, 0, 402, 426, 438, 455, 458, 487, 572, 573,
	574, 270, 457, 576, 577, 578, 579, 580, 581, 582,
	575, 429, 519, 496, 522, 437, 499, 498, 0, 0,
	533, 453, 534, 535, 358, 359, 360, 361, 640, 642,
	288, 456, 384, 653, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 525, 526, 523, 620, 0, 583, 584,
	0, 0, 450, 451, 316, 323, 469, 325, 287, 373,
	318, 435, 332, 0, 462, 527, 463, 586, 589, 587,
	588, 365, 328, 329, 399, 333, 343, 387, 434, 371,
	392, 285, 425, 400, 347, 513, 540, 0, 0, 0,
	0, 0, 0, 0, 0, 56, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 568, 567, 566, 565, 564, 563, 562,
	561, 0, 0, 510, 412, 297, 259, 293, 294, 301,
	609, 606, 416, 610, 0, 267, 490, 341, 146, 382,
	315, 555, 556, 0, 0, 215, 216, 217, 218, 219,
	220, 221, 222, 260, 223, 224, 225, 226, 227, 228,
	229, 232, 233, 234, 235, 236, 237, 238, 239, 558,
	230, 231, 240, 241, 242, 243, 244, 245, 246, 247,
	248, 249, 250, 251, 252, 253, 0, 0, 0, 0,
	261, 262, 263, 264, 0, 0, 255, 256, 257, 258,
	0, 0, 0, 441, 442, 443, 465, 0, 427, 489,
	607, 0, 0, 0, 0, 0, 0, 0, 539, 551,
	585, 0, 595, 596, 598, 600, 599, 602, 0, 613,
	480, 481, 614, 591, 370, 0, 495, 528, 517, 601,
	483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 0, 0, 340, 532, 514, 524, 515, 0,
	500, 501, 502, 509, 320, 503, 504, 505, 475, 506,
	476, 507, 508, 0, 531, 482, 401, 354, 549, 548,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 0,
	0, 0, 0, 0, 0, 283, 205, 477, 597, 479,
	478, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	286, 2277, 2280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 406, 423, 284, 397, 436, 289, 404,
	279, 369, 393, 0, 0, 275, 421, 403, 351, 330,
	331, 274, 0, 388, 308, 322, 305, 367, 0, 420,
	448, 304, 439, 0, 431, 277, 0, 430, 366, 417,
	422, 352, 346, 276, 419, 350, 345, 334, 312, 464,
	335, 336, 326, 378, 344, 379, 327, 356, 355, 357,
	0, 0, 0, 0, 0, 459, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 590,
	0, 0, 594, 2281, 433, 0, 0, 0, 2276, 0,
	2275, 405, 2273, 2278, 337, 0, 0, 0, 449, 0,
	391, 372, 616, 0, 0, 389, 342, 418, 380, 424,
	407, 432, 385, 381, 268, 408, 307, 353, 280, 282,
	302, 309, 311, 313, 314, 362, 363, 375, 396, 409,
	410, 411, 306, 290, 390, 291, 324, 292, 269, 298,
	296, 299, 398, 300, 271, 376, 415, 2279, 319, 386,
	349, 272, 348, 377, 414, 413, 281, 440, 446, 447,
	536, 0, 452, 617, 618, 619, 461, 466, 467, 468,
	470, 471, 472, 473, 537, 554, 521, 491, 454, 545,
	488, 492, 493, 557, 0, 0, 0, 445, 338, 339,
	0, 317, 265, 266, 612, 303, 368, 559, 592, 593,
	484, 0, 546, 485, 494, 295, 518, 530, 529, 364,
	444, 0, 541, 544, 474, 611, 0, 538, 553, 615,
	552, 608, 374, 0, 395, 550, 497, 0, 542, 516,
	0, 543, 512, 547, 0, 486, 0, 402, 426, 438,
	455, 458, 487, 572, 573, 574, 270, 457, 576, 577,
	578, 579, 580, 581, 582, 575, 429, 519, 496, 522,
	437, 499, 498, 0, 0, 533, 453, 534, 535, 358,
	359, 360, 361, 321, 560, 288, 456, 384, 0, 520,
	0, 0, 0, 0, 0, 0, 0, 0, 525, 526,
	523, 620, 0, 583, 584, 0, 0, 450, 451, 316,
	323, 469, 325, 287, 373, 318, 435, 332, 0, 462,
	527, 463, 586, 589, 587, 588, 365, 328, 329, 399,
	333, 343, 387, 434, 371, 392, 285, 425, 400, 347,
	513, 540, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 568, 567,
	566, 565, 564, 563, 562, 561, 0, 0, 510, 412,
	297, 259, 293, 294, 301, 609, 606, 416, 610, 0,
	267, 490, 341, 0, 382, 315, 555, 556, 0, 0,
	215, 216, 217, 218, 219, 220, 221, 222, 260, 223,
	224, 225, 226, 227, 228, 229, 232, 233, 234, 235,
	236, 237, 238, 239, 558, 230, 231, 240, 241, 242,
	243, 244, 245, 246, 247, 248, 249, 250, 251, 252,
	253, 0, 0, 0, 0, 261, 262, 263, 264, 0,
	0, 255, 256, 257, 258, 0, 0, 0, 441, 442,
	443, 465, 0, 427, 489, 607, 0, 0, 0, 0,
	0, 0, 0, 539, 551, 585, 0, 595, 596, 598,
	600, 599, 602, 0, 613, 480, 481, 614, 591, 370,
	0, 495, 528, 517, 601, 483, 0, 1068, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 0, 0, 340,
	532, 514, 524, 515, 0, 500, 501, 502, 509, 320,
	503, 504, 505, 475, 506, 476, 507, 508, 0, 531,
	482, 401, 354, 549, 548, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 204, 0, 0, 0, 0, 0, 0,
	283, 205, 477, 597, 479, 478, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1054, 0, 0, 0, 0, 0, 0, 273, 406, 423,
	284, 397, 436, 289, 404, 279, 369, 393, 0, 0,
	2428, 2431, 2432, 2433, 2434, 2435, 2436, 0, 2441, 2437,
	2438, 2439, 2440, 0, 2423, 2424, 2425, 2426, 1052, 2407,
	2429, 0, 2408, 366, 2409, 2410, 2411, 2412, 2413, 2414,
	2415, 2416, 2417, 2420, 2421, 2418, 2419, 2427, 378, 344,
	379, 327, 356, 355, 357, 1079, 1081, 1083, 1085, 1088,
	459, 460, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 590, 0, 0, 594, 0, 433,
	0, 0, 0, 0, 0, 0, 405, 0, 0, 337,
	0, 0, 0, 2422, 0, 391, 372, 616, 0, 0,
	389, 342, 418, 380, 424, 407, 432, 385, 381, 268,
	408, 307, 353, 280, 282, 302, 309, 311, 313, 314,
	362, 363, 375, 396, 409, 410, 411, 306, 290, 390,
	291, 324, 292, 269, 298, 296, 299, 398, 300, 271,
	376, 415, 0, 319, 386, 349, 272, 348, 377, 414,
	413, 281, 440, 446, 447, 536, 0, 452, 617, 618,
	619, 461, 466, 467, 468, 470, 471, 472, 473, 537,
	554, 521, 491, 454, 545, 488, 492, 493, 557, 0,
	0, 0, 445, 338, 339, 0, 317, 265, 266, 612,
	303, 368, 559, 592, 593, 484, 0, 546, 485, 494,
	295, 518, 530, 529, 364, 444, 0, 541, 544, 474,
	611, 0, 538, 553, 615, 552, 608, 374, 0, 395,
	550, 497, 0, 542, 516, 0, 543, 512, 547, 0,
	486, 0, 402, 426, 438, 455, 458, 487, 572, 573,
	574, 270, 457, 576, 577, 578, 579, 580, 581, 582,
	575, 429, 519, 496, 522, 437, 499, 498, 0, 0,
	533, 453, 534, 535, 358, 359, 360, 361, 321, 560,
	288, 456, 384, 0, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 525, 526, 523, 620, 0, 583, 584,
	0, 0, 450, 451, 316, 323, 469, 325, 287, 373,
	318, 435, 332, 0, 462, 527, 463, 586, 589, 587,
	588, 365, 328, 329, 399, 333, 343, 387, 434, 371,
	392, 285, 425, 400, 347, 513, 540, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 568, 567, 566, 565, 564, 563, 562,
	561, 0, 0, 510, 412, 297, 259, 293, 294, 301,
	609, 606, 416, 610, 0, 267, 2430, 341, 0, 382,
	315, 555, 556, 0, 0, 215, 216, 217, 218, 219,
	220, 221, 222, 260, 223, 224, 225, 226, 227, 228,
	229, 232, 233, 234, 235, 236, 237, 238, 239, 558,
	230, 231, 240, 241, 242, 243, 244, 245, 246, 247,
	248, 249, 250, 251, 252, 253, 0, 0, 0, 0,
	261, 262, 263, 264, 0, 0, 255, 256, 257, 258,
	0, 0, 0, 441, 442, 443, 465, 0, 427, 489,
	607, 0, 0, 0, 0, 0, 0, 0, 539, 551,
	585, 0, 595, 596, 598, 600, 599, 602, 0, 613,
	480, 481, 614, 591, 370, 0, 495, 528, 517, 601,
	483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 0, 0, 340, 532, 514, 524, 515, 0,
	500, 501, 502, 509, 320, 503, 504, 505, 475, 506,
	476, 507, 508, 0, 531, 482, 401, 354, 549, 548,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 0,
	0, 0, 0, 0, 0, 283, 205, 477, 597, 479,
	478, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	286, 0, 2298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 406, 423, 284, 397, 436, 289, 404,
	279, 369, 393, 0, 0, 275, 421, 403, 351, 330,
	331, 274, 0, 388, 308, 322, 305, 367, 0, 420,
	448, 304, 439, 0, 431, 277, 0, 430, 366, 417,
	422, 352, 346, 276, 419, 350, 345, 334, 312, 464,
	335, 336, 326, 378, 344, 379, 327, 356, 355, 357,
	0, 0, 0, 0, 0, 459, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 590,
	0, 0, 594, 2297, 433, 0, 0, 0, 2303, 2300,
	2302, 405, 0, 2301, 337, 0, 0, 0, 449, 0,
	391, 372, 616, 0, 2295, 389, 342, 418, 380, 424,
	407, 432, 385, 381, 268, 408, 307, 353, 280, 282,
	302, 309, 311, 313, 314, 362, 363, 375, 396, 409,
	410, 411, 306, 290, 390, 291, 324, 292, 269, 298,
	296, 299, 398, 300, 271, 376, 415, 0, 319, 386,
	349, 272, 348, 377, 414, 413, 281, 440, 446, 447,
	536, 0, 452, 617, 618, 619, 461, 466, 467, 468,
	470, 471, 472, 473, 537, 554, 521, 491, 454, 545,
	488, 492, 493, 557, 0, 0, 0, 445, 338, 339,
	0, 317, 265, 266, 612, 303, 368, 559, 592, 593,
	484, 0, 546, 485, 494, 295, 518, 530, 529, 364,
	444, 0, 541, 544, 474, 611, 0, 538, 553, 615,
	552, 608, 374, 0, 395, 550, 497, 0, 542, 516,
	0, 543, 512, 547, 0, 486, 0, 402, 426, 438,
	455, 458, 487, 572, 573, 574, 270, 457, 576, 577,
	578, 579, 580, 581, 582, 575, 429, 519, 496, 522,
	437, 499, 498, 0, 0, 533, 453, 534, 535, 358,
	359, 360, 361, 321, 560, 288, 456, 384, 0, 520,
	0, 0, 0, 0, 0, 0, 0, 0, 525, 526,
	523, 620, 0, 583, 584, 0, 0, 450, 451, 316,
	323, 469, 325, 287, 373, 318, 435, 332, 0, 462,
	527, 463, 586, 589, 587, 588, 365, 328, 329, 399,
	333, 343, 387, 434, 371, 392, 285, 425, 400, 347,
	513, 540, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 568, 567,
	566, 565, 564, 563, 562, 561, 0, 0, 510, 412,
	297, 259, 293, 294, 301, 609, 606, 416, 610, 0,
	267, 490, 341, 0, 382, 315, 555, 556, 0, 0,
	215, 216, 217, 218, 219, 220, 221, 222, 260, 223,
	224, 225, 226, 227, 228, 229, 232, 233, 234, 235,
	236, 237, 238, 239, 558, 230, 231, 240, 241, 242,
	243, 244, 245, 246, 247, 248, 249, 250, 251, 252,
	253, 0, 0, 0, 0, 261, 262, 263, 264, 0,
	0, 255, 256, 257, 258, 0, 0, 0, 441, 442,
	443, 465, 0, 427, 489, 607, 0, 0, 0, 0,
	0, 0, 0, 539, 551, 585, 0, 595, 596, 598,
	600, 599, 602, 0, 613, 480, 481, 614, 591, 370,
	0, 495, 528, 517, 601, 483, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 0, 0, 340,
	532, 514, 524, 515, 0, 500, 501, 502, 509, 320,
	503, 504, 505, 475, 506, 476, 507, 508, 0, 531,
	482, 401, 354, 549, 548, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 204, 0, 0, 0, 0, 0, 0,
	283, 205, 477, 597, 479, 478, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 286, 0, 2298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 406, 423,
	284, 397, 436, 289, 404, 279, 369, 393, 0, 0,
	275, 421, 403, 351, 330, 331, 274, 0, 388, 308,
	322, 305, 367, 0, 420, 448, 304, 439, 0, 431,
	277, 0, 430, 366, 417, 422, 352, 346, 276, 419,
	350, 345, 334, 312, 464, 335, 336, 326, 378, 344,
	379, 327, 356, 355, 357, 0, 0, 0, 0, 0,
	459, 460, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 590, 0, 0, 594, 2297, 433,
	0, 0, 0, 2303, 2300, 2302, 405, 0, 2301, 337,
	0, 0, 0, 449, 0, 391, 372, 616, 0, 0,
	389, 342, 418, 380, 424, 407, 432, 385, 381, 268,
	408, 307, 353, 280, 282, 302, 309, 311, 313, 314,
	362, 363, 375, 396, 409, 410, 411, 306, 290, 390,
	291, 324, 292, 269, 298, 296, 299, 398, 300, 271,
	376, 415, 0, 319, 386, 349, 272, 348, 377, 414,
	413, 281, 440, 446, 447, 536, 0, 452, 617, 618,
	619, 461, 466, 467, 468, 470, 471, 472, 473, 537,
	554, 521, 491, 454, 545, 488, 492, 493, 557, 0,
	0, 0, 445, 338, 339, 0, 317, 265, 266, 612,
	303, 368, 559, 592, 593, 484, 0, 546, 485, 494,
	295, 518, 530, 529, 364, 444, 0, 541, 544, 474,
	611, 0, 538, 553, 615, 552, 608, 374, 0, 395,
	550, 497, 0, 542, 516, 0, 543, 512, 547, 0,
	486, 0, 402, 426, 438, 455, 458, 487, 572, 573,
	574, 270, 457, 576, 577, 578, 579, 580, 581, 582,
	575, 429, 519, 496, 522, 437, 499, 498, 0, 0,
	533, 453, 534, 535, 358, 359, 360, 361, 321, 560,
	288, 456, 384, 0, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 525, 526, 523, 620, 0, 583, 584,
	0, 0, 450, 451, 316, 323, 469, 325, 287, 373,
	318, 435, 332, 0, 462, 527, 463, 586, 589, 587,
	588, 365, 328, 329, 399, 333, 343, 387, 434, 371,
	392, 285, 425, 400, 347, 513, 540, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 568, 567, 566, 565, 564, 563, 562,
	561, 0, 0, 510, 412, 297, 259, 293, 294, 301,
	609, 606, 416, 610, 0, 267, 490, 341, 0, 382,
	315, 555, 556, 0, 0, 215, 216, 217, 218, 219,
	220, 221, 222, 260, 223, 224, 225, 226, 227, 228,
	229, 232, 233, 234, 235, 236, 237, 238, 239, 558,
	230, 231, 240, 241, 242, 243, 244, 245, 246, 247,
	248, 249, 250, 251, 252, 253, 0, 0, 0, 0,
	261, 262, 263, 264, 0, 0, 255, 256, 257, 258,
	0, 0, 0, 441, 442, 443, 465, 0, 427, 489,
	607, 0, 0, 0, 0, 0, 0, 0, 539, 551,
	585, 0, 595, 596, 598, 600, 599, 602, 0, 613,
	480, 481, 614, 591, 370, 0, 495, 528, 517, 601,
	483, 0, 0, 0, 0, 0, 2004, 0, 0, 0,
	0, 310, 0, 0, 340, 532, 514, 524, 515, 0,
	500, 501, 502, 509, 320, 503, 504, 505, 475, 506,
	476, 507, 508, 0, 531, 482, 401, 354, 549, 548,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 0,
	0, 2005, 0, 0, 0, 283, 205, 477, 597, 479,
	478, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	286, 0, 0, 1185, 1186, 1187, 1184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 406, 423, 284, 397, 436, 289, 404,
	279, 369, 393, 0, 0, 275, 421, 403, 351, 330,
	331, 274, 0, 388, 308, 322, 305, 367, 0, 420,
	448, 304, 439, 0, 431, 277, 0, 430, 366, 417,
	422, 352, 346, 276, 419, 350, 345, 334, 312, 464,
	335, 336, 326, 378, 344, 379, 327, 356, 355, 357,
	0, 0, 0, 0, 0, 459, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 590,
	0, 0, 594, 0, 433, 0, 0, 0, 0, 0,
	0, 405, 0, 0, 337, 0, 0, 0, 449, 0,
	391, 372, 616, 0, 0, 389, 342, 418, 380, 424,
	407, 432, 385, 381, 268, 408, 307, 353, 280, 282,
	302, 309, 311, 313, 314, 362, 363, 375, 396, 409,
	410, 411, 306, 290, 390, 291, 324, 292, 269, 298,
	296, 299, 398, 300, 271, 376, 415, 0, 319, 386,
	349, 272, 348, 377, 414, 413, 281, 440, 446, 447,
	536, 0, 452, 617, 618, 619, 461, 466, 467, 468,
	470, 471, 472, 473, 537, 554, 521, 491, 454, 545,
	488, 492, 493, 557, 0, 0, 0, 445, 338, 339,
	0, 317, 265, 266, 612, 303, 368, 559, 592, 593,
	484, 0, 546, 485, 494, 295, 518, 530, 529, 364,
	444, 0, 541, 544, 474, 611, 0, 538, 553, 615,
	552, 608, 374, 0, 395, 550, 497, 0, 542, 516,
	0, 543, 512, 547, 0, 486, 0, 402, 426, 438,
	455, 458, 487, 572, 573, 574, 270, 457, 576, 577,
	578, 579, 580, 581, 582, 575, 429, 519, 496, 522,
	437, 499, 498, 0, 0, 533, 453, 534, 535, 358,
	359, 360, 361, 321, 560, 288, 456, 384, 0, 520,
	0, 0, 0, 0, 0, 0, 0, 0, 525, 526,
	523, 620, 0, 583, 584, 0, 0, 450, 451, 316,
	323, 469, 325, 287, 373, 318, 435, 332, 0, 462,
	527, 463, 586, 589, 587, 588, 365, 328, 329, 399,
	333, 343, 387, 434, 371, 392, 285, 425, 400, 347,
	513, 540, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 568, 567,
	566, 565, 564, 563, 562, 561, 0, 0, 510, 412,
	297, 259, 293, 294, 301, 609, 606, 416, 610, 0,
	267, 490, 341, 0, 382, 315, 555, 556, 0, 0,
	215, 216, 217, 218, 219, 220, 221, 222, 260, 223,
	224, 225, 226, 227, 228, 229, 232, 233, 234, 235,
	236, 237, 238, 239, 558, 230, 231, 240, 241, 242,
	243, 244, 245, 246, 247, 248, 249, 250, 251, 252,
	253, 0, 0, 0, 0, 261, 262, 263, 264, 0,
	0, 255, 256, 257, 258, 0, 0, 0, 441, 442,
	443, 465, 0, 427, 489, 607, 0, 0, 0, 0,
	0, 0, 0, 539, 551, 585, 0, 595, 596, 598,
	600, 599, 602, 182, 613, 480, 481, 614, 591, 0,
	0, 0, 0, 370, 0, 495, 528, 517, 601, 483,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 0, 0, 340, 532, 514, 524, 515, 0, 500,
	501, 502, 509, 320, 503, 504, 505, 475, 506, 476,
	507, 508, 121, 531, 482, 401, 354, 549, 548, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 2054, 0, 204, 0, 0,
	0, 0, 0, 0, 283, 205, 477, 597, 479, 478,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 286,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 406, 423, 284, 397, 436, 289, 404, 279,
	369, 393, 0, 0, 275, 421, 403, 351, 330, 331,
	274, 0, 388, 308, 322, 305, 367, 0, 420, 448,
	304, 439, 0, 431, 277, 0, 430, 366, 417, 422,
	352, 346, 276, 419, 350, 345, 334, 312, 464, 335,
	336, 326, 378, 344, 379, 327, 356, 355, 357, 0,
	0, 0, 0, 0, 459, 460, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 590, 0,
	0, 594, 0, 433, 0, 0, 0, 0, 0, 0,
	405, 0, 0, 337, 0, 0, 0, 449, 0, 391,
	372, 616, 0, 0, 389, 342, 418, 380, 424, 407,
	432, 385, 381, 268, 408, 307, 353, 280, 282, 302,
	309, 311, 313, 314, 362, 363, 375, 396, 409, 410,
	411, 306, 290, 390, 291, 324, 292, 269, 298, 296,
	299, 398, 300, 271, 376, 415, 0, 319, 386, 349,
	272, 348, 377, 414, 413, 281, 440, 446, 447, 536,
	0, 452, 617, 618, 619, 461, 466, 467, 468, 470,
	471, 472, 473, 537, 554, 521, 491, 454, 545, 488,
	492, 493, 557, 0, 0, 0, 445, 338, 339, 0,
	317, 265, 266, 612, 303, 368, 559, 592, 593, 484,
	0, 546, 485, 494, 295, 518, 530, 529, 364, 444,
	0, 541, 544, 474, 611, 0, 538, 553, 615, 552,
	608, 374, 0, 395, 550, 497, 0, 542, 516, 0,
	543, 512, 547, 0, 486, 0, 402, 426, 438, 455,
	458, 487, 572, 573, 574, 270, 457, 576, 577, 578,
	579, 580, 581, 582, 575, 429, 519, 496, 522, 437,
	499, 498, 0, 0, 533, 453, 534, 535, 358, 359,
	360, 361, 321, 560, 288, 456, 384, 0, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 525, 526, 523,
	620, 0, 583, 584, 0, 0, 450, 451, 316, 323,
	469, 325, 287, 373, 318, 435, 332, 0, 462, 527,
	463, 586, 589, 587, 588, 365, 328, 329, 399, 333,
	343, 387, 434, 371, 392, 285, 425, 400, 347, 513,
	540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 568, 567, 566,
	565, 564, 563, 562, 561, 0, 0, 510, 412, 297,
	259, 293, 294, 301, 609, 606, 416, 610, 0, 267,
	490, 341, 146, 382, 315, 555, 556, 0, 0, 215,
	216, 217, 218, 219, 220, 221, 222, 260, 223, 224,
	225, 226, 227, 228, 229, 232, 233, 234, 235, 236,
	237, 238, 239, 558, 230, 231, 240, 241, 242, 243,
	244, 245, 246, 247, 248, 249, 250, 251, 252, 253,
	0, 0, 0, 0, 261, 262, 263, 264, 0, 0,
	255, 256, 257, 258, 0, 0, 0, 441, 442, 443,
	465, 0, 427, 489, 607, 0, 0, 0, 0, 0,
	0, 0, 539, 551, 585, 0, 595, 596, 598, 600,
	599, 602, 182, 613, 480, 481, 614, 591, 0, 0,
	0, 0, 370, 0, 495, 528, 517, 601, 483, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	0, 0, 340, 532, 514, 524, 515, 0, 500, 501,
	502, 509, 320, 503, 504, 505, 475, 506, 476, 507,
	508, 121, 531, 482, 401, 354, 549, 548, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 2040, 0, 204, 0, 0, 0,
	0, 0, 0, 283, 205, 477, 597, 479, 478, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 406, 423, 284, 397, 436, 289, 404, 279, 369,
	393, 0, 0, 275, 421, 403, 351, 330, 331, 274,
	0, 388, 308, 322, 305, 367, 0, 420, 448, 304,
	439, 0, 431, 277, 0, 430, 366, 417, 422, 352,
	346, 276, 419, 350, 345, 334, 312, 464, 335, 336,
	326, 378, 344, 379, 327, 356, 355, 357, 0, 0,
	0, 0, 0, 459, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 590, 0, 0,
	594, 0, 433, 0, 0, 0, 0, 0, 0, 405,
	0, 0, 337, 0, 0, 0, 449, 0, 391, 372,
	616, 0, 0, 389, 342, 418, 380, 424, 407, 432,
	385, 381, 268, 408, 307, 353, 280, 282, 302, 309,
	311, 313, 314, 362, 363, 375, 396, 409, 410, 411,
	306, 290, 390, 291, 324, 292, 269, 298, 296, 299,
	398, 300, 271, 376, 415, 0, 319, 386, 349, 272,
	348, 377, 414, 413, 281, 440, 446, 447, 536, 0,
	452, 617, 618, 619, 461, 466, 467, 468, 470, 471,
	472, 473, 537, 554, 521, 491, 454, 545, 488, 492,
	493, 557, 0, 0, 0, 445, 338, 339, 0, 317,
	265, 266, 612, 303, 368, 559, 592, 593, 484, 0,
	546, 485, 494, 295, 518, 530, 529, 364, 444, 0,
	541, 544, 474, 611, 0, 538, 553, 615, 552, 608,
	374, 0, 395, 550, 497, 0, 542, 516, 0, 543,
	512, 547, 0, 486, 0, 402, 426, 438, 455, 458,
	487, 572, 573, 574, 270, 457, 576, 577, 578, 579,
	580, 581, 582, 575, 429, 519, 496, 522, 437, 499,
	498, 0, 0, 533, 453, 534, 535, 358, 359, 360,
	361, 321, 560, 288, 456, 384, 0, 520, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 526, 523, 620,
	0, 583, 584, 0, 0, 450, 451, 316, 323, 469,
	325, 287, 373, 318, 435, 332, 0, 462, 527, 463,
	586, 589, 587, 588, 365, 328, 329, 399, 333, 343,
	387, 434, 371, 392, 285, 425, 400, 347, 513, 540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 568, 567, 566, 565,
	564, 563, 562, 561, 0, 0, 510, 412, 297, 259,
	293, 294, 301, 609, 606, 416, 610, 0, 267, 490,
	341, 146, 382, 315, 555, 556, 0, 0, 215, 216,
	217, 218, 219, 220, 221, 222, 260, 223, 224, 225,
	226, 227, 228, 229, 232, 233, 234, 235, 236, 237,
	238, 239, 558, 230, 231, 240, 241, 242, 243, 244,
	245, 246, 247, 248, 249, 250, 251, 252, 253, 0,
	0, 0, 0, 261, 262, 263, 264, 0, 0, 255,
	256, 257, 258, 0, 0, 0, 441, 442, 443, 465,
	0, 427, 489, 607, 0, 0, 0, 0, 0, 0,
	0, 539, 551, 585, 0, 595, 596, 598, 600, 599,
	602, 0, 613, 480, 481, 614, 591, 370, 0, 495,
	528, 517, 601, 483, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 984, 0, 340, 532, 514,
	524, 515, 0, 500, 501, 502, 509, 320, 503, 504,
	505, 475, 506, 476, 507, 508, 0, 531, 482, 401,
	354, 549, 548, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 204, 991, 992, 0, 0, 0, 0, 283, 205,
	477, 597, 479, 478, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 995, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 406, 979, 284, 397,
	436, 289, 404, 279, 369, 393, 0, 0, 275, 421,
	403, 351, 330, 331, 274, 0, 388, 308, 322, 305,
	367, 0, 420, 448, 304, 439, 969, 431, 277, 968,
	430, 366, 417, 422, 352, 346, 276, 419, 350, 345,
	334, 312, 464, 335, 336, 326, 378, 344, 379, 327,
	356, 355, 357, 0, 0, 0, 0, 0, 459, 460,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 590, 0, 0, 594, 0, 433, 0, 0,
	0, 0, 0, 0, 405, 0, 0, 337, 0, 0,
	0, 449, 0, 391, 372, 616, 0, 0, 389, 342,
	418, 380, 424, 407, 432, 982, 381, 268, 408, 307,
	353, 280, 282, 302, 309, 311, 313, 314, 362, 363,
	375, 396, 409, 410, 411, 306, 290, 390, 291, 324,
	292, 269, 298, 296, 299, 398, 300, 271, 376, 415,
	0, 319, 386, 349, 272, 348, 377, 414, 413, 281,
	440, 446, 447, 536, 0, 452, 617, 618, 619, 461,
	466, 467, 468, 470, 471, 472, 473, 537, 554, 521,
	491, 454, 545, 488, 492, 493, 557, 0, 0, 0,
	445, 338, 339, 0, 317, 265, 266, 612, 303, 368,
	559, 592, 593, 484, 0, 546, 485, 494, 295, 518,
	530, 529, 364, 444, 0, 541, 544, 474, 611, 0,
	538, 553, 615, 552, 608, 374, 0, 395, 550, 497,
	0, 542, 516, 0, 543, 512, 547, 0, 486, 0,
	402, 426, 438, 455, 458, 487, 572, 573, 574, 270,
	457, 576, 577, 578, 579, 580, 581, 983, 575, 429,
	519, 496, 522, 437, 499, 498, 0, 0, 533, 986,
	534, 535, 358, 359, 360, 361, 321, 560, 288, 456,
	384, 0, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 526, 523, 620, 0, 583, 584, 0, 0,
	450, 451, 316, 323, 469, 325, 287, 373, 318, 435,
	332, 0, 462, 527, 463, 586, 589, 587, 588, 993,
	980, 989, 981, 333, 343, 387, 434, 371, 392, 285,
	425, 400, 990, 513, 540, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 568, 567, 566, 565, 564, 563, 562, 561, 0,
	0, 510, 412, 297, 259, 293, 294, 301, 609, 606,
	416, 610, 0, 267, 490, 341, 0, 382, 315, 555,
	556, 0, 0, 215, 216, 217, 218, 219, 220, 221,
	222, 260, 223, 224, 225, 226, 227, 228, 229, 232,
	233, 234, 235, 236, 237, 238, 239, 558, 230, 231,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 0, 0, 0, 0, 261, 262,
	263, 264, 0, 0, 255, 256, 257, 258, 0, 0,
	0, 441, 442, 443, 465, 0, 427, 489, 607, 0,
	0, 0, 0, 0, 0, 0, 539, 551, 585, 0,
	595, 596, 598, 600, 599, 602, 182, 613, 480, 481,
	614, 591, 0, 0, 0, 0, 370, 0, 495, 528,
	517, 601, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 0, 340, 532, 514, 524,
	515, 0, 500, 501, 502, 509, 320, 503, 504, 505,
	475, 506, 476, 507, 508, 121, 531, 482, 401, 354,
	549, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1937, 0, 0,
	204, 0, 0, 0, 0, 0, 0, 283, 205, 477,
	597, 479, 478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 406, 423, 284, 397, 436,
	289, 404, 279, 369, 393, 0, 0, 275, 421, 403,
	351, 330, 331, 274, 0, 388, 308, 322, 305, 367,
	0, 420, 448, 304, 439, 0, 431, 277, 0, 430,
	366, 417, 422, 352, 346, 276, 419, 350, 345, 334,
	312, 464, 335, 336, 326, 378, 344, 379, 327, 356,
	355, 357, 0, 0, 0, 0, 0, 459, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 590, 0, 0, 594, 0, 433, 0, 0, 0,
	0, 0, 0, 405, 0, 0, 337, 0, 0, 0,
	449, 0, 391, 372, 616, 0, 0, 389, 342, 418,
	380, 424, 407, 432, 385, 381, 268, 408, 307, 353,
	280, 282, 302, 309, 311, 313, 314, 362, 363, 375,
	396, 409, 410, 411, 306, 290, 390, 291, 324, 292,
	269, 298, 296, 299, 398, 300, 271, 376, 415, 0,
	319, 386, 349, 272, 348, 377, 414, 413, 281, 440,
	446, 447, 536, 0, 452, 617, 618, 619, 461, 466,
	467, 468, 470, 471, 472, 473, 537, 554, 521, 491,
	454, 545, 488, 492, 493, 557, 0, 0, 0, 445,
	338, 339, 0, 317, 265, 266, 612, 303, 368, 559,
	592, 593, 484, 0, 546, 485, 494, 295, 518, 530,
	529, 364, 444, 0, 541, 544, 474, 611, 0, 538,
	553, 615, 552, 608, 374, 0, 395, 550, 497, 0,
	542, 516, 0, 543, 512, 547, 0, 486, 0, 402,
	426, 438, 455, 458, 487, 572, 573, 574, 270, 457,
	576, 577, 578, 579, 580, 581, 582, 575, 429, 519,
	496, 522, 437, 499, 498, 0, 0, 533, 453, 534,
	535, 358, 359, 360, 361, 321, 560, 288, 456, 384,
	0, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 526, 523, 620, 0, 583, 584, 0, 0, 450,
	451, 316, 323, 469, 325, 287, 373, 318, 435, 332,
	0, 462, 527, 463, 586, 589, 587, 588, 365, 328,
	329, 399, 333, 343, 387, 434, 371, 392, 285, 425,
	400, 347, 513, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	568, 567, 566, 565, 564, 563, 562, 561, 0, 0,
	510, 412, 297, 259, 293, 294, 301, 609, 606, 416,
	610, 0, 267, 490, 341, 146, 382, 315, 555, 556,
	0, 0, 215, 216, 217, 218, 219, 220, 221, 222,
	260, 223, 224, 225, 226, 227, 228, 229, 232, 233,
	234, 235, 236, 237, 238, 239, 558, 230, 231, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 0, 0, 0, 0, 261, 262, 263,
	264, 0, 0, 255, 256, 257, 258, 0, 0, 0,
	441, 442, 443, 465, 0, 427, 489, 607, 0, 0,
	0, 0, 0, 0, 0, 539, 551, 585, 0, 595,
	596, 598, 600, 599, 602, 0, 613, 480, 481, 614,
	591, 370, 0, 495, 528, 517, 601, 483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 0,
	0, 340, 532, 514, 524, 515, 0, 500, 501, 502,
	509, 320, 503, 504, 505, 475, 506, 476, 507, 508,
	0, 531, 482, 401, 354, 549, 548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 204, 991, 992, 0, 0,
	0, 0, 283, 205, 477, 597, 479, 478, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 995, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	406, 423, 284, 397, 436, 289, 404, 279, 369, 393,
	0, 0, 275, 421, 403, 351, 330, 331, 274, 0,
	388, 308, 322, 305, 367, 0, 420, 448, 304, 439,
	969, 431, 277, 968, 430, 366, 417, 422, 352, 346,
	276, 419, 350, 345, 334, 312, 464, 335, 336, 326,
	378, 344, 379, 327, 356, 355, 357, 0, 0, 0,
	0, 0, 459, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 590, 0, 0, 594,
	0, 433, 0, 0, 0, 0, 0, 0, 405, 0,
	0, 337, 0, 0, 0, 449, 0, 391, 372, 616,
	0, 0, 389, 342, 418, 380, 424, 407, 432, 385,
	381, 268, 408, 307, 353, 280, 282, 302, 309, 311,
	313, 314, 362, 363, 375, 396, 409, 410, 411, 306,
	290, 390, 291, 324, 292, 269, 298, 296, 299, 398,
	300, 271, 376, 415, 0, 319, 386, 349, 272, 348,
	377, 414, 413, 281, 440, 446, 447, 536, 0, 452,
	617, 618, 619, 461, 466, 467, 468, 470, 471, 472,
	473, 537, 554, 521, 491, 454, 545, 488, 492, 493,
	557, 0, 0, 0, 445, 338, 339, 0, 317, 265,
	266, 612, 303, 368, 559, 592, 593, 484, 0, 546,
	485, 494, 295, 518, 530, 529, 364, 444, 0, 541,
	544, 474, 611, 0, 538, 553, 615, 552, 608, 374,
	0, 395, 550, 497, 0, 542, 516, 0, 543, 512,
	547, 0, 486, 0, 402, 426, 438, 455, 458, 487,
	572, 573, 574, 270, 457, 576, 577, 578, 579, 580,
	581, 582, 575, 429, 519, 496, 522, 437, 499, 498,
	0, 0, 533, 453, 534, 535, 358, 359, 360, 361,
	321, 560, 288, 456, 384, 0, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 526, 523, 620, 0,
	583, 584, 0, 0, 450, 451, 316, 323, 469, 325,
	287, 373, 318, 435, 332, 0, 462, 527, 463, 586,
	589, 587, 588, 993, 1956, 989, 1957, 333, 343, 387,
	434, 371, 392, 285, 425, 400, 990, 513, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 568, 567, 566, 565, 564,
	563, 562, 561, 0, 0, 510, 412, 297, 259, 293,
	294, 301, 609, 606, 416, 610, 0, 267, 490, 341,
	0, 382, 315, 555, 556, 0, 0, 215, 216, 217,
	218, 219, 220, 221, 222, 260, 223, 224, 225, 226,
	227, 228, 229, 232, 233, 234, 235, 236, 237, 238,
	239, 558, 230, 231, 240, 241, 242, 243, 244, 245,
	246, 247, 248, 249, 250, 251, 252, 253, 0, 0,
	0, 0, 261, 262, 263, 264, 0, 0, 255, 256,
	257, 258, 0, 0, 0, 441, 442, 443, 465, 0,
	427, 489, 607, 0, 0, 0, 0, 0, 0, 0,
	539, 551, 585, 0, 595, 596, 598, 600, 599, 602,
	0, 613, 480, 481, 614, 591, 370, 0, 495, 528,
	517, 601, 483, 0, 0, 2796, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 0, 340, 532, 514, 524,
	515, 0, 500, 501, 502, 509, 320, 503, 504, 505,
	475, 506, 476, 507, 508, 0, 531, 482, 401, 354,
	549, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 0, 0, 0, 0, 0, 0, 283, 205, 477,
	597, 479, 478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 406, 423, 284, 397, 436,
	289, 404, 279, 369, 393, 0, 0, 275, 421, 403,
	351, 330, 331, 274, 0, 388, 308, 322, 305, 367,
	0, 420, 448, 304, 439, 0, 431, 277, 0, 430,
	366, 417, 422, 352, 346, 276, 419, 350, 345, 334,
	312, 464, 335, 336, 326, 378, 344, 379, 327, 356,
	355, 357, 0, 0, 0, 0, 0, 459, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 2799, 0, 0,
	2798, 590, 0, 0, 594, 0, 433, 0, 0, 0,
	0, 0, 0, 405, 0, 0, 337, 0, 0, 0,
	449, 0, 391, 372, 616, 0, 0, 389, 342, 418,
	380, 424, 407, 432, 385, 381, 268, 408, 307, 353,
	280, 282, 302, 309, 311, 313, 314, 362, 363, 375,
	396, 409, 410, 411, 306, 290, 390, 291, 324, 292,
	269, 298, 296, 299, 398, 300, 271, 376, 415, 0,
	319, 386, 349, 272, 348, 377, 414, 413, 281, 440,
	446, 447, 536, 0, 452, 617, 618, 619, 461, 466,
	467, 468, 470, 471, 472, 473, 537, 554, 521, 491,
	454, 545, 488, 492, 493, 557, 0, 0, 0, 445,
	338, 339, 0, 317, 265, 266, 612, 303, 368, 559,
	592, 593, 484, 0, 546, 485, 494, 295, 518, 530,
	529, 364, 444, 0, 541, 544, 474, 611, 0, 538,
	553, 615, 552, 608, 374, 0, 395, 550, 497, 0,
	542, 516, 0, 543, 512, 547, 0, 486, 0, 402,
	426, 438, 455, 458, 487, 572, 573, 574, 270, 457,
	576, 577, 578, 579, 580, 581, 582, 575, 429, 519,
	496, 522, 437, 499, 498, 0, 0, 533, 453, 534,
	535, 358, 359, 360, 361, 321, 560, 288, 456, 384,
	0, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 526, 523, 620, 0, 583, 584, 0, 0, 450,
	451, 316, 323, 469, 325, 287, 373, 318, 435, 332,
	0, 462, 527, 463, 586, 589, 587, 588, 365, 328,
	329, 399, 333, 343, 387, 434, 371, 392, 285, 425,
	400, 347, 513, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	568, 567, 566, 565, 564, 563, 562, 561, 0, 0,
	510, 412, 297, 259, 293, 294, 301, 609, 606, 416,
	610, 0, 267, 490, 341, 0, 382, 315, 555, 556,
	0, 0, 215, 216, 217, 218, 219, 220, 221, 222,
	260, 223, 224, 225, 226, 227, 228, 229, 232, 233,
	234, 235, 236, 237, 238, 239, 558, 230, 231, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 0, 0, 0, 0, 261, 262, 263,
	264, 0, 0, 255, 256, 257, 258, 0, 0, 0,
	441, 442, 443, 465, 0, 427, 489, 607, 0, 0,
	0, 0, 0, 0, 0, 539, 551, 585, 0, 595,
	596, 598, 600, 599, 602, 0, 613, 480, 481, 614,
	591, 370, 0, 495, 528, 517, 601, 483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 1454,
	0, 340, 532, 514, 524, 515, 0, 500, 501, 502,
	509, 320, 503, 504, 505, 475, 506, 476, 507, 508,
	0, 531, 482, 401, 354, 549, 548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 204, 0, 0, 1452, 0,
	0, 0, 283, 205, 477, 597, 479, 478, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1450, 0, 0, 0, 0, 0, 0, 273,
	406, 423, 284, 397, 436, 289, 404, 279, 369, 393,
	0, 0, 275, 421, 403, 351, 330, 331, 274, 0,
	388, 308, 322, 305, 367, 0, 420, 448, 304, 439,
	0, 431, 277, 0, 430, 366, 417, 422, 352, 346,
	276, 419, 350, 345, 334, 312, 464, 335, 336, 326,
	378, 344, 379, 327, 356, 355, 357, 0, 0, 0,
	0, 0, 459, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 590, 0, 0, 594,
	0, 433, 0, 0, 0, 0, 0, 0, 405, 0,
	0, 337, 0, 0, 0, 449, 0, 391, 372, 616,
	0, 0, 389, 342, 418, 380, 424, 407, 432, 385,
	381, 268, 408, 307, 353, 280, 282, 302, 309, 311,
	313, 314, 362, 363, 375, 396, 409, 410, 411, 306,
	290, 390, 291, 324, 292, 269, 298, 296, 299, 398,
	300, 271, 376, 415, 0, 319, 386, 349, 272, 348,
	377, 414, 413, 281, 440, 446, 447, 536, 0, 452,
	617, 618, 619, 461, 466, 467, 468, 470, 471, 472,
	473, 537, 554, 521, 491, 454, 545, 488, 492, 493,
	557, 0, 0, 0, 445, 338, 339, 0, 317, 265,
	266, 612, 303, 368, 559, 592, 593, 484, 0, 546,
	485, 494, 295, 518, 530, 529, 364, 444, 0, 541,
	544, 474, 611, 0, 538, 553, 615, 552, 608, 374,
	0, 395, 550, 497, 0, 542, 516, 0, 543, 512,
	547, 0, 486, 0, 402, 426, 438, 455, 458, 487,
	572, 573, 574, 270, 457, 576, 577, 578, 579, 580,
	581, 582, 575, 429, 519, 496, 522, 437, 499, 498,
	0, 0, 533, 453, 534, 535, 358, 359, 360, 361,
	321, 560, 288, 456, 384, 0, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 526, 523, 620, 0,
	583, 584, 0, 0, 450, 451, 316, 323, 469, 325,
	287, 373, 318, 435, 332, 0, 462, 527, 463, 586,
	589, 587, 588, 365, 328, 329, 399, 333, 343, 387,
	434, 371, 392, 285, 425, 400, 347, 513, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 568, 567, 566, 565, 564,
	563, 562, 561, 0, 0, 510, 412, 297, 259, 293,
	294, 301, 609, 606, 416, 610, 0, 267, 490, 341,
	0, 382, 315, 555, 556, 0, 0, 215, 216, 217,
	218, 219, 220, 221, 222, 260, 223, 224, 225, 226,
	227, 228, 229, 232, 233, 234, 235, 236, 237, 238,
	239, 558, 230, 231, 240, 241, 242, 243, 244, 245,
	246, 247, 248, 249, 250, 251, 252, 253, 0, 0,
	0, 0, 261, 262, 263, 264, 0, 0, 255, 256,
	257, 258, 0, 0, 0, 441, 442, 443, 465, 0,
	427, 489, 607, 0, 0, 0, 0, 0, 0, 0,
	539, 551, 585, 0, 595, 596, 598, 600, 599, 602,
	0, 613, 480, 481, 614, 591, 370, 0, 495, 528,
	517, 601, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 1448, 0, 340, 532, 514, 524,
	515, 0, 500, 501, 502, 509, 320, 503, 504, 505,
	475, 506, 476, 507, 508, 0, 531, 482, 401, 354,
	549, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 0, 0, 1452, 0, 0, 0, 283, 205, 477,
	597, 479, 478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1450, 0, 0,
	0, 0, 0, 0, 273, 406, 423, 284, 397, 436,
	289, 404, 279, 369, 393, 0, 0, 275, 421, 403,
	351, 330, 331, 274, 0, 388, 308, 322, 305, 367,
	0, 420, 448, 304, 439, 0, 431, 277, 0, 430,
	366, 417, 422, 352, 346, 276, 419, 350, 345, 334,
	312, 464, 335, 336, 326, 378, 344, 379, 327, 356,
	355, 357, 0, 0, 0, 0, 0, 459, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 590, 0, 0, 594, 0, 433, 0, 0, 0,
	0, 0, 0, 405, 0, 0, 337, 0, 0, 0,
	449, 0, 391, 372, 616, 0, 0, 389, 342, 418,
	380, 424, 407, 432, 385, 381, 268, 408, 307, 353,
	280, 282, 302, 309, 311, 313, 314, 362, 363, 375,
	396, 409, 410, 411, 306, 290, 390, 291, 324, 292,
	269, 298, 296, 299, 398, 300, 271, 376, 415, 0,
	319, 386, 349, 272, 348, 377, 414, 413, 281, 440,
	446, 447, 536, 0, 452, 617, 618, 619, 461, 466,
	467, 468, 470, 471, 472, 473, 537, 554, 521, 491,
	454, 545, 488, 492, 493, 557, 0, 0, 0, 445,
	338, 339, 0, 317, 265, 266, 612, 303, 368, 559,
	592, 593, 484, 0, 546, 485, 494, 295, 518, 530,
	529, 364, 444, 0, 541, 544, 474, 611, 0, 538,
	553, 615, 552, 608, 374, 0, 395, 550, 497, 0,
	542, 516, 0, 543, 512, 547, 0, 486, 0, 402,
	426, 438, 455, 458, 487, 572, 573, 574, 270, 457,
	576, 577, 578, 579, 580, 581, 582, 575, 429, 519,
	496, 522, 437, 499, 498, 0, 0, 533, 453, 534,
	535, 358, 359, 360, 361, 321, 560, 288, 456, 384,
	0, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 526, 523, 620, 0, 583, 584, 0, 0, 450,
	451, 316, 323, 469, 325, 287, 373, 318, 435, 332,
	0, 462, 527, 463, 586, 589, 587, 588, 365, 328,
	329, 399, 333, 343, 387, 434, 371, 392, 285, 425,
	400, 347, 513, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	568, 567, 566, 565, 564, 563, 562, 561, 0, 0,
	510, 412, 297, 259, 293, 294, 301, 609, 606, 416,
	610, 0, 267, 490, 341, 0, 382, 315, 555, 556,
	0, 0, 215, 216, 217, 218, 219, 220, 221, 222,
	260, 223, 224, 225, 226, 227, 228, 229, 232, 233,
	234, 235, 236, 237, 238, 239, 558, 230, 231, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 0, 0, 0, 0, 261, 262, 263,
	264, 0, 0, 255, 256, 257, 258, 0, 0, 0,
	441, 442, 443, 465, 0, 427, 489, 607, 0, 0,
	0, 0, 0, 0, 0, 539, 551, 585, 0, 595,
	596, 598, 600, 599, 602, 0, 613, 480, 481, 614,
	591, 370, 0, 495, 528, 517, 601, 483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 0,
	0, 340, 532, 514, 524, 515, 0, 500, 501, 502,
	509, 320, 503, 504, 505, 475, 506, 476, 507, 508,
	0, 531, 482, 401, 354, 549, 548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3792, 0, 204, 808, 0, 0, 0,
	0, 0, 283, 205, 477, 597, 479, 478, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	406, 423, 284, 397, 436, 289, 404, 279, 369, 393,
	0, 0, 275, 421, 403, 351, 330, 331, 274, 0,
	388, 308, 322, 305, 367, 0, 420, 448, 304, 439,
	0, 431, 277, 0, 430, 366, 417, 422, 352, 346,
	276, 419, 350, 345, 334, 312, 464, 335, 336, 326,
	378, 344, 379, 327, 356, 355, 357, 0, 0, 0,
	0, 0, 459, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 590, 0, 0, 594,
	0, 433, 0, 0, 0, 0, 0, 0, 405, 0,
	0, 337, 0, 0, 0, 449, 0, 391, 372, 616,
	0, 0, 389, 342, 418, 380, 424, 407, 432, 385,
	381, 268, 408, 307, 353, 280, 282, 302, 309, 311,
	313, 314, 362, 363, 375, 396, 409, 410, 411, 306,
	290, 390, 291, 324, 292, 269, 298, 296, 299, 398,
	300, 271, 376, 415, 0, 319, 386, 349, 272, 348,
	377, 414, 413, 281, 440, 446, 447, 536, 0, 452,
	617, 618, 619, 461, 466, 467, 468, 470, 471, 472,
	473, 537, 554, 521, 491, 454, 545, 488, 492, 493,
	557, 0, 0, 0, 445, 338, 339, 0, 317, 265,
	266, 612, 303, 368, 559, 592, 593, 484, 0, 546,
	485, 494, 295, 518, 530, 529, 364, 444, 0, 541,
	544, 474, 611, 0, 538, 553, 615, 552, 608, 374,
	0, 395, 550, 497, 0, 542, 516, 0, 543, 512,
	547, 0, 486, 0, 402, 426, 438, 455, 458, 487,
	572, 573, 574, 270, 457, 576, 577, 578, 579, 580,
	581, 582, 575, 429, 519, 496, 522, 437, 499, 498,
	0, 0, 533, 453, 534, 535, 358, 359, 360, 361,
	321, 560, 288, 456, 384, 0, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 526, 523, 620, 0,
	583, 584, 0, 0, 450, 451, 316, 323, 469, 325,
	287, 373, 318, 435, 332, 0, 462, 527, 463, 586,
	589, 587, 588, 365, 328, 329, 399, 333, 343, 387,
	434, 371, 392, 285, 425, 400, 347, 513, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 568, 567, 566, 565, 564,
	563, 562, 561, 0, 0, 510, 412, 297, 259, 293,
	294, 301, 609, 606, 416, 610, 0, 267, 490, 341,
	0, 382, 315, 555, 556, 0, 0, 215, 216, 217,
	218, 219, 220, 221, 222, 260, 223, 224, 225, 226,
	227, 228, 229, 232, 233, 234, 235, 236, 237, 238,
	239, 558, 230, 231, 240, 241, 242, 243, 244, 245,
	246, 247, 248, 249, 250, 251, 252, 253, 0, 0,
	0, 0, 261, 262, 263, 264, 0, 0, 255, 256,
	257, 258, 0, 0, 0, 441, 442, 443, 465, 0,
	427, 489, 607, 0, 0, 0, 0, 0, 0, 0,
	539, 551, 585, 0, 595, 596, 598, 600, 599, 602,
	0, 613, 480, 481, 614, 591, 370, 0, 495, 528,
	517, 601, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 0, 340, 532, 514, 524,
	515, 0, 500, 501, 502, 509, 320, 503, 504, 505,
	475, 506, 476, 507, 508, 0, 531, 482, 401, 354,
	549, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 0, 0, 1452, 0, 0, 0, 283, 205, 477,
	597, 479, 478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1450, 0, 0,
	0, 0, 0, 0, 273, 406, 423, 284, 397, 436,
	289, 404, 279, 369, 393, 0, 0, 275, 421, 403,
	351, 330, 331, 274, 0, 388, 308, 322, 305, 367,
	0, 420, 448, 304, 439, 0, 431, 277, 0, 430,
	366, 417, 422, 352, 346, 276, 419, 350, 345, 334,
	312, 464, 335, 336, 326, 378, 344, 379, 327, 356,
	355, 357, 0, 0, 0, 0, 0, 459, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 590, 0, 0, 594, 0, 433, 0, 0, 0,
	0, 0, 0, 405, 0, 0, 337, 0, 0, 0,
	449, 0, 391, 372, 616, 0, 0, 389, 342, 418,
	380, 424, 407, 432, 385, 381, 268, 408, 307, 353,
	280, 282, 302, 309, 311, 313, 314, 362, 363, 375,
	396, 409, 410, 411, 306, 290, 390, 291, 324, 292,
	269, 298, 296, 299, 398, 300, 271, 376, 415, 0,
	319, 386, 349, 272, 348, 377, 414, 413, 281, 440,
	446, 447, 536, 0, 452, 617, 618, 619, 461, 466,
	467, 468, 470, 471, 472, 473, 537, 554, 521, 491,
	454, 545, 488, 492, 493, 557, 0, 0, 0, 445,
	338, 339, 0, 317, 265, 266, 612, 303, 368, 559,
	592, 593, 484, 0, 546, 485, 494, 295, 518, 530,
	529, 364, 444, 0, 541, 544, 474, 611, 0, 538,
	553, 615, 552, 608, 374, 0, 395, 550, 497, 0,
	542, 516, 0, 543, 512, 547, 0, 486, 0, 402,
	426, 438, 455, 458, 487, 572, 573, 574, 270, 457,
	576, 577, 578, 579, 580, 581, 582, 575, 429, 519,
	496, 522, 437, 499, 498, 0, 0, 533, 453, 534,
	535, 358, 359, 360, 361, 321, 560, 288, 456, 384,
	0, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 526, 523, 620, 0, 583, 584, 0, 0, 450,
	451, 316, 323, 469, 325, 287, 373, 318, 435, 332,
	0, 462, 527, 463, 586, 589, 587, 588, 365, 328,
	329, 399, 333, 343, 387, 434, 371, 392, 285, 425,
	400, 347, 513, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	568, 567, 566, 565, 564, 563, 562, 561, 0, 0,
	510, 412, 297, 259, 293, 294, 301, 609, 606, 416,
	610, 0, 267, 490, 341, 0, 382, 315, 555, 556,
	0, 0, 215, 216, 217, 218, 219, 220, 221, 222,
	260, 223, 224, 225, 226, 227, 228, 229, 232, 233,
	234, 235, 236, 237, 238, 239, 558, 230, 231, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 0, 0, 0, 0, 261, 262, 263,
	264, 0, 0, 255, 256, 257, 258, 0, 0, 0,
	441, 442, 443, 465, 0, 427, 489, 607, 0, 0,
	0, 0, 0, 0, 0, 539, 551, 585, 0, 595,
	596, 598, 600, 599, 602, 0, 613, 480, 481, 614,
	591, 370, 0, 495, 528, 517, 601, 483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 0,
	0, 340, 532, 514, 524, 515, 0, 500, 501, 502,
	509, 320, 503, 504, 505, 475, 506, 476, 507, 508,
	0, 531, 482, 401, 354, 549, 548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 204, 0, 0, 1452, 0,
	0, 0, 283, 205, 477, 597, 479, 478, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1659, 0, 0, 0, 0, 0, 0, 273,
	406, 423, 284, 397, 436, 289, 404, 279, 369, 393,
	0, 0, 275, 421, 403, 351, 330, 331, 274, 0,
	388, 308, 322, 305, 367, 0, 420, 448, 304, 439,
	0, 431, 277, 0, 430, 366, 417, 422, 352, 346,
	276, 419, 350, 345, 334, 312, 464, 335, 336, 326,
	378, 344, 379, 327, 356, 355, 357, 0, 0, 0,
	0, 0, 459, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 590, 0, 0, 594,
	0, 433, 0, 0, 0, 0, 0, 0, 405, 0,
	0, 337, 0, 0, 0, 449, 0, 391, 372, 616,
	0, 0, 389, 342, 418, 380, 424, 407, 432, 385,
	381, 268, 408, 307, 353, 280, 282, 302, 309, 311,
	313, 314, 362, 363, 375, 396, 409, 410, 411, 306,
	290, 390, 291, 324, 292, 269, 298, 296, 299, 398,
	300, 271, 376, 415, 0, 319, 386, 349, 272, 348,
	377, 414, 413, 281, 440, 446, 447, 536, 0, 452,
	617, 618, 619, 461, 466, 467, 468, 470, 471, 472,
	473, 537, 554, 521, 491, 454, 545, 488, 492, 493,
	557, 0, 0, 0, 445, 338, 339, 0, 317, 265,
	266, 612, 303, 368, 559, 592, 593, 484, 0, 546,
	485, 494, 295, 518, 530, 529, 364, 444, 0, 541,
	544, 474, 611, 0, 538, 553, 615, 552, 608, 374,
	0, 395, 550, 497, 0, 542, 516, 0, 543, 512,
	547, 0, 486, 0, 402, 426, 438, 455, 458, 487,
	572, 573, 574, 270, 457, 576, 577, 578, 579, 580,
	581, 582, 575, 429, 519, 496, 522, 437, 499, 498,
	0, 0, 533, 453, 534, 535, 358, 359, 360, 361,
	321, 560, 288, 456, 384, 0, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 526, 523, 620, 0,
	583, 584, 0, 0, 450, 451, 316, 323, 469, 325,
	287, 373, 318, 435, 332, 0, 462, 527, 463, 586,
	589, 587, 588, 365, 328, 329, 399, 333, 343, 387,
	434, 371, 392, 285, 425, 400, 347, 513, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 568, 567, 566, 565, 564,
	563, 562, 561, 0, 0, 510, 412, 297, 259, 293,
	294, 301, 609, 606, 416, 610, 0, 267, 490, 341,
	0, 382, 315, 555, 556, 0, 0, 215, 216, 217,
	218, 219, 220, 221, 222, 260, 223, 224, 225, 226,
	227, 228, 229, 232, 233, 234, 235, 236, 237, 238,
	239, 558, 230, 231, 240, 241, 242, 243, 244, 245,
	246, 247, 248, 249, 250, 251, 252, 253, 0, 0,
	0, 0, 261, 262, 263, 264, 0, 0, 255, 256,
	257, 258, 0, 0, 0, 441, 442, 443, 465, 0,
	427, 489, 607, 0, 0, 0, 0, 0, 0, 0,
	539, 551, 585, 0, 595, 596, 598, 600, 599, 602,
	0, 613, 480, 481, 614, 591, 370, 0, 495, 528,
	517, 601, 483, 0, 0, 0, 0, 0, 2371, 0,
	0, 0, 0, 310, 0, 0, 340, 532, 514, 524,
	515, 0, 500, 501, 502, 509, 320, 503, 504, 505,
	475, 506, 476, 507, 508, 0, 531, 482, 401, 354,
	549, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 0, 0, 2373, 0, 0, 0, 283, 205, 477,
	597, 479, 478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 406, 423, 284, 397, 436,
	289, 404, 279, 369, 393, 0, 0, 275, 421, 403,
	351, 330, 331, 274, 0, 388, 308, 322, 305, 367,
	0, 420, 448, 304, 439, 0, 431, 277, 0, 430,
	366, 417, 422, 352, 346, 276, 419, 350, 345, 334,
	312, 464, 335, 336, 326, 378, 344, 379, 327, 356,
	355, 357, 0, 0, 0, 0, 0, 459, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 590, 0, 0, 594, 0, 433, 0, 0, 0,
	0, 0, 0, 405, 0, 0, 337, 0, 0, 0,
	449, 0, 391, 372, 616, 0, 0, 389, 342, 418,
	380, 424, 407, 432, 385, 381, 268, 408, 307, 353,
	280, 282, 302, 309, 311, 313, 314, 362, 363, 375,
	396, 409, 410, 411, 306, 290, 390, 291, 324, 292,
	269, 298, 296, 299, 398, 300, 271, 376, 415, 0,
	319, 386, 349, 272, 348, 377, 414, 413, 281, 440,
	446, 447, 536, 0, 452, 617, 618, 619, 461, 466,
	467, 468, 470, 471, 472, 473, 537, 554, 521, 491,
	454, 545, 488, 492, 493, 557, 0, 0, 0, 445,
	338, 339, 0, 317, 265, 266, 612, 303, 368, 559,
	592, 593, 484, 0, 546, 485, 494, 295, 518, 530,
	529, 364, 444, 0, 541, 544, 474, 611, 0, 538,
	553, 615, 552, 608, 374, 0, 395, 550, 497, 0,
	542, 516, 0, 543, 512, 547, 0, 486, 0, 402,
	426, 438, 455, 458, 487, 572, 573, 574, 270, 457,
	576, 577, 578, 579, 580, 581, 582, 575, 429, 519,
	496, 522, 437, 499, 498, 0, 0, 533, 453, 534,
	535, 358, 359, 360, 361, 321, 560, 288, 456, 384,
	0, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 526, 523, 620, 0, 583, 584, 0, 0, 450,
	451, 316, 323, 469, 325, 287, 373, 318, 435, 332,
	0, 462, 527, 463, 586, 589, 587, 588, 365, 328,
	329, 399, 333, 343, 387, 434, 371, 392, 285, 425,
	400, 347, 513, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	568, 567, 566, 565, 564, 563, 562, 561, 0, 0,
	510, 412, 297, 259, 293, 294, 301, 609, 606, 416,
	610, 0, 267, 490, 341, 0, 382, 315, 555, 556,
	0, 0, 215, 216, 217, 218, 219, 220, 221, 222,
	260, 223, 224, 225, 226, 227, 228, 229, 232, 233,
	234, 235, 236, 237, 238, 239, 558, 230, 231, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 0, 0, 0, 0, 261, 262, 263,
	264, 0, 0, 255, 256, 257, 258, 0, 0, 0,
	441, 442, 443, 465, 0, 427, 489, 607, 0, 0,
	0, 0, 0, 0, 0, 539, 551, 585, 0, 595,
	596, 598, 600, 599, 602, 0, 613, 480, 481, 614,
	591, 370, 0, 495, 528, 517, 601, 483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 0,
	0, 340, 532, 514, 524, 515, 0, 500, 501, 502,
	509, 320, 503, 504, 505, 475, 506, 476, 507, 508,
	0, 531, 482, 401, 354, 549, 548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 204, 0, 0, 2994, 2996,
	0, 0, 283, 205, 477, 597, 479, 478, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	406, 423, 284, 397, 436, 289, 404, 279, 369, 393,
	0, 0, 275, 421, 403, 351, 330, 331, 274, 0,
	388, 308, 322, 305, 367, 0, 420, 448, 304, 439,
	0, 431, 277, 0, 430, 366, 417, 422, 352, 346,
	276, 419, 350, 345, 334, 312, 464, 335, 336, 326,
	378, 344, 379, 327, 356, 355, 357, 0, 0, 0,
	0, 0, 459, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 590, 0, 0, 594,
	0, 433, 0, 0, 0, 0, 0, 0, 405, 0,
	0, 337, 0, 0, 0, 449, 0, 391, 372, 616,
	0, 0, 389, 342, 418, 380, 424, 407, 432, 385,
	381, 268, 408, 307, 353, 280, 282, 302, 309, 311,
	313, 314, 362, 363, 375, 396, 409, 410, 411, 306,
	290, 390, 291, 324, 292, 269, 298, 296, 299, 398,
	300, 271, 376, 415, 0, 319, 386, 349, 272, 348,
	377, 414, 413, 281, 440, 446, 447, 536, 0, 452,
	617, 618, 619, 461, 466, 467, 468, 470, 471, 472,
	473, 537, 554, 521, 491, 454, 545, 488, 492, 493,
	557, 0, 0, 0, 445, 338, 339, 0, 317, 265,
	266, 612, 303, 368, 559, 592, 593, 484, 0, 546,
	485, 494, 295, 518, 530, 529, 364, 444, 0, 541,
	544, 474, 611, 0, 538, 553, 615, 552, 608, 374,
	0, 395, 550, 497, 0, 542, 516, 0, 543, 512,
	547, 0, 486, 0, 402, 426, 438, 455, 458, 487,
	572, 573, 574, 270, 457, 576, 577, 578, 579, 580,
	581, 582, 575, 429, 519, 496, 522, 437, 499, 498,
	0, 0, 533, 453, 534, 535, 358, 359, 360, 361,
	321, 560, 288, 456, 384, 0, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 526, 523, 620, 0,
	583, 584, 0, 0, 450, 451, 316, 323, 469, 325,
	287, 373, 318, 435, 332, 0, 462, 527, 463, 586,
	589, 587, 588, 365, 328, 329, 399, 333, 343, 387,
	434, 371, 392, 285, 425, 400, 347, 513, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 568, 567, 566, 565, 564,
	563, 562, 561, 0, 0, 510, 412, 297, 259, 293,
	294, 301, 609, 606, 416, 610, 0, 267, 490, 341,
	0, 382, 315, 555, 556, 0, 0, 215, 216, 217,
	218, 219, 220, 221, 222, 260, 223, 224, 225, 226,
	227, 228, 229, 232, 233, 234, 235, 236, 237, 238,
	239, 558, 230, 231, 240, 241, 242, 243, 244, 245,
	246, 247, 248, 249, 250, 251, 252, 253, 0, 0,
	0, 0, 261, 262, 263, 264, 0, 0, 255, 256,
	257, 258, 0, 0, 0, 441, 442, 443, 465, 0,
	427, 489, 607, 0, 0, 0, 0, 0, 0, 0,
	539, 551, 585, 0, 595, 596, 598, 600, 599, 602,
	0, 613, 480, 481, 614, 591, 370, 0, 495, 528,
	517, 601, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 2392, 0, 340, 532, 514, 524,
	515, 0, 500, 501, 502, 509, 320, 503, 504, 505,
	475, 506, 476, 507, 508, 0, 531, 482, 401, 354,
	549, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 0, 0, 1452, 0, 0, 0, 283, 205, 477,
	597, 479, 478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 406, 423, 284, 397, 436,
	289, 404, 279, 369, 393, 0, 0, 275, 421, 403,
	351, 330, 331, 274, 0, 388, 308, 322, 305, 367,
	0, 420, 448, 304, 439, 0, 431, 277, 0, 430,
	366, 417, 422, 352, 346, 276, 419, 350, 345, 334,
	312, 464, 335, 336, 326, 378, 344, 379, 327, 356,
	355, 357, 0, 0, 0, 0, 0, 459, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 590, 0, 0, 594, 0, 433, 0, 0, 0,
	0, 0, 0, 405, 0, 0, 337, 0, 0, 0,
	449, 0, 391, 372, 616, 0, 0, 389, 342, 418,
	380, 424, 407, 432, 385, 381, 268, 408, 307, 353,
	280, 282, 302, 309, 311, 313, 314, 362, 363, 375,
	396, 409, 410, 411, 306, 290, 390, 291, 324, 292,
	269, 298, 296, 299, 398, 300, 271, 376, 415, 0,
	319, 386, 349, 272, 348, 377, 414, 413, 281, 440,
	446, 447, 536, 0, 452, 617, 618, 619, 461, 466,
	467, 468, 470, 471, 472, 473, 537, 554, 521, 491,
	454, 545, 488, 492, 493, 557, 0, 0, 0, 445,
	338, 339, 0, 317, 265, 266, 612, 303, 368, 559,
	592, 593, 484, 0, 546, 485, 494, 295, 518, 530,
	529, 364, 444, 0, 541, 544, 474, 611, 0, 538,
	553, 615, 552, 608, 374, 0, 395, 550, 497, 0,
	542, 516, 0, 543, 512, 547, 0, 486, 0, 402,
	426, 438, 455, 458, 487, 572, 573, 574, 270, 457,
	576, 577, 578, 579, 580, 581, 582, 575, 429, 519,
	496, 522, 437, 499, 498, 0, 0, 533, 453, 534,
	535, 358, 359, 360, 361, 321, 560, 288, 456, 384,
	0, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 526, 523, 620, 0, 583, 584, 0, 0, 450,
	451, 316, 323, 469, 325, 287, 373, 318, 435, 332,
	0, 462, 527, 463, 586, 589, 587, 588, 365, 328,
	329, 399, 333, 343, 387, 434, 371, 392, 285, 425,
	400, 347, 513, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	568, 567, 566, 565, 564, 563, 562, 561, 0, 0,
	510, 412, 297, 259, 293, 294, 301, 609, 606, 416,
	610, 0, 267, 490, 341, 0, 382, 315, 555, 556,
	0, 0, 215, 216, 217, 218, 219, 220, 221, 222,
	260, 223, 224, 225, 226, 227, 228, 229, 232, 233,
	234, 235, 236, 237, 238, 239, 558, 230, 231, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 0, 0, 0, 0, 261, 262, 263,
	264, 0, 0, 255, 256, 257, 258, 0, 0, 0,
	441, 442, 443, 465, 0, 427, 489, 607, 0, 0,
	0, 0, 0, 0, 0, 539, 551, 585, 0, 595,
	596, 598, 600, 599, 602, 0, 613, 480, 481, 614,
	591, 370, 0, 495, 528, 517, 601, 483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 627, 310, 0,
	0, 340, 532, 514, 524, 515, 0, 500, 501, 502,
	509, 320, 503, 504, 505, 475, 506, 476, 507, 508,
	0, 531, 482, 401, 354, 549, 548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 204, 0, 0, 0, 0,
	0, 0, 283, 205, 477, 597, 479, 478, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	406, 423, 284, 397, 436, 289, 404, 279, 369, 393,
	0, 0, 275, 421, 403, 351, 330, 331, 274, 0,
	388, 308, 322, 305, 367, 0, 420, 448, 304, 439,
	0, 431, 277, 0, 430, 366, 417, 422, 352, 346,
	276, 419, 350, 345, 334, 312, 464, 335, 336, 326,
	378, 344, 379, 327, 356, 355, 357, 0, 0, 0,
	0, 0, 459, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 590, 0, 0, 594,
	0, 433, 0, 626, 0, 0, 0, 0, 405, 0,
	0, 337, 0, 0, 0, 449, 0, 391, 372, 616,
	0, 0, 389, 342, 418, 380, 424, 407, 432, 385,
	381, 268, 408, 307, 353, 280, 282, 302, 309, 311,
	313, 314, 362, 363, 375, 396, 409, 410, 411, 306,
	290, 390, 291, 324, 292, 269, 298, 296, 299, 398,
	300, 271, 376, 415, 0, 319, 386, 349, 272, 348,
	377, 414, 413, 281, 440, 446, 447, 536, 0, 452,
	617, 618, 619, 461, 466, 467, 468, 470, 471, 472,
	473, 537, 554, 521, 491, 454, 545, 488, 492, 493,
	557, 0, 0, 0, 445, 338, 339, 0, 317, 265,
	266, 612, 303, 368, 559, 592, 593, 484, 0, 546,
	485, 494, 295, 518, 530, 529, 364, 444, 0, 541,
	544, 474, 611, 0, 538, 553, 615, 552, 608, 374,
	0, 395, 550, 497, 0, 542, 516, 0, 543, 512,
	547, 0, 486, 0, 402, 426, 438, 455, 458, 487,
	572, 573, 574, 270, 457, 576, 577, 578, 579, 580,
	581, 582, 575, 429, 519, 496, 522, 437, 499, 498,
	0, 0, 533, 453, 534, 535, 358, 359, 360, 361,
	321, 560, 288, 456, 384, 0, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 526, 523, 620, 0,
	583, 584, 0, 0, 450, 451, 316, 323, 469, 325,
	287, 373, 318, 435, 332, 0, 462, 527, 463, 586,
	589, 587, 588, 365, 328, 329, 399, 333, 343, 387,
	434, 371, 392, 285, 425, 400, 347, 513, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 568, 567, 566, 565, 564,
	563, 562, 561, 0, 0, 510, 412, 297, 259, 293,
	294, 301, 609, 606, 416, 610, 0, 267, 490, 341,
	0, 382, 315, 555, 556, 0, 0, 215, 216, 217,
	218, 219, 220, 221, 222, 260, 223, 224, 225, 226,
	227, 228, 229, 232, 233, 234, 235, 236, 237, 238,
	239, 558, 230, 231, 240, 241, 242, 243, 244, 245,
	246, 247, 248, 249, 250, 251, 252, 253, 0, 0,
	0, 0, 261, 262, 263, 264, 0, 0, 255, 256,
	257, 258, 0, 0, 0, 441, 442, 443, 465, 0,
	427, 489, 607, 0, 0, 0, 0, 0, 0, 0,
	539, 551, 585, 0, 595, 596, 598, 600, 599, 602,
	0, 613, 480, 481, 614, 591, 370, 0, 495, 528,
	517, 601, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 0, 340, 532, 514, 524,
	515, 0, 500, 501, 502, 509, 320, 503, 504, 505,
	475, 506, 476, 507, 508, 0, 531, 482, 401, 354,
	549, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 808, 0, 0, 0, 0, 0, 283, 205, 477,
	597, 479, 478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 406, 423, 284, 397, 436,
	289, 404, 279, 369, 393, 0, 0, 275, 421, 403,
	351, 330, 331, 274, 0, 388, 308, 322, 305, 367,
	0, 420, 448, 304, 439, 0, 431, 277, 0, 430,
	366, 417, 422, 352, 346, 276, 419, 350, 345, 334,
	312, 464, 335, 336, 326, 378, 344, 379, 327, 356,
	355, 357, 0, 0, 0, 0, 0, 459, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 590, 0, 0, 594, 0, 433, 0, 0, 0,
	0, 0, 0, 405, 0, 0, 337, 0, 0, 0,
	449, 0, 391, 372, 616, 0, 0, 389, 342, 418,
	380, 424, 407, 432, 385, 381, 268, 408, 307, 353,
	280, 282, 302, 309, 311, 313, 314, 362, 363, 375,
	396, 409, 410, 411, 306, 290, 390, 291, 324, 292,
	269, 298, 296, 299, 398, 300, 271, 376, 415, 0,
	319, 386, 349, 272, 348, 377, 414, 413, 281, 440,
	446, 447, 536, 0, 452, 617, 618, 619, 461, 466,
	467, 468, 470, 471, 472, 473, 537, 554, 521, 491,
	454, 545, 488, 492, 493, 557, 0, 0, 0, 445,
	338, 339, 0, 317, 265, 266, 612, 303, 368, 559,
	592, 593, 484, 0, 546, 485, 494, 295, 518, 530,
	529, 364, 444, 0, 541, 544, 474, 611, 0, 538,
	553, 615, 552, 608, 374, 0, 395, 550, 497, 0,
	542, 516, 0, 543, 512, 547, 0, 486, 0, 402,
	426, 438, 455, 458, 487, 572, 573, 574, 270, 457,
	576, 577, 578, 579, 580, 581, 582, 575, 429, 519,
	496, 522, 437, 499, 498, 0, 0, 533, 453, 534,
	535, 358, 359, 360, 361, 321, 560, 288, 456, 384,
	0, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 526, 523, 620, 0, 583, 584, 0, 0, 450,
	451, 316, 323, 469, 325, 287, 373, 318, 435, 332,
	0, 462, 527, 463, 586, 589, 587, 588, 365, 328,
	329, 399, 333, 343, 387, 434, 371, 392, 285, 425,
	400, 347, 513, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	568, 567, 566, 565, 564, 563, 562, 561, 0, 0,
	510, 412, 297, 259, 293, 294, 301, 609, 606, 416,
	610, 0, 267, 490, 341, 0, 382, 315, 555, 556,
	0, 0, 215, 216, 217, 218, 219, 220, 221, 222,
	260, 223, 224, 225, 226, 227, 228, 229, 232, 233,
	234, 235, 236, 237, 238, 239, 558, 230, 231, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 0, 0, 0, 0, 261, 262, 263,
	264, 0, 0, 255, 256, 257, 258, 0, 0, 0,
	441, 442, 443, 465, 0, 427, 489, 607, 0, 0,
	0, 0, 0, 0, 0, 539, 551, 585, 0, 595,
	596, 598, 600, 599, 602, 0, 613, 480, 481, 614,
	591, 370, 0, 495, 528, 517, 601, 483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 0,
	0, 340, 532, 514, 524, 515, 0, 500, 501, 502,
	509, 320, 503, 504, 505, 475, 506, 476, 507, 508,
	0, 531, 482, 401, 354, 549, 548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3771, 0, 0, 204, 0, 0, 0, 0,
	0, 0, 283, 205, 477, 597, 479, 478, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	406, 423, 284, 397, 436, 289, 404, 279, 369, 393,
	0, 0, 275, 421, 403, 351, 330, 331, 274, 0,
	388, 308, 322, 305, 367, 0, 420, 448, 304, 439,
	0, 431, 277, 0, 430, 366, 417, 422, 352, 346,
	276, 419, 350, 345, 334, 312, 464, 335, 336, 326,
	378, 344, 379, 327, 356, 355, 357, 0, 0, 0,
	0, 0, 459, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 590, 0, 0, 594,
	0, 433, 0, 0, 0, 0, 0, 0, 405, 0,
	0, 337, 0, 0, 0, 449, 0, 391, 372, 616,
	0, 0, 389, 342, 418, 380, 424, 407, 432, 385,
	381, 268, 408, 307, 353, 280, 282, 302, 309, 311,
	313, 314, 362, 363, 375, 396, 409, 410, 411, 306,
	290, 390, 291, 324, 292, 269, 298, 296, 299, 398,
	300, 271, 376, 415, 0, 319, 386, 349, 272, 348,
	377, 414, 413, 281, 440, 446, 447, 536, 0, 452,
	617, 618, 619, 461, 466, 467, 468, 470, 471, 472,
	473, 537, 554, 521, 491, 454, 545, 488, 492, 493,
	557, 0, 0, 0, 445, 338, 339, 0, 317, 265,
	266, 612, 303, 368, 559, 592, 593, 484, 0, 546,
	485, 494, 295, 518, 530, 529, 364, 444, 0, 541,
	544, 474, 611, 0, 538, 553, 615, 552, 608, 374,
	0, 395, 550, 497, 0, 542, 516, 0, 543, 512,
	547, 0, 486, 0, 402, 426, 438, 455, 458, 487,
	572, 573, 574, 270, 457, 576, 577, 578, 579, 580,
	581, 582, 575, 429, 519, 496, 522, 437, 499, 498,
	0, 0, 533, 453, 534, 535, 358, 359, 360, 361,
	321, 560, 288, 456, 384, 0, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 526, 523, 620, 0,
	583, 584, 0, 0, 450, 451, 316, 323, 469, 325,
	287, 373, 318, 435, 332, 0, 462, 527, 463, 586,
	589, 587, 588, 365, 328, 329, 399, 333, 343, 387,
	434, 371, 392, 285, 425, 400, 347, 513, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 568, 567, 566, 565, 564,
	563, 562, 561, 0, 0, 510, 412, 297, 259, 293,
	294, 301, 609, 606, 416, 610, 0, 267, 490, 341,
	0, 382, 315, 555, 556, 0, 0, 215, 216, 217,
	218, 219, 220, 221, 222, 260, 223, 224, 225, 226,
	227, 228, 229, 232, 233, 234, 235, 236, 237, 238,
	239, 558, 230, 231, 240, 241, 242, 243, 244, 245,
	246, 247, 248, 249, 250, 251, 252, 253, 0, 0,
	0, 0, 261, 262, 263, 264, 0, 0, 255, 256,
	257, 258, 0, 0, 0, 441, 442, 443, 465, 0,
	427, 489, 607, 0, 0, 0, 0, 0, 0, 0,
	539, 551, 585, 0, 595, 596, 598, 600, 599, 602,
	0, 613, 480, 481, 614, 591, 370, 0, 495, 528,
	517, 601, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 0, 340, 532, 514, 524,
	515, 0, 500, 501, 502, 509, 320, 503, 504, 505,
	475, 506, 476, 507, 508, 0, 531, 482, 401, 354,
	549, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 0, 0, 3553, 0, 0, 0, 283, 205, 477,
	597, 479, 478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 406, 423, 284, 397, 436,
	289, 404, 279, 369, 393, 0, 0, 275, 421, 403,
	351, 330, 331, 274, 0, 388, 308, 322, 305, 367,
	0, 420, 448, 304, 439, 0, 431, 277, 0, 430,
	366, 417, 422, 352, 346, 276, 419, 350, 345, 334,
	312, 464, 335, 336, 326, 378, 344, 379, 327, 356,
	355, 357, 0, 0, 0, 0, 0, 459, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 590, 0, 0, 594, 0, 433, 0, 0, 0,
	0, 0, 0, 405, 0, 0, 337, 0, 0, 0,
	449, 0, 391, 372, 616, 0, 0, 389, 342, 418,
	380, 424, 407, 432, 385, 381, 268, 408, 307, 353,
	280, 282, 302, 309, 311, 313, 314, 362, 363, 375,
	396, 409, 410, 411, 306, 290, 390, 291, 324, 292,
	269, 298, 296, 299, 398, 300, 271, 376, 415, 0,
	319, 386, 349, 272, 348, 377, 414, 413, 281, 440,
	446, 447, 536, 0, 452, 617, 618, 619, 461, 466,
	467, 468, 470, 471, 472, 473, 537, 554, 521, 491,
	454, 545, 488, 492, 493, 557, 0, 0, 0, 445,
	338, 339, 0, 317, 265, 266, 612, 303, 368, 559,
	592, 593, 484, 0, 546, 485, 494, 295, 518, 530,
	529, 364, 444, 0, 541, 544, 474, 611, 0, 538,
	553, 615, 552, 608, 374, 0, 395, 550, 497, 0,
	542, 516, 0, 543, 512, 547, 0, 486, 0, 402,
	426, 438, 455, 458, 487, 572, 573, 574, 270, 457,
	576, 577, 578, 579, 580, 581, 582, 575, 429, 519,
	496, 522, 437, 499, 498, 0, 0, 533, 453, 534,
	535, 358, 359, 360, 361, 321, 560, 288, 456, 384,
	0, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 526, 523, 620, 0, 583, 584, 0, 0, 450,
	451, 316, 323, 469, 325, 287, 373, 318, 435, 332,
	0, 462, 527, 463, 586, 589, 587, 588, 365, 328,
	329, 399, 333, 343, 387, 434, 371, 392, 285, 425,
	400, 347, 513, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	568, 567, 566, 565, 564, 563, 562, 561, 0, 0,
	510, 412, 297, 259, 293, 294, 301, 609, 606, 416,
	610, 0, 267, 490, 341, 0, 382, 315, 555, 556,
	0, 0, 215, 216, 217, 218, 219, 220, 221, 222,
	260, 223, 224, 225, 226, 227, 228, 229, 232, 233,
	234, 235, 236, 237, 238, 239, 558, 230, 231, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 0, 0, 0, 0, 261, 262, 263,
	264, 0, 0, 255, 256, 257, 258, 0, 0, 0,
	441, 442, 443, 465, 0, 427, 489, 607, 0, 0,
	0, 0, 0, 0, 0, 539, 551, 585, 0, 595,
	596, 598, 600, 599, 602, 0, 613, 480, 481, 614,
	591, 370, 0, 495, 528, 517, 601, 483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 0,
	0, 340, 532, 514, 524, 515, 0, 500, 501, 502,
	509, 320, 503, 504, 505, 475, 506, 476, 507, 508,
	0, 531, 482, 401, 354, 549, 548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 204, 0, 0, 0, 0,
	0, 0, 283, 205, 477, 597, 479, 478, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	406, 423, 284, 397, 436, 289, 404, 279, 369, 393,
	0, 0, 275, 421, 403, 351, 330, 331, 274, 0,
	388, 308, 322, 305, 367, 0, 420, 448, 304, 439,
	0, 431, 277, 0, 430, 366, 417, 422, 352, 346,
	276, 419, 350, 345, 334, 312, 464, 335, 336, 326,
	378, 344, 379, 327, 356, 355, 357, 0, 0, 0,
	0, 0, 459, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 590, 0, 0, 594,
	0, 433, 0, 0, 0, 3681, 0, 0, 405, 0,
	0, 337, 0, 0, 0, 449, 0, 391, 372, 616,
	0, 0, 389, 342, 418, 380, 424, 407, 432, 385,
	381, 268, 408, 307, 353, 280, 282, 302, 309, 311,
	313, 314, 362, 363, 375, 396, 409, 410, 411, 306,
	290, 390, 291, 324, 292, 269, 298, 296, 299, 398,
	300, 271, 376, 415, 0, 319, 386, 349, 272, 348,
	377, 414, 413, 281, 440, 446, 447, 536, 0, 452,
	617, 618, 619, 461, 466, 467, 468, 470, 471, 472,
	473, 537, 554, 521, 491, 454, 545, 488, 492, 493,
	557, 0, 0, 0, 445, 338, 339, 0, 317, 265,
	266, 612, 303, 368, 559, 592, 593, 484, 0, 546,
	485, 494, 295, 518, 530, 529, 364, 444, 0, 541,
	544, 474, 611, 0, 538, 553, 615, 552, 608, 374,
	0, 395, 550, 497, 0, 542, 516, 0, 543, 512,
	547, 0, 486, 0, 402, 426, 438, 455, 458, 487,
	572, 573, 574, 270, 457, 576, 577, 578, 579, 580,
	581, 582, 575, 429, 519, 496, 522, 437, 499, 498,
	0, 0, 533, 453, 534, 535, 358, 359, 360, 361,
	321, 560, 288, 456, 384, 0, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 526, 523, 620, 0,
	583, 584, 0, 0, 450, 451, 316, 323, 469, 325,
	287, 373, 318, 435, 332, 0, 462, 527, 463, 586,
	589, 587, 588, 365, 328, 329, 399, 333, 343, 387,
	434, 371, 392, 285, 425, 400, 347, 513, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 568, 567, 566, 565, 564,
	563, 562, 561, 0, 0, 510, 412, 297, 259, 293,
	294, 301, 609, 606, 416, 610, 0, 267, 490, 341,
	0, 382, 315, 555, 556, 0, 0, 215, 216, 217,
	218, 219, 220, 221, 222, 260, 223, 224, 225, 226,
	227, 228, 229, 232, 233, 234, 235, 236, 237, 238,
	239, 558, 230, 231, 240, 241, 242, 243, 244, 245,
	246, 247, 248, 249, 250, 251, 252, 253, 0, 0,
	0, 0, 261, 262, 263, 264, 0, 0, 255, 256,
	257, 258, 0, 0, 0, 441, 442, 443, 465, 0,
	427, 489, 607, 0, 0, 0, 0, 0, 0, 0,
	539, 551, 585, 0, 595, 596, 598, 600, 599, 602,
	0, 613, 480, 481, 614, 591, 370, 0, 495, 528,
	517, 601, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 0, 340, 532, 514, 524,
	515, 0, 500, 501, 502, 509, 320, 503, 504, 505,
	475, 506, 476, 507, 508, 0, 531, 482, 401, 354,
	549, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3402, 0, 0,
	204, 0, 0, 0, 0, 0, 0, 283, 205, 477,
	597, 479, 478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 406, 423, 284, 397, 436,
	289, 404, 279, 369, 393, 0, 0, 275, 421, 403,
	351, 330, 331, 274, 0, 388, 308, 322, 305, 367,
	0, 420, 448, 304, 439, 0, 431, 277, 0, 430,
	366, 417, 422, 352, 346, 276, 419, 350, 345, 334,
	312, 464, 335, 336, 326, 378, 344, 379, 327, 356,
	355, 357, 0, 0, 0, 0, 0, 459, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 590, 0, 0, 594, 0, 433, 0, 0, 0,
	0, 0, 0, 405, 0, 0, 337, 0, 0, 0,
	449, 0, 391, 372, 616, 0, 0, 389, 342, 418,
	380, 424, 407, 432, 385, 381, 268, 408, 307, 353,
	280, 282, 302, 309, 311, 313, 314, 362, 363, 375,
	396, 409, 410, 411, 306, 290, 390, 291, 324, 292,
	269, 298, 296, 299, 398, 300, 271, 376, 415, 0,
	319, 386, 349, 272, 348, 377, 414, 413, 281, 440,
	446, 447, 536, 0, 452, 617, 618, 619, 461, 466,
	467, 468, 470, 471, 472, 473, 537, 554, 521, 491,
	454, 545, 488, 492, 493, 557, 0, 0, 0, 445,
	338, 339, 0, 317, 265, 266, 612, 303, 368, 559,
	592, 593, 484, 0, 546, 485, 494, 295, 518, 530,
	529, 364, 444, 0, 541, 544, 474, 611, 0, 538,
	553, 615, 552, 608, 374, 0, 395, 550, 497, 0,
	542, 516, 0, 543, 512, 547, 0, 486, 0, 402,
	426, 438, 455, 458, 487, 572, 573, 574, 270, 457,
	576, 577, 578, 579, 580, 581, 582, 575, 429, 519,
	496, 522, 437, 499, 498, 0, 0, 533, 453, 534,
	535, 358, 359, 360, 361, 321, 560, 288, 456, 384,
	0, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 526, 523, 620, 0, 583, 584, 0, 0, 450,
	451, 316, 323, 469, 325, 287, 373, 318, 435, 332,
	0, 462, 527, 463, 586, 589, 587, 588, 365, 328,
	329, 399, 333, 343, 387, 434, 371, 392, 285, 425,
	400, 347, 513, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	568, 567, 566, 565, 564, 563, 562, 561, 0, 0,
	510, 412, 297, 259, 293, 294, 301, 609, 606, 416,
	610, 0, 267, 490, 341, 0, 382, 315, 555, 556,
	0, 0, 215, 216, 217, 218, 219, 220, 221, 222,
	260, 223, 224, 225, 226, 227, 228, 229, 232, 233,
	234, 235, 236, 237, 238, 239, 558, 230, 231, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 0, 0, 0, 0, 261, 262, 263,
	264, 0, 0, 255, 256, 257, 258, 0, 0, 0,
	441, 442, 443, 465, 0, 427, 489, 607, 0, 0,
	0, 0, 0, 0, 0, 539, 551, 585, 0, 595,
	596, 598, 600, 599, 602, 0, 613, 480, 481, 614,
	591, 370, 0, 495, 528, 517, 601, 483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 0,
	0, 340, 532, 514, 524, 515, 0, 500, 501, 502,
	509, 320, 503, 504, 505, 475, 506, 476, 507, 508,
	0, 531, 482, 401, 354, 549, 548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3568, 0, 204, 0, 0, 0, 0,
	0, 0, 283, 205, 477, 597, 479, 478, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	406, 423, 284, 397, 436, 289, 404, 279, 369, 393,
	0, 0, 275, 421, 403, 351, 330, 331, 274, 0,
	388, 308, 322, 305, 367, 0, 420, 448, 304, 439,
	0, 431, 277, 0, 430, 366, 417, 422, 352, 346,
	276, 419, 350, 345, 334, 312, 464, 335, 336, 326,
	378, 344, 379, 327, 356, 355, 357, 0, 0, 0,
	0, 0, 459, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 590, 0, 0, 594,
	0, 433, 0, 0, 0, 0, 0, 0, 405, 0,
	0, 337, 0, 0, 0, 449, 0, 391, 372, 616,
	0, 0, 389, 342, 418, 380, 424, 407, 432, 385,
	381, 268, 408, 307, 353, 280, 282, 302, 309, 311,
	313, 314, 362, 363, 375, 396, 409, 410, 411, 306,
	290, 390, 291, 324, 292, 269, 298, 296, 299, 398,
	300, 271, 376, 415, 0, 319, 386, 349, 272, 348,
	377, 414, 413, 281, 440, 446, 447, 536, 0, 452,
	617, 618, 619, 461, 466, 467, 468, 470, 471, 472,
	473, 537, 554, 521, 491, 454, 545, 488, 492, 493,
	557, 0, 0, 0, 445, 338, 339, 0, 317, 265,
	266, 612, 303, 368, 559, 592, 593, 484, 0, 546,
	485, 494, 295, 518, 530, 529, 364, 444, 0, 541,
	544, 474, 611, 0, 538, 553, 615, 552, 608, 374,
	0, 395, 550, 497, 0, 542, 516, 0, 543, 512,
	547, 0, 486, 0, 402, 426, 438, 455, 458, 487,
	572, 573, 574, 270, 457, 576, 577, 578, 579, 580,
	581, 582, 575, 429, 519, 496, 522, 437, 499, 498,
	0, 0, 533, 453, 534, 535, 358, 359, 360, 361,
	321, 560, 288, 456, 384, 0, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 526, 523, 620, 0,
	583, 584, 0, 0, 450, 451, 316, 323, 469, 325,
	287, 373, 318, 435, 332, 0, 462, 527, 463, 586,
	589, 587, 588, 365, 328, 329, 399, 333, 343, 387,
	434, 371, 392, 285, 425, 400, 347, 513, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 568, 567, 566, 565, 564,
	563, 562, 561, 0, 0, 510, 412, 297, 259, 293,
	294, 301, 609, 606, 416, 610, 0, 267, 490, 341,
	0, 382, 315, 555, 556, 0, 0, 215, 216, 217,
	218, 219, 220, 221, 222, 260, 223, 224, 225, 226,
	227, 228, 229, 232, 233, 234, 235, 236, 237, 238,
	239, 558, 230, 231, 240, 241, 242, 243, 244, 245,
	246, 247, 248, 249, 250, 251, 252, 253, 0, 0,
	0, 0, 261, 262, 263, 264, 0, 0, 255, 256,
	257, 258, 0, 0, 0, 441, 442, 443, 465, 0,
	427, 489, 607, 0, 0, 0, 0, 0, 0, 0,
	539, 551, 585, 0, 595, 596, 598, 600, 599, 602,
	0, 613, 480, 481, 614, 591, 370, 0, 495, 528,
	517, 601, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 0, 340, 532, 514, 524,
	515, 0, 500, 501, 502, 509, 320, 503, 504, 505,
	475, 506, 476, 507, 508, 0, 531, 482, 401, 354,
	549, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 0, 0, 0, 0, 0, 0, 283, 205, 477,
	597, 479, 478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 406, 423, 284, 397, 436,
	289, 404, 279, 369, 393, 0, 0, 275, 421, 403,
	351, 330, 331, 274, 0, 388, 308, 322, 305, 367,
	0, 420, 448, 304, 439, 0, 431, 277, 0, 430,
	366, 417, 422, 352, 346, 276, 419, 350, 345, 334,
	312, 464, 335, 336, 326, 378, 344, 379, 327, 356,
	355, 357, 0, 0, 0, 0, 0, 459, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 590, 0, 0, 594, 0, 433, 0, 0, 0,
	3490, 0, 0, 405, 0, 0, 337, 0, 0, 0,
	449, 0, 391, 372, 616, 0, 0, 389, 342, 418,
	380, 424, 407, 432, 385, 381, 268, 408, 307, 353,
	280, 282, 302, 309, 311, 313, 314, 362, 363, 375,
	396, 409, 410, 411, 306, 290, 390, 291, 324, 292,
	269, 298, 296, 299, 398, 300, 271, 376, 415, 0,
	319, 386, 349, 272, 348, 377, 414, 413, 281, 440,
	446, 447, 536, 0, 452, 617, 618, 619, 461, 466,
	467, 468, 470, 471, 472, 473, 537, 554, 521, 491,
	454, 545, 488, 492, 493, 557, 0, 0, 0, 445,
	338, 339, 0, 317, 265, 266, 612, 303, 368, 559,
	592, 593, 484, 0, 546, 485, 494, 295, 518, 530,
	529, 364, 444, 0, 541, 544, 474, 611, 0, 538,
	553, 615, 552, 608, 374, 0, 395, 550, 497, 0,
	542, 516, 0, 543, 512, 547, 0, 486, 0, 402,
	426, 438, 455, 458, 487, 572, 573, 574, 270, 457,
	576, 577, 578, 579, 580, 581, 582, 575, 429, 519,
	496, 522, 437, 499, 498, 0, 0, 533, 453, 534,
	535, 358, 359, 360, 361, 321, 560, 288, 456, 384,
	0, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 526, 523, 620, 0, 583, 584, 0, 0, 450,
	451, 316, 323, 469, 325, 287, 373, 318, 435, 332,
	0, 462, 527, 463, 586, 589, 587, 588, 365, 328,
	329, 399, 333, 343, 387, 434, 371, 392, 285, 425,
	400, 347, 513, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	568, 567, 566, 565, 564, 563, 562, 561, 0, 0,
	510, 412, 297, 259, 293, 294, 301, 609, 606, 416,
	610, 0, 267, 490, 341, 0, 382, 315, 555, 556,
	0, 0, 215, 216, 217, 218, 219, 220, 221, 222,
	260, 223, 224, 225, 226, 227, 228, 229, 232, 233,
	234, 235, 236, 237, 238, 239, 558, 230, 231, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 0, 0, 0, 0, 261, 262, 263,
	264, 0, 0, 255, 256, 257, 258, 0, 0, 0,
	441, 442, 443, 465, 0, 427, 489, 607, 0, 0,
	0, 0, 0, 0, 0, 539, 551, 585, 0, 595,
	596, 598, 600, 599, 602, 0, 613, 480, 481, 614,
	591, 370, 0, 495, 528, 517, 601, 483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 0,
	0, 340, 532, 514, 524, 515, 0, 500, 501, 502,
	509, 320, 503, 504, 505, 475, 506, 476, 507, 508,
	0, 531, 482, 401, 354, 549, 548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 204, 0, 0, 3027, 0,
	0, 0, 283, 205, 477, 597, 479, 478, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	406, 423, 284, 397, 436, 289, 404, 279, 369, 393,
	0, 0, 275, 421, 403, 351, 330, 331, 274, 0,
	388, 308, 322, 305, 367, 0, 420, 448, 304, 439,
	0, 431, 277, 0, 430, 366, 417, 422, 352, 346,
	276, 419, 350, 345, 334, 312, 464, 335, 336, 326,
	378, 344, 379, 327, 356, 355, 357, 0, 0, 0,
	0, 0, 459, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 590, 0, 0, 594,
	0, 433, 0, 0, 0, 0, 0, 0, 405, 0,
	0, 337, 0, 0, 0, 449, 0, 391, 372, 616,
	0, 0, 389, 342, 418, 380, 424, 407, 432, 385,
	381, 268, 408, 307, 353, 280, 282, 302, 309, 311,
	313, 314, 362, 363, 375, 396, 409, 410, 411, 306,
	290, 390, 291, 324, 292, 269, 298, 296, 299, 398,
	300, 271, 376, 415, 0, 319, 386, 349, 272, 348,
	377, 414, 413, 281, 440, 446, 447, 536, 0, 452,
	617, 618, 619, 461, 466, 467, 468, 470, 471, 472,
	473, 537, 554, 521, 491, 454, 545, 488, 492, 493,
	557, 0, 0, 0, 445, 338, 339, 0, 317, 265,
	266, 612, 303, 368, 559, 592, 593, 484, 0, 546,
	485, 494, 295, 518, 530, 529, 364, 444, 0, 541,
	544, 474, 611, 0, 538, 553, 615, 552, 608, 374,
	0, 395, 550, 497, 0, 542, 516, 0, 543, 512,
	547, 0, 486, 0, 402, 426, 438, 455, 458, 487,
	572, 573, 574, 270, 457, 576, 577, 578, 579, 580,
	581, 582, 575, 429, 519, 496, 522, 437, 499, 498,
	0, 0, 533, 453, 534, 535, 358, 359, 360, 361,
	321, 560, 288, 456, 384, 0, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 526, 523, 620, 0,
	583, 584, 0, 0, 450, 451, 316, 323, 469, 325,
	287, 373, 318, 435, 332, 0, 462, 527, 463, 586,
	589, 587, 588, 365, 328, 329, 399, 333, 343, 387,
	434, 371, 392, 285, 425, 400, 347, 513, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 568, 567, 566, 565, 564,
	563, 562, 561, 0, 0, 510, 412, 297, 259, 293,
	294, 301, 609, 606, 416, 610, 0, 267, 490, 341,
	0, 382, 315, 555, 556, 0, 0, 215, 216, 217,
	218, 219, 220, 221, 222, 260, 223, 224, 225, 226,
	227, 228, 229, 232, 233, 234, 235, 236, 237, 238,
	239, 558, 230, 231, 240, 241, 242, 243, 244, 245,
	246, 247, 248, 249, 250, 251, 252, 253, 0, 0,
	0, 0, 261, 262, 263, 264, 0, 0, 255, 256,
	257, 258, 0, 0, 0, 441, 442, 443, 465, 0,
	427, 489, 607, 0, 0, 0, 0, 0, 0, 0,
	539, 551, 585, 0, 595, 596, 598, 600, 599, 602,
	0, 613, 480, 481, 614, 591, 370, 0, 495, 528,
	517, 601, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 0, 340, 532, 514, 524,
	515, 0, 500, 501, 502, 509, 320, 503, 504, 505,
	475, 506, 476, 507, 508, 0, 531, 482, 401, 354,
	549, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 0, 0, 0, 0, 0, 0, 283, 205, 477,
	597, 479, 478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3045, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 406, 423, 284, 397, 436,
	289, 404, 279, 369, 393, 0, 0, 275, 421, 403,
	351, 330, 331, 274, 0, 388, 308, 322, 305, 367,
	0, 420, 448, 304, 439, 0, 431, 277, 0, 430,
	366, 417, 422, 352, 346, 276, 419, 350, 345, 334,
	312, 464, 335, 336, 326, 378, 344, 379, 327, 356,
	355, 357, 0, 0, 0, 0, 0, 459, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 590, 0, 0, 594, 0, 433, 0, 0, 0,
	0, 0, 0, 405, 0, 0, 337, 0, 0, 0,
	449, 0, 391, 372, 616, 0, 0, 389, 342, 418,
	380, 424, 407, 432, 385, 381, 268, 408, 307, 353,
	280, 282, 302, 309, 311, 313, 314, 362, 363, 375,
	396, 409, 410, 411, 306, 290, 390, 291, 324, 292,
	269, 298, 296, 299, 398, 300, 271, 376, 415, 0,
	319, 386, 349, 272, 348, 377, 414, 413, 281, 440,
	446, 447, 536, 0, 452, 617, 618, 619, 461, 466,
	467, 468, 470, 471, 472, 473, 537, 554, 521, 491,
	454, 545, 488, 492, 493, 557, 0, 0, 0, 445,
	338, 339, 0, 317, 265, 266, 612, 303, 368, 559,
	592, 593, 484, 0, 546, 485, 494, 295, 518, 530,
	529, 364, 444, 0, 541, 544, 474, 611, 0, 538,
	553, 615, 552, 608, 374, 0, 395, 550, 497, 0,
	542, 516, 0, 543, 512, 547, 0, 486, 0, 402,
	426, 438, 455, 458, 487, 572, 573, 574, 270, 457,
	576, 577, 578, 579, 580, 581, 582, 575, 429, 519,
	496, 522, 437, 499, 498, 0, 0, 533, 453, 534,
	535, 358, 359, 360, 361, 321, 560, 288, 456, 384,
	0, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 526, 523, 620, 0, 583, 584, 0, 0, 450,
	451, 316, 323, 469, 325, 287, 373, 318, 435, 332,
	0, 462, 527, 463, 586, 589, 587, 588, 365, 328,
	329, 399, 333, 343, 387, 434, 371, 392, 285, 425,
	400, 347, 513, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	568, 567, 566, 565, 564, 563, 562, 561, 0, 0,
	510, 412, 297, 259, 293, 294, 301, 609, 606, 416,
	610, 0, 267, 490, 341, 0, 382, 315, 555, 556,
	0, 0, 215, 216, 217, 218, 219, 220, 221, 222,
	260, 223, 224, 225, 226, 227, 228, 229, 232, 233,
	234, 235, 236, 237, 238, 239, 558, 230, 231, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 0, 0, 0, 0, 261, 262, 263,
	264, 0, 0, 255, 256, 257, 258, 0, 0, 0,
	441, 442, 443, 465, 0, 427, 489, 607, 0, 0,
	0, 0, 0, 0, 0, 539, 551, 585, 0, 595,
	596, 598, 600, 599, 602, 0, 613, 480, 481, 614,
	591, 370, 0, 495, 528, 517, 601, 483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 0,
	0, 340, 532, 514, 524, 515, 0, 500, 501, 502,
	509, 320, 503, 504, 505, 475, 506, 476, 507, 508,
	0, 531, 482, 401, 354, 549, 548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1937, 0, 0, 204, 0, 0, 0, 0,
	0, 0, 283, 205, 477, 597, 479, 478, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	406, 423, 284, 397, 436, 289, 404, 279, 369, 393,
	0, 0, 275, 421, 403, 351, 330, 331, 274, 0,
	388, 308, 322, 305, 367, 0, 420, 448, 304, 439,
	0, 431, 277, 0, 430, 366, 417, 422, 352, 346,
	276, 419, 350, 345, 334, 312, 464, 335, 336, 326,
	378, 344, 379, 327, 356, 355, 357, 0, 0, 0,
	0, 0, 459, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 590, 0, 0, 594,
	0, 433, 0, 0, 0, 0, 0, 0, 405, 0,
	0, 337, 0, 0, 0, 449, 0, 391, 372, 616,
	0, 0, 389, 342, 418, 380, 424, 407, 432, 385,
	381, 268, 408, 307, 353, 280, 282, 302, 309, 311,
	313, 314, 362, 363, 375, 396, 409, 410, 411, 306,
	290, 390, 291, 324, 292, 269, 298, 296, 299, 398,
	300, 271, 376, 415, 0, 319, 386, 349, 272, 348,
	377, 414, 413, 281, 440, 446, 447, 536, 0, 452,
	617, 618, 619, 461, 466, 467, 468, 470, 471, 472,
	473, 537, 554, 521, 491, 454, 545, 488, 492, 493,
	557, 0, 0, 0, 445, 338, 339, 0, 317, 265,
	266, 612, 303, 368, 559, 592, 593, 484, 0, 546,
	485, 494, 295, 518, 530, 529, 364, 444, 0, 541,
	544, 474, 611, 0, 538, 553, 615, 552, 608, 374,
	0, 395, 550, 497, 0, 542, 516, 0, 543, 512,
	547, 0, 486, 0, 402, 426, 438, 455, 458, 487,
	572, 573, 574, 270, 457, 576, 577, 578, 579, 580,
	581, 582, 575, 429, 519, 496, 522, 437, 499, 498,
	0, 0, 533, 453, 534, 535, 358, 359, 360, 361,
	321, 560, 288, 456, 384, 0, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 526, 523, 620, 0,
	583, 584, 0, 0, 450, 451, 316, 323, 469, 325,
	287, 373, 318, 435, 332, 0, 462, 527, 463, 586,
	589, 587, 588, 365, 328, 329, 399, 333, 343, 387,
	434, 371, 392, 285, 425, 400, 347, 513, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 568, 567, 566, 565, 564,
	563, 562, 561, 0, 0, 510, 412, 297, 259, 293,
	294, 301, 609, 606, 416, 610, 0, 267, 490, 341,
	0, 382, 315, 555, 556, 0, 0, 215, 216, 217,
	218, 219, 220, 221, 222, 260, 223, 224, 225, 226,
	227, 228, 229, 232, 233, 234, 235, 236, 237, 238,
	239, 558, 230, 231, 240, 241, 242, 243, 244, 245,
	246, 247, 248, 249, 250, 251, 252, 253, 0, 0,
	0, 0, 261, 262, 263, 264, 0, 0, 255, 256,
	257, 258, 0, 0, 0, 441, 442, 443, 465, 0,
	427, 489, 607, 0, 0, 0, 0, 0, 0, 0,
	539, 551, 585, 0, 595, 596, 598, 600, 599, 602,
	0, 613, 480, 481, 614, 591, 370, 0, 495, 528,
	517, 601, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 0, 340, 532, 514, 524,
	515, 0, 500, 501, 502, 509, 320, 503, 504, 505,
	475, 506, 476, 507, 508, 0, 531, 482, 401, 354,
	549, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 0, 0, 0, 0, 0, 0, 283, 205, 477,
	597, 479, 478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3147, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 406, 423, 284, 397, 436,
	289, 404, 279, 369, 393, 0, 0, 275, 421, 403,
	351, 330, 331, 274, 0, 388, 308, 322, 305, 367,
	0, 420, 448, 304, 439, 0, 431, 277, 0, 430,
	366, 417, 422, 352, 346, 276, 419, 350, 345, 334,
	312, 464, 335, 336, 326, 378, 344, 379, 327, 356,
	355, 357, 0, 0, 0, 0, 0, 459, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 590, 0, 0, 594, 0, 433, 0, 0, 0,
	0, 0, 0, 405, 0, 0, 337, 0, 0, 0,
	449, 0, 391, 372, 616, 0, 0, 389, 342, 418,
	380, 424, 407, 432, 385, 381, 268, 408, 307, 353,
	280, 282, 302, 309, 311, 313, 314, 362, 363, 375,
	396, 409, 410, 411, 306, 290, 390, 291, 324, 292,
	269, 298, 296, 299, 398, 300, 271, 376, 415, 0,
	319, 386, 349, 272, 348, 377, 414, 413, 281, 440,
	446, 447, 536, 0, 452, 617, 618, 619, 461, 466,
	467, 468, 470, 471, 472, 473, 537, 554, 521, 491,
	454, 545, 488, 492, 493, 557, 0, 0, 0, 445,
	338, 339, 0, 317, 265, 266, 612, 303, 368, 559,
	592, 593, 484, 0, 546, 485, 494, 295, 518, 530,
	529, 364, 444, 0, 541, 544, 474, 611, 0, 538,
	553, 615, 552, 608, 374, 0, 395, 550, 497, 0,
	542, 516, 0, 543, 512, 547, 0, 486, 0, 402,
	426, 438, 455, 458, 487, 572, 573, 574, 270, 457,
	576, 577, 578, 579, 580, 581, 582, 575, 429, 519,
	496, 522, 437, 499, 498, 0, 0, 533, 453, 534,
	535, 358, 359, 360, 361, 321, 560, 288, 456, 384,
	0, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 526, 523, 620, 0, 583, 584, 0, 0, 450,
	451, 316, 323, 469, 325, 287, 373, 318, 435, 332,
	0, 462, 527, 463, 586, 589, 587, 588, 365, 328,
	329, 399, 333, 343, 387, 434, 371, 392, 285, 425,
	400, 347, 513, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	568, 567, 566, 565, 564, 563, 562, 561, 0, 0,
	510, 412, 297, 259, 293, 294, 301, 609, 606, 416,
	610, 0, 267, 490, 341, 0, 382, 315, 555, 556,
	0, 0, 215, 216, 217, 218, 219, 220, 221, 222,
	260, 223, 224, 225, 226, 227, 228, 229, 232, 233,
	234, 235, 236, 237, 238, 239, 558, 230, 231, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 0, 0, 0, 0, 261, 262, 263,
	264, 0, 0, 255, 256, 257, 258, 0, 0, 0,
	441, 442, 443, 465, 0, 427, 489, 607, 0, 0,
	0, 0, 0, 0, 0, 539, 551, 585, 0, 595,
	596, 598, 600, 599, 602, 0, 613, 480, 481, 614,
	591, 370, 0, 495, 528, 517, 601, 483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 0,
	0, 340, 532, 514, 524, 515, 0, 500, 501, 502,
	509, 320, 503, 504, 505, 475, 506, 476, 507, 508,
	0, 531, 482, 401, 354, 549, 548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 204, 0, 0, 0, 0,
	0, 0, 283, 205, 477, 597, 479, 478, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2897, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	406, 423, 284, 397, 436, 289, 404, 279, 369, 393,
	0, 0, 275, 421, 403, 351, 330, 331, 274, 0,
	388, 308, 322, 305, 367, 0, 420, 448, 304, 439,
	0, 431, 277, 0, 430, 366, 417, 422, 352, 346,
	276, 419, 350, 345, 334, 312, 464, 335, 336, 326,
	378, 344, 379, 327, 356, 355, 357, 0, 0, 0,
	0, 0, 459, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 590, 0, 0, 594,
	0, 433, 0, 0, 0, 0, 0, 0, 405, 0,
	0, 337, 0, 0, 0, 449, 0, 391, 372, 616,
	0, 0, 389, 342, 418, 380, 424, 407, 432, 385,
	381, 268, 408, 307, 353, 280, 282, 302, 309, 311,
	313, 314, 362, 363, 375, 396, 409, 410, 411, 306,
	290, 390, 291, 324, 292, 269, 298, 296, 299, 398,
	300, 271, 376, 415, 0, 319, 386, 349, 272, 348,
	377, 414, 413, 281, 440, 446, 447, 536, 0, 452,
	617, 618, 619, 461, 466, 467, 468, 470, 471, 472,
	473, 537, 554, 521, 491, 454, 545, 488, 492, 493,
	557, 0, 0, 0, 445, 338, 339, 0, 317, 265,
	266, 612, 303, 368, 559, 592, 593, 484, 0, 546,
	485, 494, 295, 518, 530, 529, 364, 444, 0, 541,
	544, 474, 611, 0, 538, 553, 615, 552, 608, 374,
	0, 395, 550, 497, 0, 542, 516, 0, 543, 512,
	547, 0, 486, 0, 402, 426, 438, 455, 458, 487,
	572, 573, 574, 270, 457, 576, 577, 578, 579, 580,
	581, 582, 575, 429, 519, 496, 522, 437, 499, 498,
	0, 0, 533, 453, 534, 535, 358, 359, 360, 361,
	321, 560, 288, 456, 384, 0, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 526, 523, 620, 0,
	583, 584, 0, 0, 450, 451, 316, 323, 469, 325,
	287, 373, 318, 435, 332, 0, 462, 527, 463, 586,
	589, 587, 588, 365, 328, 329, 399, 333, 343, 387,
	434, 371, 392, 285, 425, 400, 347, 513, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 568, 567, 566, 565, 564,
	563, 562, 561, 0, 0, 510, 412, 297, 259, 293,
	294, 301, 609, 606, 416, 610, 0, 267, 490, 341,
	0, 382, 315, 555, 556, 0, 0, 215, 216, 217,
	218, 219, 220, 221, 222, 260, 223, 224, 225, 226,
	227, 228, 229, 232, 233, 234, 235, 236, 237, 238,
	239, 558, 230, 231, 240, 241, 242, 243, 244, 245,
	246, 247, 248, 249, 250, 251, 252, 253, 0, 0,
	0, 0, 261, 262, 263, 264, 0, 0, 255, 256,
	257, 258, 0, 0, 0, 441, 442, 443, 465, 0,
	427, 489, 607, 0, 0, 0, 0, 0, 0, 0,
	539, 551, 585, 0, 595, 596, 598, 600, 599, 602,
	0, 613, 480, 481, 614, 591, 370, 0, 495, 528,
	517, 601, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 0, 340, 532, 514, 524,
	515, 0, 500, 501, 502, 509, 320, 503, 504, 505,
	475, 506, 476, 507, 508, 0, 531, 482, 401, 354,
	549, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 0, 0, 1452, 0, 0, 0, 283, 205, 477,
	597, 479, 478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 406, 423, 284, 397, 436,
	289, 404, 279, 369, 393, 0, 0, 275, 421, 403,
	351, 330, 331, 274, 0, 388, 308, 322, 305, 367,
	0, 420, 448, 304, 439, 0, 431, 277, 0, 430,
	366, 417, 422, 352, 346, 276, 419, 350, 345, 334,
	312, 464, 335, 336, 326, 378, 344, 379, 327, 356,
	355, 357, 0, 0, 0, 0, 0, 459, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 590, 0, 0, 594, 0, 433, 0, 0, 0,
	0, 0, 0, 405, 0, 0, 337, 0, 0, 0,
	449, 0, 391, 372, 616, 0, 0, 389, 342, 418,
	380, 424, 407, 432, 385, 381, 268, 408, 307, 353,
	280, 282, 302, 309, 311, 313, 314, 362, 363, 375,
	396, 409, 410, 411, 306, 290, 390, 291, 324, 292,
	269, 298, 296, 299, 398, 300, 271, 376, 415, 0,
	319, 386, 349, 272, 348, 377, 414, 413, 281, 440,
	446, 447, 536, 0, 452, 617, 618, 619, 461, 466,
	467, 468, 470, 471, 472, 473, 537, 554, 521, 491,
	454, 545, 488, 492, 493, 557, 0, 0, 0, 445,
	338, 339, 0, 317, 265, 266, 612, 303, 368, 559,
	592, 593, 484, 0, 546, 485, 494, 295, 518, 530,
	529, 364, 444, 0, 541, 544, 474, 611, 0, 538,
	553, 615, 552, 608, 374, 0, 395, 550, 497, 0,
	542, 516, 0, 543, 512, 547, 0, 486, 0, 402,
	426, 438, 455, 458, 487, 572, 573, 574, 270, 457,
	576, 577, 578, 579, 580, 581, 582, 575, 429, 519,
	496, 522, 437, 499, 498, 0, 0, 533, 453, 534,
	535, 358, 359, 360, 361, 321, 560, 288, 456, 384,
	0, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 526, 523, 620, 0, 583, 584, 0, 0, 450,
	451, 316, 323, 469, 325, 287, 373, 318, 435, 332,
	0, 462, 527, 463, 586, 589, 587, 588, 365, 328,
	329, 399, 333, 343, 387, 434, 371, 392, 285, 425,
	400, 347, 513, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	568, 567, 566, 565, 564, 563, 562, 561, 0, 0,
	510, 412, 297, 259, 293, 294, 301, 609, 606, 416,
	610, 0, 267, 490, 341, 0, 382, 315, 555, 556,
	0, 0, 215, 216, 217, 218, 219, 220, 221, 222,
	260, 223, 224, 225, 226, 227, 228, 229, 232, 233,
	234, 235, 236, 237, 238, 239, 558, 230, 231, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 0, 0, 0, 0, 261, 262, 263,
	264, 0, 0, 255, 256, 257, 258, 0, 0, 0,
	441, 442, 443, 465, 0, 427, 489, 607, 0, 0,
	0, 0, 0, 0, 0, 539, 551, 585, 0, 595,
	596, 598, 600, 599, 602, 0, 613, 480, 481, 614,
	591, 370, 0, 495, 528, 517, 601, 483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 0,
	0, 340, 532, 514, 524, 515, 0, 500, 501, 502,
	509, 320, 503, 504, 505, 475, 506, 476, 507, 508,
	0, 531, 482, 401, 354, 549, 548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 204, 0, 0, 2373, 0,
	0, 0, 283, 205, 477, 597, 479, 478, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	406, 423, 284, 397, 436, 289, 404, 279, 369, 393,
	0, 0, 275, 421, 403, 351, 330, 331, 274, 0,
	388, 308, 322, 305, 367, 0, 420, 448, 304, 439,
	0, 431, 277, 0, 430, 366, 417, 422, 352, 346,
	276, 419, 350, 345, 334, 312, 464, 335, 336, 326,
	378, 344, 379, 327, 356, 355, 357, 0, 0, 0,
	0, 0, 459, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 590, 0, 0, 594,
	0, 433, 0, 0, 0, 0, 0, 0, 405, 0,
	0, 337, 0, 0, 0, 449, 0, 391, 372, 616,
	0, 0, 389, 342, 418, 380, 424, 407, 432, 385,
	381, 268, 408, 307, 353, 280, 282, 302, 309, 311,
	313, 314, 362, 363, 375, 396, 409, 410, 411, 306,
	290, 390, 291, 324, 292, 269, 298, 296, 299, 398,
	300, 271, 376, 415, 0, 319, 386, 349, 272, 348,
	377, 414, 413, 281, 440, 446, 447, 536, 0, 452,
	617, 618, 619, 461, 466, 467, 468, 470, 471, 472,
	473, 537, 554, 521, 491, 454, 545, 488, 492, 493,
	557, 0, 0, 0, 445, 338, 339, 0, 317, 265,
	266, 612, 303, 368, 559, 592, 593, 484, 0, 546,
	485, 494, 295, 518, 530, 529, 364, 444, 0, 541,
	544, 474, 611, 0, 538, 553, 615, 552, 608, 374,
	0, 395, 550, 497, 0, 542, 516, 0, 543, 512,
	547, 0, 486, 0, 402, 426, 438, 455, 458, 487,
	572, 573, 574, 270, 457, 576, 577, 578, 579, 580,
	581, 582, 575, 429, 519, 496, 522, 437, 499, 498,
	0, 0, 533, 453, 534, 535, 358, 359, 360, 361,
	321, 560, 288, 456, 384, 0, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 526, 523, 620, 0,
	583, 584, 0, 0, 450, 451, 316, 323, 469, 325,
	287, 373, 318, 435, 332, 0, 462, 527, 463, 586,
	589, 587, 588, 365, 328, 329, 399, 333, 343, 387,
	434, 371, 392, 285, 425, 400, 347, 513, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 568, 567, 566, 565, 564,
	563, 562, 561, 0, 0, 510, 412, 297, 259, 293,
	294, 301, 609, 606, 416, 610, 0, 267, 490, 341,
	0, 382, 315, 555, 556, 0, 0, 215, 216, 217,
	218, 219, 220, 221, 222, 260, 223, 224, 225, 226,
	227, 228, 229, 232, 233, 234, 235, 236, 237, 238,
	239, 558, 230, 231, 240, 241, 242, 243, 244, 245,
	246, 247, 248, 249, 250, 251, 252, 253, 0, 0,
	0, 0, 261, 262, 263, 264, 0, 0, 255, 256,
	257, 258, 0, 0, 0, 441, 442, 443, 465, 0,
	427, 489, 607, 0, 0, 0, 0, 0, 0, 0,
	539, 551, 585, 0, 595, 596, 598, 600, 599, 602,
	0, 613, 480, 481, 614, 591, 370, 0, 495, 528,
	517, 601, 483, 0, 0, 2720, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 0, 340, 532, 514, 524,
	515, 0, 500, 501, 502, 509, 320, 503, 504, 505,
	475, 506, 476, 507, 508, 0, 531, 482, 401, 354,
	549, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 0, 0, 0, 0, 0, 0, 283, 205, 477,
	597, 479, 478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 406, 423, 284, 397, 436,
	289, 404, 279, 369, 393, 0, 0, 275, 421, 403,
	351, 330, 331, 274, 0, 388, 308, 322, 305, 367,
	0, 420, 448, 304, 439, 0, 431, 277, 0, 430,
	366, 417, 422, 352, 346, 276, 419, 350, 345, 334,
	312, 464, 335, 336, 326, 378, 344, 379, 327, 356,
	355, 357, 0, 0, 0, 0, 0, 459, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 590, 0, 0, 594, 0, 433, 0, 0, 0,
	0, 0, 0, 405, 0, 0, 337, 0, 0, 0,
	449, 0, 391, 372, 616, 0, 0, 389, 342, 418,
	380, 424, 407, 432, 385, 381, 268, 408, 307, 353,
	280, 282, 302, 309, 311, 313, 314, 362, 363, 375,
	396, 409, 410, 411, 306, 290, 390, 291, 324, 292,
	269, 298, 296, 299, 398, 300, 271, 376, 415, 0,
	319, 386, 349, 272, 348, 377, 414, 413, 281, 440,
	446, 447, 536, 0, 452, 617, 618, 619, 461, 466,
	467, 468, 470, 471, 472, 473, 537, 554, 521, 491,
	454, 545, 488, 492, 493, 557, 0, 0, 0, 445,
	338, 339, 0, 317, 265, 266, 612, 303, 368, 559,
	592, 593, 484, 0, 546, 485, 494, 295, 518, 530,
	529, 364, 444, 0, 541, 544, 474, 611, 0, 538,
	553, 615, 552, 608, 374, 0, 395, 550, 497, 0,
	542, 516, 0, 543, 512, 547, 0, 486, 0, 402,
	426, 438, 455, 458, 487, 572, 573, 574, 270, 457,
	576, 577, 578, 579, 580, 581, 582, 575, 429, 519,
	496, 522, 437, 499, 498, 0, 0, 533, 453, 534,
	535, 358, 359, 360, 361, 321, 560, 288, 456, 384,
	0, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 526, 523, 620, 0, 583, 584, 0, 0, 450,
	451, 316, 323, 469, 325, 287, 373, 318, 435, 332,
	0, 462, 527, 463, 586, 589, 587, 588, 365, 328,
	329, 399, 333, 343, 387, 434, 371, 392, 285, 425,
	400, 347, 513, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	568, 567, 566, 565, 564, 563, 562, 561, 0, 0,
	510, 412, 297, 259, 293, 294, 301, 609, 606, 416,
	610, 0, 267, 490, 341, 0, 382, 315, 555, 556,
	0, 0, 215, 216, 217, 218, 219, 220, 221, 222,
	260, 223, 224, 225, 226, 227, 228, 229, 232, 233,
	234, 235, 236, 237, 238, 239, 558, 230, 231, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 0, 0, 0, 0, 261, 262, 263,
	264, 0, 0, 255, 256, 257, 258, 0, 0, 0,
	441, 442, 443, 465, 0, 427, 489, 607, 0, 0,
	0, 0, 0, 0, 0, 539, 551, 585, 0, 595,
	596, 598, 600, 599, 602, 0, 613, 480, 481, 614,
	591, 370, 0, 495, 528, 517, 601, 483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 0,
	0, 340, 532, 514, 524, 515, 0, 500, 501, 502,
	509, 320, 503, 504, 505, 475, 506, 476, 507, 508,
	0, 531, 482, 401, 354, 549, 548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 204, 0, 0, 0, 0,
	0, 0, 283, 205, 477, 597, 479, 478, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2075, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	406, 423, 284, 397, 436, 289, 404, 279, 369, 393,
	0, 0, 275, 421, 403, 351, 330, 331, 274, 0,
	388, 308, 322, 305, 367, 0, 420, 448, 304, 439,
	0, 431, 277, 0, 430, 366, 417, 422, 352, 346,
	276, 419, 350, 345, 334, 312, 464, 335, 336, 326,
	378, 344, 379, 327, 356, 355, 357, 0, 0, 0,
	0, 0, 459, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 590, 0, 0, 594,
	0, 433, 0, 0, 0, 0, 0, 0, 405, 0,
	0, 337, 0, 0, 0, 449, 0, 391, 372, 616,
	0, 0, 389, 342, 418, 380, 424, 407, 432, 385,
	381, 268, 408, 307, 353, 280, 282, 302, 309, 311,
	313, 314, 362, 363, 375, 396, 409, 410, 411, 306,
	290, 390, 291, 324, 292, 269, 298, 296, 299, 398,
	300, 271, 376, 415, 0, 319, 386, 349, 272, 348,
	377, 414, 413, 281, 440, 446, 447, 536, 0, 452,
	617, 618, 619, 461, 466, 467, 468, 470, 471, 472,
	473, 537, 554, 521, 491, 454, 545, 488, 492, 493,
	557, 0, 0, 0, 445, 338, 339, 0, 317, 265,
	266, 612, 303, 368, 559, 592, 593, 484, 0, 546,
	485, 494, 295, 518, 530, 529, 364, 444, 0, 541,
	544, 474, 611, 0, 538, 553, 615, 552, 608, 374,
	0, 395, 550, 497, 0, 542, 516, 0, 543, 512,
	547, 0, 486, 0, 402, 426, 438, 455, 458, 487,
	572, 573, 574, 270, 457, 576, 577, 578, 579, 580,
	581, 582, 575, 429, 519, 496, 522, 437, 499, 498,
	0, 0, 533, 453, 534, 535, 358, 359, 360, 361,
	321, 560, 288, 456, 384, 0, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 526, 523, 620, 0,
	583, 584, 0, 0, 450, 451, 316, 323, 469, 325,
	287, 373, 318, 435, 332, 0, 462, 527, 463, 586,
	589, 587, 588, 365, 328, 329, 399, 333, 343, 387,
	434, 371, 392, 285, 425, 400, 347, 513, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 568, 567, 566, 565, 564,
	563, 562, 561, 0, 0, 510, 412, 297, 259, 293,
	294, 301, 609, 606, 416, 610, 0, 267, 490, 341,
	0, 382, 315, 555, 556, 0, 0, 215, 216, 217,
	218, 219, 220, 221, 222, 260, 223, 224, 225, 226,
	227, 228, 229, 232, 233, 234, 235, 236, 237, 238,
	239, 558, 230, 231, 240, 241, 242, 243, 244, 245,
	246, 247, 248, 249, 250, 251, 252, 253, 0, 0,
	0, 0, 261, 262, 263, 264, 0, 0, 255, 256,
	257, 258, 0, 0, 0, 441, 442, 443, 465, 0,
	427, 489, 607, 0, 0, 0, 0, 0, 0, 0,
	539, 551, 585, 0, 595, 596, 598, 600, 599, 602,
	0, 613, 480, 481, 614, 591, 370, 0, 495, 528,
	517, 601, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 0, 340, 532, 514, 524,
	515, 0, 500, 501, 502, 509, 320, 503, 504, 505,
	475, 506, 476, 507, 508, 0, 531, 482, 401, 354,
	549, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 0, 0, 2489, 0, 0, 0, 283, 205, 477,
	597, 479, 478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 406, 423, 284, 397, 436,
	289, 404, 279, 369, 393, 0, 0, 275, 421, 403,
	351, 330, 331, 274, 0, 388, 308, 322, 305, 367,
	0, 420, 448, 304, 439, 0, 431, 277, 0, 430,
	366, 417, 422, 352, 346, 276, 419, 350, 345, 334,
	312, 464, 335, 336, 326, 378, 344, 379, 327, 356,
	355, 357, 0, 0, 0, 0, 0, 459, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 590, 0, 0, 594, 0, 433, 0, 0, 0,
	0, 0, 0, 405, 0, 0, 337, 0, 0, 0,
	449, 0, 391, 372, 616, 0, 0, 389, 342, 418,
	380, 424, 407, 432, 385, 381, 268, 408, 307, 353,
	280, 282, 302, 309, 311, 313, 314, 362, 363, 375,
	396, 409, 410, 411, 306, 290, 390, 291, 324, 292,
	269, 298, 296, 299, 398, 300, 271, 376, 415, 0,
	319, 386, 349, 272, 348, 377, 414, 413, 281, 440,
	446, 447, 536, 0, 452, 617, 618, 619, 461, 466,
	467, 468, 470, 471, 472, 473, 537, 554, 521, 491,
	454, 545, 488, 492, 493, 557, 0, 0, 0, 445,
	338, 339, 0, 317, 265, 266, 612, 303, 368, 559,
	592, 593, 484, 0, 546, 485, 494, 295, 518, 530,
	529, 364, 444, 0, 541, 544, 474, 611, 0, 538,
	553, 615, 552, 608, 374, 0, 395, 550, 497, 0,
	542, 516, 0, 543, 512, 547, 0, 486, 0, 402,
	426, 438, 455, 458, 487, 572, 573, 574, 270, 457,
	576, 577, 578, 579, 580, 581, 582, 575, 429, 519,
	496, 522, 437, 499, 498, 0, 0, 533, 453, 534,
	535, 358, 359, 360, 361, 321, 560, 288, 456, 384,
	0, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 526, 523, 620, 0, 583, 584, 0, 0, 450,
	451, 316, 323, 469, 325, 287, 373, 318, 435, 332,
	0, 462, 527, 463, 586, 589, 587, 588, 365, 328,
	329, 399, 333, 343, 387, 434, 371, 392, 285, 425,
	400, 347, 513, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	568, 567, 566, 565, 564, 563, 562, 561, 0, 0,
	510, 412, 297, 259, 293, 294, 301, 609, 606, 416,
	610, 0, 267, 490, 341, 0, 382, 315, 555, 556,
	0, 0, 215, 216, 217, 218, 219, 220, 221, 222,
	260, 223, 224, 225, 226, 227, 228, 229, 232, 233,
	234, 235, 236, 237, 238, 239, 558, 230, 231, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 0, 0, 0, 0, 261, 262, 263,
	264, 0, 0, 255, 256, 257, 258, 0, 0, 0,
	441, 442, 443, 465, 0, 427, 489, 607, 0, 0,
	0, 0, 0, 0, 0, 539, 551, 585, 0, 595,
	596, 598, 600, 599, 602, 0, 613, 480, 481, 614,
	591, 370, 0, 495, 528, 517, 601, 483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 0,
	0, 340, 532, 514, 524, 515, 0, 500, 501, 502,
	509, 320, 503, 504, 505, 475, 506, 476, 507, 508,
	0, 531, 482, 401, 354, 549, 548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 204, 0, 0, 0, 0,
	0, 0, 283, 205, 477, 597, 479, 478, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2450, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	406, 423, 284, 397, 436, 289, 404, 279, 369, 393,
	0, 0, 275, 421, 403, 351, 330, 331, 274, 0,
	388, 308, 322, 305, 367, 0, 420, 448, 304, 439,
	0, 431, 277, 0, 430, 366, 417, 422, 352, 346,
	276, 419, 350, 345, 334, 312, 464, 335, 336, 326,
	378, 344, 379, 327, 356, 355, 357, 0, 0, 0,
	0, 0, 459, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 590, 0, 0, 594,
	0, 433, 0, 0, 0, 0, 0, 0, 405, 0,
	0, 337, 0, 0, 0, 449, 0, 391, 372, 616,
	0, 0, 389, 342, 418, 380, 424, 407, 432, 385,
	381, 268, 408, 307, 353, 280, 282, 302, 309, 311,
	313, 314, 362, 363, 375, 396, 409, 410, 411, 306,
	290, 390, 291, 324, 292, 269, 298, 296, 299, 398,
	300, 271, 376, 415, 0, 319, 386, 349, 272, 348,
	377, 414, 413, 281, 440, 446, 447, 536, 0, 452,
	617, 618, 619, 461, 466, 467, 468, 470, 471, 472,
	473, 537, 554, 521, 491, 454, 545, 488, 492, 493,
	557, 0, 0, 0, 445, 338, 339, 0, 317, 265,
	266, 612, 303, 368, 559, 592, 593, 484, 0, 546,
	485, 494, 295, 518, 530, 529, 364, 444, 0, 541,
	544, 474, 611, 0, 538, 553, 615, 552, 608, 374,
	0, 395, 550, 497, 0, 542, 516, 0, 543, 512,
	547, 0, 486, 0, 402, 426, 438, 455, 458, 487,
	572, 573, 574, 270, 457, 576, 577, 578, 579, 580,
	581, 582, 575, 429, 519, 496, 522, 437, 499, 498,
	0, 0, 533, 453, 534, 535, 358, 359, 360, 361,
	321, 560, 288, 456, 384, 0, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 526, 523, 620, 0,
	583, 584, 0, 0, 450, 451, 316, 323, 469, 325,
	287, 373, 318, 435, 332, 0, 462, 527, 463, 586,
	589, 587, 588, 365, 328, 329, 399, 333, 343, 387,
	434, 371, 392, 285, 425, 400, 347, 513, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 568, 567, 566, 565, 564,
	563, 562, 561, 0, 0, 510, 412, 297, 259, 293,
	294, 301, 609, 606, 416, 610, 0, 267, 490, 341,
	0, 382, 315, 555, 556, 0, 0, 215, 216, 217,
	218, 219, 220, 221, 222, 260, 223, 224, 225, 226,
	227, 228, 229, 232, 233, 234, 235, 236, 237, 238,
	239, 558, 230, 231, 240, 241, 242, 243, 244, 245,
	246, 247, 248, 249, 250, 251, 252, 253, 0, 0,
	0, 0, 261, 262, 263, 264, 0, 0, 255, 256,
	257, 258, 0, 0, 0, 441, 442, 443, 465, 0,
	427, 489, 607, 0, 0, 0, 0, 0, 0, 0,
	539, 551, 585, 0, 595, 596, 598, 600, 599, 602,
	0, 613, 480, 481, 614, 591, 370, 0, 495, 528,
	517, 601, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 0, 340, 532, 514, 524,
	515, 0, 500, 501, 502, 509, 320, 503, 504, 505,
	475, 506, 476, 507, 508, 0, 531, 482, 401, 354,
	549, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 0, 0, 2448, 0, 0, 0, 283, 205, 477,
	597, 479, 478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 406, 423, 284, 397, 436,
	289, 404, 279, 369, 393, 0, 0, 275, 421, 403,
	351, 330, 331, 274, 0, 388, 308, 322, 305, 367,
	0, 420, 448, 304, 439, 0, 431, 277, 0, 430,
	366, 417, 422, 352, 346, 276, 419, 350, 345, 334,
	312, 464, 335, 336, 326, 378, 344, 379, 327, 356,
	355, 357, 0, 0, 0, 0, 0, 459, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 590, 0, 0, 594, 0, 433, 0, 0, 0,
	0, 0, 0, 405, 0, 0, 337, 0, 0, 0,
	449, 0, 391, 372, 616, 0, 0, 389, 342, 418,
	380, 424, 407, 432, 385, 381, 268, 408, 307, 353,
	280, 282, 302, 309, 311, 313, 314, 362, 363, 375,
	396, 409, 410, 411, 306, 290, 390, 291, 324, 292,
	269, 298, 296, 299, 398, 300, 271, 376, 415, 0,
	319, 386, 349, 272, 348, 377, 414, 413, 281, 440,
	446, 447, 536, 0, 452, 617, 618, 619, 461, 466,
	467, 468, 470, 471, 472, 473, 537, 554, 521, 491,
	454, 545, 488, 492, 493, 557, 0, 0, 0, 445,
	338, 339, 0, 317, 265, 266, 612, 303, 368, 559,
	592, 593, 484, 0, 546, 485, 494, 295, 518, 530,
	529, 364, 444, 0, 541, 544, 474, 611, 0, 538,
	553, 615, 552, 608, 374, 0, 395, 550, 497, 0,
	542, 516, 0, 543, 512, 547, 0, 486, 0, 402,
	426, 438, 455, 458, 487, 572, 573, 574, 270, 457,
	576, 577, 578, 579, 580, 581, 582, 575, 429, 519,
	496, 522, 437, 499, 498, 0, 0, 533, 453, 534,
	535, 358, 359, 360, 361, 321, 560, 288, 456, 384,
	0, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 526, 523, 620, 0, 583, 584, 0, 0, 450,
	451, 316, 323, 469, 325, 287, 373, 318, 435, 332,
	0, 462, 527, 463, 586, 589, 587, 588, 365, 328,
	329, 399, 333, 343, 387, 434, 371, 392, 285, 425,
	400, 347, 513, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	568, 567, 566, 565, 564, 563, 562, 561, 0, 0,
	510, 412, 297, 259, 293, 294, 301, 609, 606, 416,
	610, 0, 267, 490, 341, 0, 382, 315, 555, 556,
	0, 0, 215, 216, 217, 218, 219, 220, 221, 222,
	260, 223, 224, 225, 226, 227, 228, 229, 232, 233,
	234, 235, 236, 237, 238, 239, 558, 230, 231, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 0, 0, 0, 0, 261, 262, 263,
	264, 0, 0, 255, 256, 257, 258, 0, 0, 0,
	441, 442, 443, 465, 0, 427, 489, 607, 0, 0,
	0, 0, 0, 0, 0, 539, 551, 585, 0, 595,
	596, 598, 600, 599, 602, 2232, 613, 480, 481, 614,
	591, 370, 0, 495, 528, 517, 601, 483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 0,
	0, 340, 532, 514, 524, 515, 0, 500, 501, 502,
	509, 320, 503, 504, 505, 475, 506, 476, 507, 508,
	0, 531, 482, 401, 354, 549, 548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 204, 0, 0, 0, 0,
	0, 0, 283, 205, 477, 597, 479, 478, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	406, 423, 284, 397, 436, 289, 404, 279, 369, 393,
	0, 0, 275, 421, 403, 351, 330, 331, 274, 0,
	388, 308, 322, 305, 367, 0, 420, 448, 304, 439,
	0, 431, 277, 0, 430, 366, 417, 422, 352, 346,
	276, 419, 350, 345, 334, 312, 464, 335, 336, 326,
	378, 344, 379, 327, 356, 355, 357, 0, 0, 0,
	0, 0, 459, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 590, 0, 0, 594,
	0, 433, 0, 0, 0, 0, 0, 0, 405, 0,
	0, 337, 0, 0, 0, 449, 0, 391, 372, 616,
	0, 0, 389, 342, 418, 380, 424, 407, 432, 385,
	381, 268, 408, 307, 353, 280, 282, 302, 309, 311,
	313, 314, 362, 363, 375, 396, 409, 410, 411, 306,
	290, 390, 291, 324, 292, 269, 298, 296, 299, 398,
	300, 271, 376, 415, 0, 319, 386, 349, 272, 348,
	377, 414, 413, 281, 440, 446, 447, 536, 0, 452,
	617, 618, 619, 461, 466, 467, 468, 470, 471, 472,
	473, 537, 554, 521, 491, 454, 545, 488, 492, 493,
	557, 0, 0, 0, 445, 338, 339, 0, 317, 265,
	266, 612, 303, 368, 559, 592, 593, 484, 0, 546,
	485, 494, 295, 518, 530, 529, 364, 444, 0, 541,
	544, 474, 611, 0, 538, 553, 615, 552, 608, 374,
	0, 395, 550, 497, 0, 542, 516, 0, 543, 512,
	547, 0, 486, 0, 402, 426, 438, 455, 458, 487,
	572, 573, 574, 270, 457, 576, 577, 578, 579, 580,
	581, 582, 575, 429, 519, 496, 522, 437, 499, 498,
	0, 0, 533, 453, 534, 535, 358, 359, 360, 361,
	321, 560, 288, 456, 384, 0, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 526, 523, 620, 0,
	583, 584, 0, 0, 450, 451, 316, 323, 469, 325,
	287, 373, 318, 435, 332, 0, 462, 527, 463, 586,
	589, 587, 588, 365, 328, 329, 399, 333, 343, 387,
	434, 371, 392, 285, 425, 400, 347, 513, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 568, 567, 566, 565, 564,
	563, 562, 561, 0, 0, 510, 412, 297, 259, 293,
	294, 301, 609, 606, 416, 610, 0, 267, 490, 341,
	0, 382, 315, 555, 556, 0, 0, 215, 216, 217,
	218, 219, 220, 221, 222, 260, 223, 224, 225, 226,
	227, 228, 229, 232, 233, 234, 235, 236, 237, 238,
	239, 558, 230, 231, 240, 241, 242, 243, 244, 245,
	246, 247, 248, 249, 250, 251, 252, 253, 0, 0,
	0, 0, 261, 262, 263, 264, 0, 0, 255, 256,
	257, 258, 0, 0, 0, 441, 442, 443, 465, 0,
	427, 489, 607, 0, 0, 0, 0, 0, 0, 0,
	539, 551, 585, 0, 595, 596, 598, 600, 599, 602,
	0, 613, 480, 481, 614, 591, 370, 0, 495, 528,
	517, 601, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 0, 340, 532, 514, 524,
	515, 0, 500, 501, 502, 509, 320, 503, 504, 505,
	475, 506, 476, 507, 508, 0, 531, 482, 401, 354,
	549, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 0, 0, 0, 1796, 0, 0, 283, 205, 477,
	597, 479, 478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 406, 423, 284, 397, 436,
	289, 404, 279, 369, 393, 0, 0, 275, 421, 403,
	351, 330, 331, 274, 0, 388, 308, 322, 305, 367,
	0, 420, 448, 304, 439, 0, 431, 277, 0, 430,
	366, 417, 422, 352, 346, 276, 419, 350, 345, 334,
	312, 464, 335, 336, 326, 378, 344, 379, 327, 356,
	355, 357, 0, 0, 0, 0, 0, 459, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 590, 0, 0, 594, 0, 433, 0, 0, 0,
	0, 0, 0, 405, 0, 0, 337, 0, 0, 0,
	449, 0, 391, 372, 616, 0, 0, 389, 342, 418,
	380, 424, 407, 432, 385, 381, 268, 408, 307, 353,
	280, 282, 302, 309, 311, 313, 314, 362, 363, 375,
	396, 409, 410, 411, 306, 290, 390, 291, 324, 292,
	269, 298, 296, 299, 398, 300, 271, 376, 415, 0,
	319, 386, 349, 272, 348, 377, 414, 413, 281, 440,
	446, 447, 536, 0, 452, 617, 618, 619, 461, 466,
	467, 468, 470, 471, 472, 473, 537, 554, 521, 491,
	454, 545, 488, 492, 493, 557, 0, 0, 0, 445,
	338, 339, 0, 317, 265, 266, 612, 303, 368, 559,
	592, 593, 484, 0, 546, 485, 494, 295, 518, 530,
	529, 364, 444, 0, 541, 544, 474, 611, 0, 538,
	553, 615, 552, 608, 374, 0, 395, 550, 497, 0,
	542, 516, 0, 543, 512, 547, 0, 486, 0, 402,
	426, 438, 455, 458, 487, 572, 573, 574, 270, 457,
	576, 577, 578, 579, 580, 581, 582, 575, 429, 519,
	496, 522, 437, 499, 498, 0, 0, 533, 453, 534,
	535, 358, 359, 360, 361, 321, 560, 288, 456, 384,
	0, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 526, 523, 620, 0, 583, 584, 0, 0, 450,
	451, 316, 323, 469, 325, 287, 373, 318, 435, 332,
	0, 462, 527, 463, 586, 589, 587, 588, 365, 328,
	329, 399, 333, 343, 387, 434, 371, 392, 285, 425,
	400, 347, 513, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	568, 567, 566, 565, 564, 563, 562, 561, 0, 0,
	510, 412, 297, 259, 293, 294, 301, 609, 606, 416,
	610, 0, 267, 490, 341, 0, 382, 315, 555, 556,
	0, 0, 215, 216, 217, 218, 219, 220, 221, 222,
	260, 223, 224, 225, 226, 227, 228, 229, 232, 233,
	234, 235, 236, 237, 238, 239, 558, 230, 231, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 0, 0, 0, 0, 261, 262, 263,
	264, 0, 0, 255, 256, 257, 258, 0, 0, 0,
	441, 442, 443, 465, 0, 427, 489, 607, 0, 0,
	0, 0, 0, 0, 0, 539, 551, 585, 0, 595,
	596, 598, 600, 599, 602, 0, 613, 480, 481, 614,
	591, 370, 0, 495, 528, 517, 601, 483, 0, 1923,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 0,
	0, 340, 532, 514, 524, 515, 0, 500, 501, 502,
	509, 320, 503, 504, 505, 475, 506, 476, 507, 508,
	0, 531, 482, 401, 354, 549, 548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 204, 0, 0, 0, 0,
	0, 0, 283, 205, 477, 597, 479, 478, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	406, 423, 284, 397, 436, 289, 404, 279, 369, 393,
	0, 0, 275, 421, 403, 351, 330, 331, 274, 0,
	388, 308, 322, 305, 367, 0, 420, 448, 304, 439,
	0, 431, 277, 0, 430, 366, 417, 422, 352, 346,
	276, 419, 350, 345, 334, 312, 464, 335, 336, 326,
	378, 344, 379, 327, 356, 355, 357, 0, 0, 0,
	0, 0, 459, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 590, 0, 0, 594,
	0, 433, 0, 0, 0, 0, 0, 0, 405, 0,
	0, 337, 0, 0, 0, 449, 0, 391, 372, 616,
	0, 0, 389, 342, 418, 380, 424, 407, 432, 385,
	381, 268, 408, 307, 353, 280, 282, 302, 309, 311,
	313, 314, 362, 363, 375, 396, 409, 410, 411, 306,
	290, 390, 291, 324, 292, 269, 298, 296, 299, 398,
	300, 271, 376, 415, 0, 319, 386, 349, 272, 348,
	377, 414, 413, 281, 440, 446, 447, 536, 0, 452,
	617, 618, 619, 461, 466, 467, 468, 470, 471, 472,
	473, 537, 554, 521, 491, 454, 545, 488, 492, 493,
	557, 0, 0, 0, 445, 338, 339, 0, 317, 265,
	266, 612, 303, 368, 559, 592, 593, 484, 0, 546,
	485, 494, 295, 518, 530, 529, 364, 444, 0, 541,
	544, 474, 611, 0, 538, 553, 615, 552, 608, 374,
	0, 395, 550, 497, 0, 542, 516, 0, 543, 512,
	547, 0, 486, 0, 402, 426, 438, 455, 458, 487,
	572, 573, 574, 270, 457, 576, 577, 578, 579, 580,
	581, 582, 575, 429, 519, 496, 522, 437, 499, 498,
	0, 0, 533, 453, 534, 535, 358, 359, 360, 361,
	321, 560, 288, 456, 384, 0, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 526, 523, 620, 0,
	583, 584, 0, 0, 450, 451, 316, 323, 469, 325,
	287, 373, 318, 435, 332, 0, 462, 527, 463, 586,
	589, 587, 588, 365, 328, 329, 399, 333, 343, 387,
	434, 371, 392, 285, 425, 400, 347, 513, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 568, 567, 566, 565, 564,
	563, 562, 561, 0, 0, 510, 412, 297, 259, 293,
	294, 301, 609, 606, 416, 610, 0, 267, 490, 341,
	0, 382, 315, 555, 556, 0, 0, 215, 216, 217,
	218, 219, 220, 221, 222, 260, 223, 224, 225, 226,
	227, 228, 229, 232, 233, 234, 235, 236, 237, 238,
	239, 558, 230, 231, 240, 241, 242, 243, 244, 245,
	246, 247, 248, 249, 250, 251, 252, 253, 0, 0,
	0, 0, 261, 262, 263, 264, 0, 0, 255, 256,
	257, 258, 0, 0, 0, 441, 442, 443, 465, 0,
	427, 489, 607, 0, 0, 0, 0, 0, 0, 0,
	539, 551, 585, 0, 595, 596, 598, 600, 599, 602,
	0, 613, 480, 481, 614, 591, 370, 0, 495, 528,
	517, 601, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 0, 340, 532, 514, 524,
	515, 0, 500, 501, 502, 509, 320, 503, 504, 505,
	475, 506, 476, 507, 508, 0, 531, 482, 401, 354,
	549, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 0, 0, 1452, 0, 0, 0, 283, 205, 477,
	597, 479, 478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 406, 423, 284, 397, 436,
	289, 404, 279, 369, 393, 0, 0, 275, 421, 403,
	351, 330, 331, 274, 0, 388, 308, 322, 305, 367,
	0, 420, 448, 304, 439, 0, 431, 277, 0, 430,
	366, 417, 422, 352, 346, 276, 419, 350, 345, 334,
	312, 464, 335, 336, 326, 378, 344, 379, 327, 356,
	355, 357, 0, 0, 0, 0, 0, 459, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 590, 0, 0, 594, 0, 433, 0, 0, 0,
	0, 0, 0, 405, 0, 0, 337, 0, 0, 0,
	449, 0, 391, 372, 616, 0, 0, 389, 342, 418,
	380, 424, 407, 432, 1829, 381, 268, 408, 307, 353,
	280, 282, 302, 309, 311, 313, 314, 362, 363, 375,
	396, 409, 410, 411, 306, 290, 390, 291, 324, 292,
	269, 298, 296, 299, 398, 300, 271, 376, 415, 0,
	319, 386, 349, 272, 348, 377, 414, 413, 281, 440,
	446, 447, 536, 0, 452, 617, 618, 619, 461, 466,
	467, 468, 470, 471, 472, 473, 537, 554, 521, 491,
	454, 545, 488, 492, 493, 557, 0, 0, 0, 445,
	338, 339, 0, 317, 265, 266, 612, 303, 368, 559,
	592, 593, 484, 0, 546, 485, 494, 295, 518, 530,
	529, 364, 444, 0, 541, 544, 474, 611, 0, 538,
	553, 615, 552, 608, 374, 0, 395, 550, 497, 0,
	542, 516, 0, 543, 512, 547, 0, 486, 0, 402,
	426, 438, 455, 458, 487, 572, 573, 574, 270, 457,
	576, 577, 578, 579, 580, 581, 582, 575, 429, 519,
	496, 522, 437, 499, 498, 0, 0, 533, 453, 534,
	535, 358, 359, 360, 361, 321, 560, 288, 456, 384,
	0, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 526, 523, 620, 0, 583, 584, 0, 0, 450,
	451, 316, 323, 469, 325, 287, 373, 318, 435, 332,
	0, 462, 527, 463, 586, 589, 587, 588, 365, 328,
	329, 399, 333, 343, 387, 434, 371, 392, 285, 425,
	400, 347, 513, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	568, 567, 566, 565, 564, 563, 562, 561, 0, 0,
	510, 412, 297, 259, 293, 294, 301, 609, 606, 416,
	610, 0, 267, 490, 341, 0, 382, 315, 555, 556,
	0, 0, 215, 216, 217, 218, 219, 220, 221, 222,
	260, 223, 224, 225, 226, 227, 228, 229, 232, 233,
	234, 235, 236, 237, 238, 239, 558, 230, 231, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 0, 0, 0, 0, 261, 262, 263,
	264, 0, 0, 255, 256, 257, 258, 0, 0, 0,
	441, 442, 443, 465, 0, 427, 489, 607, 0, 0,
	0, 0, 0, 0, 0, 539, 551, 585, 0, 595,
	596, 598, 600, 599, 602, 0, 613, 480, 481, 614,
	591, 370, 0, 495, 528, 517, 601, 483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 0,
	0, 340, 532, 514, 524, 515, 0, 500, 501, 502,
	509, 320, 503, 504, 505, 475, 506, 476, 507, 508,
	0, 531, 482, 401, 354, 549, 548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 204, 0, 0, 0, 0,
	0, 0, 283, 205, 477, 597, 479, 478, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	406, 423, 284, 397, 436, 289, 404, 279, 369, 393,
	0, 0, 275, 421, 403, 351, 330, 331, 274, 0,
	388, 308, 322, 305, 367, 0, 420, 448, 304, 439,
	0, 431, 277, 0, 430, 366, 417, 422, 352, 346,
	276, 419, 350, 345, 334, 312, 464, 335, 336, 326,
	378, 344, 379, 327, 356, 355, 357, 0, 0, 0,
	0, 0, 459, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 590, 0, 0, 594,
	0, 433, 0, 0, 1482, 0, 0, 0, 405, 0,
	0, 337, 0, 0, 0, 449, 0, 391, 372, 616,
	0, 0, 389, 342, 418, 380, 424, 407, 432, 385,
	381, 268, 408, 307, 353, 280, 282, 302, 309, 311,
	313, 314, 362, 363, 375, 396, 409, 410, 411, 306,
	290, 390, 291, 324, 292, 269, 298, 296, 299, 398,
	300, 271, 376, 415, 0, 319, 386, 349, 272, 348,
	377, 414, 413, 281, 440, 446, 447, 536, 0, 452,
	617, 618, 619, 461, 466, 467, 468, 470, 471, 472,
	473, 537, 554, 521, 491, 454, 545, 488, 492, 493,
	557, 0, 0, 0, 445, 338, 339, 0, 317, 265,
	266, 612, 303, 368, 559, 592, 593, 484, 0, 546,
	485, 494, 295, 518, 530, 529, 364, 444, 0, 541,
	544, 474, 611, 0, 538, 553, 615, 552, 608, 374,
	0, 395, 550, 497, 0, 542, 516, 0, 543, 512,
	547, 0, 486, 0, 402, 426, 438, 455, 458, 487,
	572, 573, 574, 270, 457, 576, 577, 578, 579, 580,
	581, 582, 575, 429, 519, 496, 522, 437, 499, 498,
	0, 0, 533, 453, 534, 535, 358, 359, 360, 361,
	321, 560, 288, 456, 384, 0, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 526, 523, 620, 0,
	583, 584, 0, 0, 450, 451, 316, 323, 469, 325,
	287, 373, 318, 435, 332, 0, 462, 527, 463, 586,
	589, 587, 588, 365, 328, 329, 399, 333, 343, 387,
	434, 371, 392, 285, 425, 400, 347, 513, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 568, 567, 566, 565, 564,
	563, 562, 561, 0, 0, 510, 412, 297, 259, 293,
	294, 301, 609, 606, 416, 610, 0, 267, 490, 341,
	0, 382, 315, 555, 556, 0, 0, 215, 216, 217,
	218, 219, 220, 221, 222, 260, 223, 224, 225, 226,
	227, 228, 229, 232, 233, 234, 235, 236, 237, 238,
	239, 558, 230, 231, 240, 241, 242, 243, 244, 245,
	246, 247, 248, 249, 250, 251, 252, 253, 0, 0,
	0, 0, 261, 262, 263, 264, 0, 0, 255, 256,
	257, 258, 0, 0, 0, 441, 442, 443, 465, 0,
	427, 489, 607, 0, 0, 0, 0, 0, 0, 0,
	539, 551, 585, 0, 595, 596, 598, 600, 599, 602,
	0, 613, 480, 481, 614, 591, 370, 0, 495, 528,
	517, 601, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 627, 310, 0, 0, 340, 532, 514, 524,
	515, 0, 500, 501, 502, 509, 320, 503, 504, 505,
	475, 506, 476, 507, 508, 0, 531, 482, 401, 354,
	549, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 0, 0, 0, 0, 0, 0, 283, 205, 477,
	597, 479, 478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 406, 423, 284, 397, 436,
	289, 404, 279, 369, 393, 0, 0, 275, 421, 403,
	351, 330, 331, 274, 0, 388, 308, 322, 305, 367,
	0, 420, 448, 304, 439, 0, 431, 277, 0, 430,
	366, 417, 422, 352, 346, 276, 419, 350, 345, 334,
	312, 464, 335, 336, 326, 378, 344, 379, 327, 356,
	355, 357, 0, 0, 0, 0, 0, 459, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 590, 0, 0, 594, 0, 433, 0, 0, 0,
	0, 0, 0, 405, 0, 0, 337, 0, 0, 0,
	449, 0, 391, 372, 616, 0, 0, 389, 342, 418,
	380, 424, 407, 432, 385, 381, 268, 408, 307, 353,
	280, 282, 302, 309, 311, 313, 314, 362, 363, 375,
	396, 409, 410, 411, 306, 290, 390, 291, 324, 292,
	269, 298, 296, 299, 398, 300, 271, 376, 415, 0,
	319, 386, 349, 272, 348, 377, 414, 413, 281, 440,
	446, 447, 536, 0, 452, 617, 618, 619, 461, 466,
	467, 468, 470, 471, 472, 473, 537, 554, 521, 491,
	454, 545, 488, 492, 493, 557, 0, 0, 0, 445,
	338, 339, 0, 317, 265, 266, 612, 303, 368, 559,
	592, 593, 484, 0, 546, 485, 494, 295, 518, 530,
	529, 364, 444, 0, 541, 544, 474, 611, 0, 538,
	553, 615, 552, 608, 374, 0, 395, 550, 497, 0,
	542, 516, 0, 543, 512, 547, 0, 486, 0, 402,
	426, 438, 455, 458, 487, 572, 573, 574, 270, 457,
	576, 577, 578, 579, 580, 581, 582, 575, 429, 519,
	496, 522, 437, 499, 498, 0, 0, 533, 453, 534,
	535, 358, 359, 360, 361, 321, 560, 288, 456, 384,
	0, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 526, 523, 620, 0, 583, 584, 0, 0, 450,
	451, 316, 323, 469, 325, 287, 373, 318, 435, 332,
	0, 462, 527, 463, 586, 589, 587, 588, 365, 328,
	329, 399, 333, 343, 387, 434, 371, 392, 285, 425,
	400, 347, 513, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	568, 567, 566, 565, 564, 563, 562, 561, 0, 0,
	510, 412, 297, 259, 293, 294, 301, 609, 606, 416,
	610, 0, 267, 490, 341, 0, 382, 315, 555, 556,
	0, 0, 215, 216, 217, 218, 219, 220, 221, 222,
	260, 223, 224, 225, 226, 227, 228, 229, 232, 233,
	234, 235, 236, 237, 238, 239, 558, 230, 231, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 0, 0, 0, 0, 261, 262, 263,
	264, 0, 0, 255, 256, 257, 258, 0, 0, 0,
	441, 442, 443, 465, 0, 427, 489, 607, 0, 0,
	0, 0, 0, 0, 0, 539, 551, 585, 0, 595,
	596, 598, 600, 599, 602, 0, 613, 480, 481, 614,
	591, 370, 0, 495, 528, 517, 601, 483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 0,
	0, 340, 532, 514, 524, 515, 0, 500, 501, 502,
	509, 320, 503, 504, 505, 475, 506, 476, 507, 508,
	0, 531, 482, 401, 354, 549, 548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 204, 0, 0, 0, 0,
	0, 0, 283, 205, 477, 597, 479, 478, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	406, 423, 284, 397, 436, 289, 404, 279, 369, 393,
	0, 0, 275, 421, 403, 351, 330, 331, 274, 0,
	388, 308, 322, 305, 367, 0, 420, 448, 304, 439,
	0, 431, 277, 0, 430, 366, 417, 422, 352, 346,
	276, 419, 350, 345, 334, 312, 464, 335, 336, 326,
	378, 344, 379, 327, 356, 355, 357, 0, 0, 0,
	0, 0, 459, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 590, 0, 637, 594,
	0, 433, 0, 0, 0, 0, 0, 0, 405, 0,
	0, 337, 0, 0, 0, 449, 0, 391, 372, 616,
	0, 0, 389, 342, 418, 380, 424, 407, 432, 385,
	381, 268, 408, 307, 353, 280, 282, 302, 309, 311,
	313, 314, 362, 363, 375, 396, 409, 410, 411, 306,
	290, 390, 291, 324, 292, 269, 298, 296, 299, 398,
	300, 271, 376, 415, 0, 319, 386, 349, 272, 348,
	377, 414, 413, 281, 440, 446, 447, 536, 0, 452,
	617, 618, 619, 461, 466, 467, 468, 470, 471, 472,
	473, 537, 554, 521, 491, 454, 545, 488, 492, 493,
	557, 0, 0, 0, 445, 338, 339, 0, 317, 265,
	266, 612, 303, 368, 559, 592, 593, 484, 0, 546,
	485, 494, 295, 518, 530, 529, 364, 444, 0, 541,
	544, 474, 611, 0, 538, 553, 615, 552, 608, 374,
	0, 395, 550, 497, 0, 542, 516, 0, 543, 512,
	547, 0, 486, 0, 402, 426, 438, 455, 458, 487,
	572, 573, 574, 270, 457, 576, 577, 578, 579, 580,
	581, 582, 575, 429, 519, 496, 522, 437, 499, 498,
	0, 0, 533, 453, 534, 535, 358, 359, 360, 361,
	321, 560, 288, 456, 384, 0, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 526, 523, 620, 0,
	583, 584, 0, 0, 450, 451, 316, 323, 469, 325,
	287, 373, 318, 435, 332, 0, 462, 527, 463, 586,
	589, 587, 588, 365, 328, 329, 399, 333, 343, 387,
	434, 371, 392, 285, 425, 400, 347, 513, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 568, 567, 566, 565, 564,
	563, 562, 561, 0, 0, 510, 412, 297, 259, 293,
	294, 301, 609, 606, 416, 610, 0, 267, 490, 341,
	0, 382, 315, 555, 556, 0, 0, 215, 216, 217,
	218, 219, 220, 221, 222, 260, 223, 224, 225, 226,
	227, 228, 229, 232, 233, 234, 235, 236, 237, 238,
	239, 558, 230, 231, 240, 241, 242, 243, 244, 245,
	246, 247, 248, 249, 250, 251, 252, 253, 0, 0,
	0, 0, 261, 262, 263, 264, 0, 0, 255, 256,
	257, 258, 0, 0, 0, 441, 442, 443, 465, 0,
	427, 489, 607, 0, 0, 0, 0, 0, 0, 0,
	539, 551, 585, 0, 595, 596, 598, 600, 599, 602,
	0, 613, 480, 481, 614, 591, 370, 0, 495, 528,
	517, 601, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 0, 340, 532, 514, 524,
	515, 0, 500, 501, 502, 509, 320, 503, 504, 505,
	475, 506, 476, 507, 508, 0, 531, 482, 401, 354,
	549, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 0, 0, 0, 0, 0, 0, 283, 205, 477,
	597, 479, 478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 406, 423, 284, 397, 436,
	289, 404, 279, 369, 393, 0, 0, 275, 421, 403,
	351, 330, 331, 274, 0, 388, 308, 322, 305, 367,
	0, 420, 448, 304, 439, 0, 431, 277, 0, 430,
	366, 417, 422, 352, 346, 276, 419, 350, 345, 334,
	312, 464, 335, 336, 326, 378, 344, 379, 327, 356,
	355, 357, 0, 0, 0, 0, 0, 459, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 590, 0, 0, 594, 0, 433, 0, 0, 0,
	0, 0, 0, 405, 0, 0, 337, 0, 0, 0,
	449, 0, 391, 372, 616, 0, 0, 389, 342, 418,
	380, 424, 407, 432, 385, 381, 268, 408, 307, 353,
	280, 282, 302, 309, 311, 313, 314, 362, 363, 375,
	396, 409, 410, 411, 306, 290, 390, 291, 324, 292,
	269, 298, 296, 299, 398, 300, 271, 376, 415, 0,
	319, 386, 349, 272, 348, 377, 414, 413, 281, 440,
	446, 447, 536, 0, 452, 617, 618, 619, 461, 466,
	467, 468, 470, 471, 472, 473, 537, 554, 521, 491,
	454, 545, 488, 492, 493, 557, 0, 0, 0, 445,
	338, 339, 0, 317, 265, 266, 612, 303, 368, 559,
	592, 593, 484, 0, 546, 485, 494, 295, 518, 530,
	529, 364, 444, 0, 541, 544, 474, 611, 0, 538,
	553, 615, 552, 608, 374, 0, 395, 550, 497, 0,
	542, 516, 0, 543, 512, 547, 0, 486, 0, 402,
	426, 438, 455, 458, 487, 572, 573, 574, 270, 457,
	576, 577, 578, 579, 580, 581, 582, 575, 429, 519,
	496, 522, 437, 499, 498, 0, 0, 533, 453, 534,
	535, 358, 359, 360, 361, 321, 560, 288, 456, 384,
	0, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 526, 523, 620, 0, 583, 584, 0, 0, 450,
	451, 316, 323, 469, 325, 287, 373, 318, 435, 332,
	0, 462, 527, 463, 586, 589, 587, 588, 365, 328,
	329, 399, 333, 343, 387, 434, 371, 392, 285, 425,
	400, 347, 513, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	568, 567, 566, 565, 564, 563, 562, 561, 921, 0,
	510, 412, 297, 259, 293, 294, 301, 609, 606, 416,
	610, 0, 267, 490, 341, 0, 382, 315, 555, 556,
	0, 0, 215, 216, 217, 218, 219, 220, 221, 222,
	260, 223, 224, 225, 226, 227, 228, 229, 232, 233,
	234, 235, 236, 237, 238, 239, 558, 230, 231, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 0, 0, 0, 0, 261, 262, 263,
	264, 0, 0, 255, 256, 257, 258, 0, 0, 0,
	441, 442, 443, 465, 0, 427, 489, 607, 0, 0,
	0, 0, 0, 0, 0, 539, 551, 585, 0, 595,
	596, 598, 600, 599, 602, 0, 613, 480, 481, 614,
	591, 370, 0, 495, 528, 517, 601, 483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 0,
	0, 340, 532, 514, 524, 515, 0, 500, 501, 502,
	509, 320, 503, 504, 505, 475, 506, 476, 507, 508,
	0, 531, 482, 401, 354, 549, 548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 204, 0, 0, 0, 0,
	0, 0, 283, 205, 477, 597, 479, 478, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	406, 423, 284, 397, 436, 289, 404, 279, 369, 393,
	0, 0, 275, 421, 403, 351, 330, 331, 274, 0,
	388, 308, 322, 305, 367, 0, 420, 448, 304, 439,
	0, 431, 277, 0, 430, 366, 417, 422, 352, 346,
	276, 419, 350, 345, 334, 312, 464, 335, 336, 326,
	378, 344, 379, 327, 356, 355, 357, 0, 0, 0,
	0, 0, 459, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 590, 0, 0, 594,
	0, 433, 0, 0, 0, 0, 0, 0, 405, 0,
	0, 337, 0, 0, 0, 449, 0, 391, 372, 616,
	0, 0, 389, 342, 418, 380, 424, 407, 432, 385,
	381, 268, 408, 307, 353, 280, 282, 302, 309, 311,
	313, 314, 362, 363, 375, 396, 409, 410, 411, 306,
	290, 390, 291, 324, 292, 269, 298, 296, 299, 398,
	300, 271, 376, 415, 0, 319, 386, 349, 272, 348,
	377, 414, 413, 281, 440, 446, 447, 536, 0, 452,
	617, 618, 619, 461, 466, 467, 468, 470, 471, 472,
	473, 537, 554, 521, 491, 454, 545, 488, 492, 493,
	557, 0, 0, 0, 445, 338, 339, 0, 317, 265,
	266, 612, 303, 368, 559, 592, 593, 484, 0, 546,
	485, 494, 295, 518, 530, 529, 364, 444, 0, 541,
	544, 474, 611, 0, 538, 553, 615, 552, 608, 374,
	0, 395, 550, 497, 0, 542, 516, 0, 543, 512,
	547, 0, 486, 0, 402, 426, 438, 455, 458, 487,
	572, 573, 574, 270, 457, 576, 577, 578, 579, 580,
	581, 582, 575, 429, 519, 496, 522, 437, 499, 498,
	0, 0, 533, 453, 534, 535, 358, 359, 360, 361,
	321, 560, 288, 456, 384, 0, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 526, 523, 620, 0,
	583, 584, 0, 0, 450, 451, 316, 323, 469, 325,
	287, 373, 318, 435, 332, 0, 462, 527, 463, 586,
	589, 587, 588, 365, 328, 329, 399, 333, 343, 387,
	434, 371, 392, 285, 425, 400, 347, 513, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 568, 567, 566, 565, 564,
	563, 562, 561, 0, 0, 510, 412, 297, 259, 293,
	294, 301, 609, 606, 416, 610, 0, 267, 490, 341,
	0, 382, 315, 555, 556, 0, 0, 215, 216, 217,
	218, 219, 220, 221, 222, 260, 223, 224, 225, 226,
	227, 228, 229, 232, 233, 234, 235, 236, 237, 238,
	239, 558, 230, 231, 240, 241, 242, 243, 244, 245,
	246, 247, 248, 249, 250, 251, 252, 253, 0, 0,
	0, 0, 261, 262, 263, 264, 0, 0, 255, 256,
	257, 258, 0, 0, 0, 441, 442, 443, 465, 0,
	427, 489, 607, 0, 0, 0, 0, 0, 0, 0,
	539, 551, 585, 0, 595, 596, 598, 600, 599, 602,
	0, 613, 480, 481, 614, 591, 370, 0, 495, 528,
	517, 601, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 0, 340, 532, 514, 524,
	515, 0, 500, 501, 502, 509, 320, 503, 504, 505,
	475, 506, 476, 507, 508, 0, 531, 482, 401, 354,
	549, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 0, 0, 0, 0, 0, 0, 283, 205, 477,
	597, 479, 478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 406, 1432, 284, 397, 436,
	289, 404, 279, 369, 393, 0, 0, 275, 421, 403,
	351, 330, 331, 274, 0, 388, 308, 322, 305, 367,
	0, 420, 448, 304, 439, 0, 431, 277, 0, 430,
	366, 417, 422, 352, 346, 276, 419, 350, 345, 334,
	312, 464, 335, 336, 326, 378, 344, 379, 327, 356,
	355, 357, 0, 0, 0, 0, 0, 459, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 590, 0, 0, 594, 0, 433, 0, 0, 0,
	0, 0, 0, 405, 0, 0, 337, 0, 0, 0,
	449, 0, 391, 372, 616, 0, 0, 389, 342, 418,
	380, 424, 407, 432, 385, 381, 268, 408, 307, 353,
	280, 282, 302, 309, 311, 313, 314, 362, 363, 375,
	396, 409, 410, 411, 306, 290, 390, 291, 324, 292,
	269, 298, 296, 299, 398, 300, 271, 376, 415, 0,
	319, 386, 349, 272, 348, 377, 414, 413, 281, 440,
	446, 447, 536, 0, 452, 617, 618, 619, 461, 466,
	467, 468, 470, 471, 472, 473, 537, 554, 521, 491,
	454, 545, 488, 492, 493, 557, 0, 0, 0, 445,
	338, 339, 0, 317, 265, 266, 612, 303, 368, 559,
	592, 593, 484, 0, 546, 485, 494, 295, 518, 530,
	529, 364, 444, 0, 541, 544, 474, 611, 0, 538,
	553, 615, 552, 608, 374, 0, 395, 550, 497, 0,
	542, 516, 0, 543, 512, 547, 0, 486, 0, 402,
	426, 438, 455, 458, 487, 572, 573, 574, 270, 457,
	576, 577, 578, 579, 580, 581, 582, 575, 429, 519,
	496, 522, 437, 499, 498, 0, 0, 533, 453, 534,
	535, 358, 359, 360, 361, 321, 560, 288, 456, 384,
	0, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 526, 523, 620, 0, 583, 584, 0, 0, 450,
	451, 316, 323, 469, 325, 287, 373, 318, 435, 332,
	0, 462, 527, 463, 586, 589, 587, 588, 365, 328,
	329, 399, 333, 343, 387, 434, 371, 392, 285, 425,
	400, 347, 513, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	568, 567, 566, 565, 564, 563, 562, 561, 0, 0,
	510, 412, 297, 259, 293, 294, 301, 609, 606, 416,
	610, 0, 267, 490, 341, 0, 382, 315, 555, 556,
	0, 0, 215, 216, 217, 218, 219, 220, 221, 222,
	260, 223, 224, 225, 226, 227, 228, 229, 232, 233,
	234, 235, 236, 237, 238, 239, 558, 230, 231, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 0, 0, 0, 0, 261, 262, 263,
	264, 0, 0, 255, 256, 257, 258, 0, 0, 0,
	441, 442, 443, 465, 0, 427, 489, 607, 0, 0,
	0, 0, 0, 0, 0, 539, 551, 585, 0, 595,
	596, 598, 600, 599, 602, 0, 613, 480, 481, 614,
	591, 370, 0, 495, 528, 517, 601, 483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 0,
	0, 340, 532, 514, 524, 515, 0, 500, 501, 502,
	509, 320, 503, 504, 505, 475, 506, 476, 507, 508,
	0, 531, 482, 401, 354, 549, 548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 204, 0, 0, 0, 0,
	0, 0, 283, 205, 477, 597, 479, 478, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	406, 1430, 284, 397, 436, 289, 404, 279, 369, 393,
	0, 0, 275, 421, 403, 351, 330, 331, 274, 0,
	388, 308, 322, 305, 367, 0, 420, 448, 304, 439,
	0, 431, 277, 0, 430, 366, 417, 422, 352, 346,
	276, 419, 350, 345, 334, 312, 464, 335, 336, 326,
	378, 344, 379, 327, 356, 355, 357, 0, 0, 0,
	0, 0, 459, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 590, 0, 0, 594,
	0, 433, 0, 0, 0, 0, 0, 0, 405, 0,
	0, 337, 0, 0, 0, 449, 0, 391, 372, 616,
	0, 0, 389, 342, 418, 380, 424, 407, 432, 385,
	381, 268, 408, 307, 353, 280, 282, 302, 309, 311,
	313, 314, 362, 363, 375, 396, 409, 410, 411, 306,
	290, 390, 291, 324, 292, 269, 298, 296, 299, 398,
	300, 271, 376, 415, 0, 319, 386, 349, 272, 348,
	377, 414, 413, 281, 440, 446, 447, 536, 0, 452,
	617, 618, 619, 461, 466, 467, 468, 470, 471, 472,
	473, 537, 554, 521, 491, 454, 545, 488, 492, 493,
	557, 0, 0, 0, 445, 338, 339, 0, 317, 265,
	266, 612, 303, 368, 559, 592, 593, 484, 0, 546,
	485, 494, 295, 518, 530, 529, 364, 444, 0, 541,
	544, 474, 611, 0, 538, 553, 615, 552, 608, 374,
	0, 395, 550, 497, 0, 542, 516, 0, 543, 512,
	547, 0, 486, 0, 402, 426, 438, 455, 458, 487,
	572, 573, 574, 270, 457, 576, 577, 578, 579, 580,
	581, 582, 575, 429, 519, 496, 522, 437, 499, 498,
	0, 0, 533, 453, 534, 535, 358, 359, 360, 361,
	321, 560, 288, 456, 384, 0, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 526, 523, 620, 0,
	583, 584, 0, 0, 450, 451, 316, 323, 469, 325,
	287, 373, 318, 435, 332, 0, 462, 527, 463, 586,
	589, 587, 588, 365, 328, 329, 399, 333, 343, 387,
	434, 371, 392, 285, 425, 400, 347, 513, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 568, 567, 566, 565, 564,
	563, 562, 561, 0, 0, 510, 412, 297, 259, 293,
	294, 301, 609, 606, 416, 610, 0, 267, 490, 341,
	0, 382, 315, 555, 556, 0, 0, 215, 216, 217,
	218, 219, 220, 221, 222, 260, 223, 224, 225, 226,
	227, 228, 229, 232, 233, 234, 235, 236, 237, 238,
	239, 558, 230, 231, 240, 241, 242, 243, 244, 245,
	246, 247, 248, 249, 250, 251, 252, 253, 0, 0,
	0, 0, 261, 262, 263, 264, 0, 0, 255, 256,
	257, 258, 0, 0, 0, 441, 442, 443, 465, 0,
	427, 489, 607, 0, 0, 0, 0, 0, 0, 0,
	539, 551, 585, 0, 595, 596, 598, 600, 599, 602,
	0, 613, 480, 481, 614, 591, 370, 0, 495, 528,
	517, 601, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 0, 340, 532, 514, 524,
	515, 0, 500, 501, 502, 509, 320, 503, 504, 505,
	475, 506, 476, 507, 508, 0, 531, 482, 401, 354,
	549, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 0, 0, 0, 0, 0, 0, 283, 205, 477,
	597, 479, 478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 406, 423, 284, 397, 436,
	289, 404, 279, 369, 393, 0, 0, 275, 421, 403,
	351, 330, 331, 274, 0, 388, 308, 322, 305, 367,
	0, 420, 448, 304, 439, 0, 431, 277, 0, 430,
	366, 417, 422, 352, 346, 276, 419, 350, 345, 334,
	312, 464, 335, 336, 326, 378, 344, 379, 327, 356,
	355, 357, 0, 0, 0, 0, 0, 459, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 590, 0, 0, 594, 0, 433, 0, 0, 0,
	0, 0, 0, 405, 0, 0, 337, 0, 0, 0,
	449, 0, 391, 372, 616, 0, 0, 389, 342, 418,
	380, 424, 407, 432, 385, 381, 268, 408, 307, 353,
	280, 282, 704, 309, 311, 313, 314, 362, 363, 375,
	396, 409, 410, 411, 306, 290, 390, 291, 324, 292,
	269, 298, 296, 299, 398, 300, 271, 376, 415, 0,
	319, 386, 349, 272, 348, 377, 414, 413, 281, 440,
	446, 447, 536, 0, 452, 617, 618, 619, 461, 466,
	467, 468, 470, 471, 472, 473, 537, 554, 521, 491,
	454, 545, 488, 492, 493, 557, 0, 0, 0, 445,
	338, 339, 0, 317, 265, 266, 612, 303, 368, 559,
	592, 593, 484, 0, 546, 485, 494, 295, 518, 530,
	529, 364, 444, 0, 541, 544, 474, 611, 0, 538,
	553, 615, 552, 608, 374, 0, 395, 550, 497, 0,
	542, 516, 0, 543, 512, 547, 0, 486, 0, 402,
	426, 438, 455, 458, 487, 572, 573, 574, 270, 457,
	576, 577, 578, 579, 580, 581, 582, 575, 429, 519,
	496, 522, 437, 499, 498, 0, 0, 533, 453, 534,
	535, 358, 359, 360, 361, 321, 560, 288, 456, 384,
	0, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 526, 523, 620, 0, 583, 584, 0, 0, 450,
	451, 316, 323, 469, 325, 287, 373, 318, 435, 332,
	0, 462, 527, 463, 586, 589, 587, 588, 365, 328,
	329, 399, 333, 343, 387, 434, 371, 392, 285, 425,
	400, 347, 513, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	568, 567, 566, 565, 564, 563, 562, 561, 0, 0,
	510, 412, 297, 259, 293, 294, 301, 609, 606, 416,
	610, 0, 267, 490, 341, 0, 382, 315, 555, 556,
	0, 0, 215, 216, 217, 218, 219, 220, 221, 222,
	260, 223, 224, 225, 226, 227, 228, 229, 232, 233,
	234, 235, 236, 237, 238, 239, 558, 230, 231, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 0, 0, 0, 0, 261, 262, 263,
	264, 0, 0, 255, 256, 257, 258, 0, 0, 0,
	441, 442, 443, 465, 0, 427, 489, 607, 0, 0,
	0, 0, 0, 0, 0, 539, 551, 585, 0, 595,
	596, 598, 600, 599, 602, 0, 613, 480, 481, 614,
	591, 370, 0, 495, 528, 517, 601, 483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 0,
	0, 340, 532, 514, 524, 515, 0, 500, 501, 502,
	509, 320, 503, 504, 505, 475, 506, 476, 507, 508,
	0, 531, 482, 401, 354, 549, 548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 204, 0, 0, 0, 0,
	0, 0, 283, 205, 477, 597, 479, 478, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	406, 423, 284, 397, 436, 289, 404, 279, 369, 393,
	0, 0, 275, 421, 403, 351, 330, 331, 274, 0,
	388, 308, 322, 305, 367, 0, 420, 448, 304, 439,
	0, 431, 277, 0, 430, 366, 417, 422, 352, 346,
	276, 419, 350, 345, 334, 312, 464, 335, 336, 326,
	378, 344, 379, 327, 356, 355, 357, 0, 0, 0,
	0, 0, 459, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 590, 0, 0, 594,
	0, 433, 0, 0, 0, 0, 0, 0, 405, 0,
	0, 337, 0, 0, 0, 449, 0, 391, 372, 616,
	0, 0, 389, 342, 418, 380, 424, 407, 432, 661,
	381, 268, 408, 307, 353, 280, 282, 302, 309, 311,
	313, 314, 362, 363, 375, 396, 409, 410, 411, 306,
	290, 390, 291, 324, 292, 269, 298, 296, 299, 398,
	300, 271, 376, 415, 0, 319, 386, 349, 272, 348,
	377, 414, 413, 281, 440, 446, 447, 536, 0, 452,
	617, 618, 619, 461, 466, 467, 468, 470, 471, 472,
	473, 537, 554, 521, 491, 454, 545, 488, 492, 493,
	557, 0, 0, 0, 445, 338, 339, 0, 317, 265,
	266, 612, 303, 368, 559, 592, 593, 484, 0, 546,
	485, 494, 295, 518, 530, 529, 364, 444, 0, 541,
	544, 474, 611, 0, 538, 553, 615, 552, 608, 374,
	0, 395, 550, 497, 0, 542, 516, 0, 543, 512,
	547, 0, 486, 0, 402, 426, 438, 455, 458, 487,
	572, 573, 574, 270, 457, 576, 577, 578, 579, 580,
	581, 662, 575, 429, 519, 496, 522, 437, 499, 498,
	0, 0, 533, 453, 534, 535, 358, 359, 360, 361,
	321, 560, 288, 456, 384, 0, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 526, 523, 620, 0,
	583, 584, 0, 0, 450, 451, 316, 323, 469, 325,
	287, 373, 318, 435, 332, 0, 462, 527, 463, 586,
	589, 587, 588, 365, 328, 329, 399, 333, 343, 387,
	434, 371, 392, 285, 425, 400, 347, 513, 540, 0,
	0, 0, 0, 1068, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 568, 567, 566, 565, 564,
	563, 562, 561, 0, 0, 510, 412, 297, 259, 293,
	294, 301, 609, 606, 416, 610, 0, 267, 490, 341,
	0, 382, 315, 555, 556, 0, 0, 215, 216, 217,
	218, 219, 220, 221, 222, 260, 223, 224, 225, 226,
	227, 228, 229, 232, 233, 234, 235, 236, 237, 238,
	239, 558, 230, 231, 240, 241, 242, 243, 244, 245,
	246, 247, 248, 249, 250, 251, 252, 253, 0, 0,
	0, 0, 261, 262, 263, 264, 0, 0, 255, 256,
	257, 258, 0, 0, 0, 441, 442, 443, 465, 0,
	427, 489, 607, 0, 0, 0, 1054, 0, 0, 0,
	539, 551, 585, 0, 595, 596, 598, 600, 599, 602,
	0, 613, 480, 481, 614, 591, 1076, 1080, 1082, 1084,
	1086, 1087, 1089, 0, 1094, 1090, 1091, 1092, 1093, 0,
	1071, 1072, 1073, 1074, 1052, 1053, 1077, 0, 1055, 0,
	1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1067,
	1069, 1065, 1066, 1075, 683, 682, 689, 679, 0, 0,
	0, 1079, 1081, 1083, 1085, 1088, 686, 687, 0, 688,
	692, 0, 0, 673, 1911, 0, 0, 683, 682, 689,
	679, 182, 0, 697, 0, 0, 0, 0, 0, 686,
	687, 0, 688, 692, 0, 0, 673, 0, 0, 1070,
	0, 0, 0, 3411, 0, 0, 697, 0, 0, 1913,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 701, 0,
	0, 703, 0, 0, 0, 0, 702, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 701, 176, 0, 703, 0, 0, 0, 0, 702,
	0, 0, 1888, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 913, 0, 914, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1904, 0, 0, 0, 0, 894, 0, 0, 0, 0,
	0, 1911, 0, 0, 0, 0, 0, 0, 0, 908,
	0, 904, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 674, 676, 675, 1913, 0, 0, 0,
	0, 0, 0, 681, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 685, 674, 676, 675, 0,
	0, 0, 700, 0, 0, 0, 681, 886, 0, 678,
	1892, 0, 0, 668, 0, 0, 0, 0, 685, 3574,
	0, 1898, 0, 0, 1911, 700, 0, 0, 0, 1888,
	0, 0, 678, 0, 0, 0, 0, 0, 0, 0,
	0, 1886, 1920, 0, 0, 1887, 1889, 1891, 0, 1893,
	1894, 1895, 1899, 1900, 1901, 1903, 1906, 1907, 1908, 1913,
	0, 0, 0, 0, 0, 0, 1896, 1905, 1897, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 910, 0,
	903, 0, 1078, 0, 0, 0, 0, 0, 0, 907,
	906, 0, 0, 0, 0, 0, 0, 1904, 0, 0,
	1912, 0, 0, 0, 0, 0, 888, 0, 0, 0,
	895, 0, 1888, 0, 0, 0, 0, 0, 0, 680,
	684, 690, 0, 691, 693, 0, 0, 694, 695, 696,
	902, 0, 698, 699, 0, 0, 0, 0, 0, 0,
	0, 0, 680, 684, 690, 1909, 691, 693, 0, 912,
	694, 695, 696, 0, 901, 698, 699, 1911, 900, 0,
	0, 0, 1885, 0, 887, 0, 0, 0, 893, 1884,
	0, 0, 0, 0, 0, 0, 3545, 1892, 0, 0,
	1904, 0, 0, 0, 0, 0, 0, 0, 1898, 0,
	891, 0, 1913, 1902, 0, 0, 0, 0, 0, 0,
	0, 0, 1890, 0, 0, 0, 0, 0, 1886, 1920,
	0, 0, 1887, 1889, 1891, 0, 1893, 1894, 1895, 1899,
	1900, 1901, 1903, 1906, 1907, 1908, 0, 0, 911, 0,
	0, 0, 0, 1896, 1905, 1897, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1888, 0, 0, 0, 0,
	0, 0, 0, 0, 892, 0, 0, 0, 0, 0,
	1892, 0, 0, 0, 0, 0, 0, 1912, 0, 0,
	0, 1898, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 677, 0,
	0, 1886, 1920, 0, 0, 1887, 1889, 1891, 0, 1893,
	1894, 1895, 1899, 1900, 1901, 1903, 1906, 1907, 1908, 0,
	146, 677, 1909, 1904, 0, 0, 1896, 1905, 1897, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1885,
	0, 909, 0, 0, 0, 0, 1884, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1912, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1902, 0, 0, 0, 0, 0, 0, 0, 0, 1890,
	898, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1892, 0, 1909, 0, 0, 0, 0,
	0, 0, 0, 0, 1898, 0, 0, 0, 0, 0,
	0, 0, 1885, 0, 0, 0, 0, 0, 0, 1884,
	0, 0, 0, 0, 1886, 1920, 0, 0, 1887, 1889,
	1891, 0, 1893, 1894, 1895, 1899, 1900, 1901, 1903, 1906,
	1907, 1908, 0, 1902, 0, 0, 0, 0, 0, 1896,
	1905, 1897, 1890, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1912, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1909, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1885, 0, 0, 0, 0,
	0, 0, 1884, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1902, 0, 0, 0,
	0, 0, 0, 0, 0, 1890,
}

var yyPact = [...]int{
	3760, -1000, -1000, -1000, -325, 13691, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 45088, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 356, 45088, -321, 27868, 43243, -1000, -1000, 2585,
	-1000, 43858, 15556, 45088, 427, 424, 45088, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 828, -1000, 47548,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 769, 48211, 46933,
	10592, -232, -1000, 1263, -50, 2390, 376, 1039, 1046, 1053,
	1053, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 48309, 854, 44473, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 353,
	435, 854, 20484, 88, 87, 1263, 404, -104, -93, -105,
	4176, -1000, 1141, 3842, 202, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 10592, 10592, 13691, -371,
	13691, 10592, 45088, 45088, -1000, -1000, -1000, -1000, -321, 43858,
	769, 48211, 10592, 2390, 376, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -93, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -104, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -105, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 87, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 4670, -1000, 1535, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2198, 2954, 1534, 2388, 714, 43243, 45088, -1000, 141,
	714, -1000, -1000, -1000, 1263, 3348, -1000, 45088, 45088, 149,
	1772, -1000, 422, 363, 450, 276, 1522, -1000, -1000, -1000,
	-1000, -1000, -1000, 588, 3313, -1000, 45088, 45088, 2967, 45088,
	-1000, 2317, 640, -1000, 48234, 3184, 1195, 888, 2999, -1000,
	-1000, 2953, -1000, 283, 259, 267, 392, 355, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 292, -1000, 3232, -1000, -1000,
	271, -1000, -1000, 241, -1000, -1000, -1000, 86, -1000, -1000,
	-1000, -1000, -1000, -1000, -24, -1000, -1000, 1078, 2108, 10592,
	2247, -1000, 3904, 1550, -1000, -1000, -1000, 6260, 12446, 12446,
	12446, 12446, 45088, -1000, -1000, 2713, 10592, 2952, 2951, 2949,
	2948, -1000, -1000, -1000, -1000, -1000, -1000, 1516, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1942, -1000, -1000,
	-1000, 13064, -1000, 2947, 2942, 2941, 2927, 2920, 2919, 2917,
	2913, 2911, 2910, 2909, 2908, 2901, 2900, 2579, 14931, 2899,
	2387, 2386, 2898, 2894, 2893, 2382, 2885, 2884, 2883, 2579,
	2579, 2870, 2869, 2867, 2864, 2863, 2862, 2861, 2857, 2856,
	2850, 2848, 2847, 2845, 2844, 2829, 2822, 2818, 2785, 2768,
	2767, 2765, 2764, 2763, 2761, 2760, 2755, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1306, -1000, 2753, 3338, 2645, -1000, 3218, 3211, 3209, 3207,
	-280, 2752, 2110, -1000, -1000, 105, 3312, 45088, -1000, -74,
	-1000, -1000, 989, -1000, 973, -1000, 761, 45088, 45088, 205,
	787, 761, 761, 761, 761, 761, 805, 761, 3251, 827,
	825, 824, 823, 761, -55, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1755, 1754, 3059, 943, -1000, -1000, -1000, -1000,
	1354, 45088, -1000, 2635, 1592, 1592, 3298, 3249, 683, 679,
	662, 1592, 500, -1000, 1724, 1724, 1724, 1724, 1592, 483,
	701, 3254, 3254, 67, 1724, 66, 1592, 1592, 66, 1592,
	1592, -1000, 1690, 242, -288, -1000, -1000, -1000, -1000, 1724,
	1724, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3227, 3226,
	769, 769, 45088, 200, 45088, 769, 769, 769, 779, 41,
	46318, 45703, 2317, 616, 605, 1365, 1701, -1000, 1618, 45088,
	45088, 1618, 1618, 23563, 22948, -1000, 45088, -1000, 3338, 2645,
	2568, 1835, 2567, 2645, -109, -110, -111, 769, 769, 769,
	769, 769, 214, 769, 769, 769, 769, 769, 45088, 45088,
	42628, 769, 769, 769, 8732, 8732, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 13691, 1815, 2058, 201, -25,
	-306, 243, -1000, -1000, 45088, 3160, 226, -1000, -1000, -1000,
	2592, -1000, 2628, 2628, 2628, 2628, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2628, 2628, 2633, 2751, -1000,
	-1000, 2627, 2627, 2627, 2592, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2630, 2630, 2631, 2631, 2630, 45088, -122, -1000, -1000, 10592,
	45088, 3179, 381, 2744, 714, -1000, -1000, 45088, 100, 408,
	3338, 3175, 3254, 3289, -1000, -1000, 1512, 2106, 2381, -1000,
	276, -1000, 417, 276, 1630, -1000, 1045, -1000, -1000, -1000,
	-1000, -1000, 45088, -24, 383, -1000, -1000, 2376, 2734, -1000,
	580, 1161, 1569, -1000, 244, 3874, 35863, 2317, 35863, 45088,
	-1000, -1000, -1000, -1000, -1000, -1000, 81, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 258, -1000, 10592, 10592, 10592, 10592, 10592, -1000, 697,
	11828, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 12446, 12446,
	12446, 12446, 12446, 12446, 12446, 12446, 12446, 12446, 12446, 12446,
	2704, 1885, 12446, 12446, 12446, 12446, 25408, 1835, 3017, 1360,
	287, 1550, 1550, 1550, 1550, 10592, -1000, 1794, 2108, 10592,
	10592, 10592, 10592, 45088, -1000, -1000, 4215, 10592, 10592, 3663,
	10592, 3203, 10592, 10592, 10592, 2564, 5015, 45088, 10592, -1000,
	2563, 2562, -1000, -1000, 1990, 10592, -1000, -1000, 10592, -1000,
	-1000, 10592, 12446, 10592, -1000, 10592, 10592, 10592, -1000, -1000,
	3208, 3203, 3203, 3203, 1766, 10592, 10592, 3203, 3203, 3203,
	1721, 3203, 3203, 3203, 3203, 3203, 3203, 3203, 3203, 3203,
	3203, 3203, 2559, 2552, 2546, 9974, 3254, -232, -1000, 8114,
	3175, 3254, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -282, 2733, 45088, 2380, 2378, -328, 1023, 436,
	36, 1027, 978, 997, -1000, 45088, 1818, 3198, -1000, 2732,
	45088, 761, 761, 761, -1000, 40783, 35863, 45088, 45088, 2317,
	45088, 45088, 45088, 761, 761, 761, 761, 45088, -1000, 3100,
	35863, 3095, 779, -1000, 45088, 1354, 3197, 45088, 3298, 12446,
	12446, -1000, -1000, 10592, 42013, 1724, 1592, 1592, -1000, -1000,
	45088, -1000, -1000, -1000, 1724, 45088, 1724, 1724, 3298, 1724,
	-1000, -1000, -1000, 1592, 1592, -1000, -1000, 10592, -1000, -1000,
	1724, 1724, -1000, -1000, 3298, 45088, 80, 3298, 3298, 71,
	-1000, -1000, -1000, 1592, 45088, 45088, 761, 45088, -1000, 45088,
	45088, -1000, -1000, 45088, 45088, 4258, 40783, 41398, 3225, -1000,
	35863, 45088, 45088, 34018, -1000, 1308, -1000, 18, -1000, 31,
	41, 1618, 41, 1618, -1000, 579, 577, 21718, 499, 35863,
	5633, -1000, -1000, 1618, 1618, 5633, 5633, 1564, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1353, -1000, 240, 3254, -1000,
	-1000, -1000, -1000, -1000, 2105, 2103, 2102, 45088, 40783, 35863,
	2317, 45088, 769, 45088, 45088, 45088, 45088, 45088, -1000, 2730,
	1508, -1000, 3183, 45088, 45088, 45088, 1475, -1000, -1000, 18631,
	1494, 1475, -1000, 1803, -1000, 10592, 13691, -257, 10592, 13691,
	13691, 10592, 13691, -1000, 10592, 204, -1000, -1000, -1000, -1000,
	2098, -1000, 2095, -1000, -1000, -1000, -1000, -1000, 2369, 2369,
	-1000, 2092, -1000, -1000, -1000, -1000, 2090, -1000, -1000, 2089,
	-1000, -1000, -1000, -1000, -173, 2545, 1078, -1000, 2366, 2990,
	-233, -1000, 19869, 45088, 45088, 381, -330, -1000, 1742, 1733,
	1732, -1000, -233, -1000, 19250, 45088, 3254, -1000, -237, 3175,
	10592, 45088, -1000, 3247, -1000, -1000, 276, -1000, 395, 360,
	-1000, -1000, -1000, -1000, -1000, -1000, 1491, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 348, 1344, -1000,
	45088, -1000, -1000, 244, 35863, 37708, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 248, -1000, -1000, 194, -1000, 800, 182,
	1622, -1000, -1000, 210, 209, 155, 880, 2108, -1000, 1807,
	1807, 1844, -1000, 650, -1000, -1000, -1000, -1000, 2713, -1000,
	-1000, -1000, 2873, 2912, -1000, 1705, 1705, 1075, 1075, 1075,
	1075, 1075, 2217, 2217, -1000, -1000, -1000, 6260, 2704, 12446,
	12446, 12446, 12446, 869, 869, 3720, 3665, -1000, -1000, -1000,
	-1000, 10592, 190, 1797, -1000, 10592, 2977, 1570, 2639, 1575,
	1482, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2544, 2538, 2876, 3311, 2536, 10592, -1000, -1000, 1601,
	1590, 1579, -1000, 2160, 9356, -1000, -1000, -1000, 2526, 1478,
	2525, -1000, -1000, -1000, 2522, 1577, 1153, 2521, 1747, 2519,
	2508, 2507, 2506, 1341, 10592, 10592, 10592, 10592, 2499, 1573,
	1562, 10592, 10592, 10592, 10592, 2489, 10592, 10592, 10592, 10592,
	10592, 10592, 10592, 10592, 10592, 10592, 10592, 109, 109, 109,
	1333, 1325, -1000, -1000, 1556, -1000, 2108, -1000, -1000, 3175,
	-1000, 2690, 2087, 1321, -1000, -1000, -307, 2332, 45088, 1017,
	45088, -1000, -1000, 1013, 967, 964, 3246, 3177, 45088, 1148,
	2687, 45088, 45088, 45088, 219, -1000, -1000, 1188, -1000, 182,
	218, 429, 1110, 2963, 3310, -127, 45088, 45088, 45088, 45088,
	3196, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 40168,
	-1000, 2675, 1553, -1000, -1000, 1550, 1550, 2108, 2957, 45088,
	45088, 3298, 3298, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1724, 3298, 3298, 1322, 1592, 1724, -1000, -1000, 1724, -333,
	-1000, 1724, -1000, -333, 1470, -333, 45088, -1000, -1000, -1000,
	3192, 2635, 1313, -1000, -1000, -1000, 3288, 1199, 740, 740,
	963, 705, 3287, 17401, -1000, 1634, 1067, 797, 3141, 278,
	-1000, 1634, -165, 724, 1634, 1634, 1634, 1634, 1634, 1634,
	1634, 583, 573, 1634, 1634, 1634, 1634, 1634, 1634, 1634,
	1634, 1634, 1634, 1634, 1043, 1634, 1634, 1634, 1634, 1634,
	-1000, 1634, 2664, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	693, 206, 3224, 311, -1000, 323, 1188, 3223, 344, 3362,
	1177, -1000, -1000, -1000, -1000, 26023, 26023, 21103, 26023, -1000,
	208, 41, 2, -1000, -1000, 1308, 5633, 1308, 5633, -1000,
	-1000, 794, -1000, -1000, 1110, -1000, 45088, 45088, -1000, -1000,
	2661, 1720, -1000, -1000, 14931, -1000, 5633, 5633, -1000, -1000,
	27253, 45088, -1000, -29, -1000, -7, 3175, -1000, -1000, -1000,
	1305, -1000, -1000, 1307, 1110, 2987, 45088, 1305, 1305, 1305,
	-1000, -1000, 16786, 45088, 45088, -1000, -1000, -1000, 3298, 8732,
	-1000, 34018, -1000, -1000, 39553, -1000, 38938, 3298, 1784, -1000,
	13691, 2013, 199, -1000, 238, -312, 197, 1854, 196, 2108,
	-1000, -1000, 2475, 2473, 1547, -1000, 1546, 2470, 1543, 1520,
	2085, -1000, 60, -1000, 3162, 1120, -1000, 2659, -1000, 1486,
	3050, -1000, 1301, -1000, 1719, 1472, -1000, -1000, -1000, 10592,
	38323, 10592, 1120, 1466, 3049, 1301, 3175, 2364, -1000, 1296,
	-1000, 2032, 1468, 147, -1000, -1000, -1000, 45088, 769, 2376,
	1464, 37708, 1205, -1000, 793, 1437, 1413, -1000, 35863, 273,
	35863, -1000, 35863, -1000, -1000, 367, -1000, 45088, 3168, -1000,
	-1000, -1000, 2332, 1714, -332, 45088, -1000, -1000, -1000, -1000,
	-1000, 1422, -1000, 869, 869, 3720, 1801, -1000, 12446, -1000,
	12446, 3012, -1000, 1783, -1000, 10592, 1998, 3766, 10592, 3766,
	927, 24793, 45088, -1000, -1000, 10592, 10592, -1000, 3002, -1000,
	-1000, -1000, -1000, 10592, 10592, 2223, -1000, 45088, -1000, -1000,
	-1000, -1000, 24793, -1000, 12446, -1000, -1000, -1000, -1000, 10592,
	1239, 1239, 2992, 1419, 109, 109, 109, 2961, 2915, 2895,
	1411, 109, 2859, 2783, 2777, 2773, 2741, 2728, 2717, 2710,
	2696, 2625, 2577, -1000, 2650, -1000, -1000, 1982, 11210, 8114,
	-1000, -1000, 277, 1285, 2084, 2363, 133, -1000, 1710, -1000,
	45088, 1035, -1000, -1000, -1000, 955, 362, -1000, 236, 2469,
	1270, -1000, -1000, 45088, -1000, -1000, -1000, 16786, 2635, 2648,
	2635, 101, 1634, 589, 35863, 597, -1000, 45088, 45088, 1909,
	1708, 2986, 719, 3159, 45088, 2644, 370, 2642, 2641, 3191,
	409, 48012, 45088, 1246, -1000, 1406, 3842, -1000, 45088, -1000,
	2317, -1000, 1592, -1000, -1000, 3298, -1000, -1000, 10592, 10592,
	3298, 1592, 1592, -1000, 1011, 1724, -1000, 45088, -1000, -1000,
	409, 48012, 3190, 4388, 649, 2575, -1000, 45088, -1000, -1000,
	-1000, 776, -1000, 940, 761, 45088, 1875, 940, 1869, 2638,
	-1000, -1000, 45088, 45088, 45088, 45088, -1000, -1000, 45088, -1000,
	45088, 45088, 45088, 45088, 45088, 37093, -1000, 45088, 45088, -1000,
	45088, 1868, 45088, 1864, 3148, -1000, 1634, 1634, 919, -1000,
	-1000, 559, -1000, 37093, 2081, 2078, 2076, 2074, 2361, 2360,
	2356, 1634, 1634, 2068, 2355, 36478, 2354, 1151, 2067, 2057,
	2055, 2066, 2353, 829, -1000, 2351, 2061, 2060, 2056, 45088,
	2637, 2255, -1000, -1000, 101, 1634, 305, 45088, 1703, 1700,
	589, 423, -47, 22333, 45088, 34018, 34018, 34018, 34018, -1000,
	3027, 3025, 3015, -1000, 3073, 3029, 3014, 45088, 34018, 2635,
	-1000, 36478, -1000, -1000, -1000, 1835, 1410, 3107, 935, 10592,
	-1000, -1000, 13, 23, -1000, -1000, -1000, 35863, 2350, 499,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 3244, 45088, 45088,
	715, 2465, 1262, -1000, -1000, -1000, 48012, 2628, 2628, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2628, 2628,
	2633, -1000, -1000, 2627, 2627, 2627, 2592, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2630, 2630, 2631,
	2631, 2630, -1000, -1000, 3296, -1000, 1255, -1000, -1000, 1374,
	-1000, 3296, 1799, -326, 13691, 1791, 1779, -1000, 10592, 13691,
	10592, -262, 295, -270, -1000, -1000, -1000, 2349, -1000, -1000,
	-1000, 2052, -1000, 2051, -1000, 122, 144, 1863, -233, 8114,
	388, 45088, -233, 45088, 8114, -1000, 45088, 165, -345, -347,
	161, 387, -233, 3244, 60, 10592, 3128, -1000, -1000, 45088,
	2050, -1000, -1000, -1000, 3304, 35863, 2317, 1578, 35248, -1000,
	264, -1000, 245, 540, 2347, -1000, 813, 132, 2333, 2332,
	-1000, -1000, -1000, -1000, 12446, 1550, -1000, -1000, -1000, 2108,
	10592, 2455, -1000, 950, 950, 2123, 2454, 2453, -1000, 2628,
	2628, -1000, 2592, 2627, 2592, 950, 950, 2452, -1000, 2139,
	2512, -1000, 2505, 2474, 10592, -1000, 2449, 3508, 1452, -59,
	-201, 109, 109, -1000, -1000, -1000, -1000, 109, 109, 109,
	109, -1000, 109, 109, 109, 109, 109, 109, 109, 109,
	109, 109, 109, 721, -112, -293, -113, -294, -1000, 2448,
	1254, -1000, -1000, -1000, -1000, -1000, 3663, 1245, 445, 445,
	2332, 2328, 790, 1001, 45088, -1000, -1000, -1000, 45088, 2321,
	2315, 1148, 48012, 2446, 3189, 16171, 3186, 2119, -1000, -1000,
	-1000, 26638, 546, -1000, -1000, -1000, 625, 263, 2042, 514,
	-1000, 45088, 344, 344, 3067, 1696, 2308, 45088, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 3159, -1000, 1036, 389, 32788,
	14316, -1000, 372, 45088, -1000, 16171, 16171, 372, 402, 1782,
	-1000, 714, 1176, 140, 34018, 45088, -1000, 33403, 2444, -1000,
	1110, 3298, -1000, 2108, 2108, -333, 3298, 3298, 1689, 1592,
	-1000, 402, -1000, 372, -1000, 1498, 18016, 485, 479, 440,
	-1000, 608, -1000, -1000, 713, 3140, 48012, -1000, 45088, -1000,
	45088, -1000, 45088, 45088, 761, 10592, 3140, 45088, 789, -1000,
	-1000, 1069, 403, 374, 735, 735, 1229, -1000, 3174, -1000,
	-1000, 1206, -1000, -1000, -1000, -1000, 45088, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 24793, 24793, 3222, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2306, 2305, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 45088, 1403, -1000, 1688, 2119, 26638, 1686, 1618, 2300,
	2299, 546, 1909, 1685, 2117, 45088, -1000, 1139, 45088, 45088,
	-1000, 1215, -1000, 1679, 2966, 2984, 2966, -1000, -1000, -1000,
	-1000, -1000, 2874, -1000, 2654, -1000, -1000, 1215, -1000, -1000,
	-1000, -1000, -1000, 935, -1000, 3241, 940, 940, 940, 2443,
	-1000, -1000, -1000, 1205, 2442, -1000, -1000, -1000, 3325, -1000,
	-1000, -1000, -1000, -1000, -1000, 16786, 3150, 3293, 3282, 34633,
	3293, -1000, -326, 1781, -1000, 1903, 195, 1841, 45088, -1000,
	-1000, -1000, 2441, 2436, -239, 129, 3279, 3277, 987, -1000,
	2435, 1174, -233, -1000, -1000, 1120, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -233, -1000, 1120, -1000, 122, -1000, -1000,
	3112, -1000, -1000, 2317, -1000, 234, -1000, -1000, -1000, -1000,
	-1000, -1000, 172, -1000, 45088, -1000, 1171, 127, -1000, 2108,
	-1000, -1000, -1000, -1000, -1000, 3766, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 10592, -1000, -1000,
	-1000, 2468, -1000, -1000, 10592, 2434, 2295, 2432, 2294, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 3338, -1000, 3273, 1402,
	2431, 2429, 1396, 2426, 2423, -1000, 10592, 2420, 3663, 936,
	2293, 936, -1000, -1000, 341, 45088, 3300, -1000, -1000, -1000,
	-1000, -1000, 831, 372, 2413, 1162, -1000, -1000, -1000, -1000,
	372, -1000, 2281, 174, -1000, -1000, -1000, -1000, 2262, 2260,
	2039, -1000, -1000, 2021, 1423, 193, -1000, -1000, -1000, -1000,
	-1000, -1000, 2117, 2117, 2038, 1671, -338, -1000, 2623, -1000,
	1634, 1634, 1634, 45088, 1364, -1000, 1634, 1634, 2412, -1000,
	-1000, 2410, 2408, -128, 716, 1675, 1674, -1000, 2036, 26023,
	34018, 33403, 1204, -1000, 1372, -1000, -1000, -1000, -1000, -1000,
	-1000, 2257, 3298, 716, -1000, 471, 2035, 12446, 2622, 12446,
	2621, 496, 2616, 1359, -1000, 45088, -1000, -1000, 45088, 308,
	2614, -1000, 2613, 2897, 437, 2612, 2610, 45088, 2464, -1000,
	3140, 45088, 674, 3149, -1000, -1000, -1000, 364, -1000, -1000,
	508, -1000, 45088, -1000, 45088, -1000, 1542, -1000, 24793, -1000,
	-1000, 1357, -1000, 2255, 2251, -1000, 174, 2249, 5633, -1000,
	-1000, -1000, 3067, 2243, -1000, 2241, -1000, 45088, 1139, 1139,
	3338, 45088, 8114, -1000, -1000, 10592, 2609, -1000, 10592, -1000,
	-1000, -1000, -1000, -1000, 2604, 3154, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1430, -1000, 10592, 10592, -1000, -1000, 743,
	13691, -271, 291, -1000, -1000, -1000, -242, 2240, -1000, -1000,
	3272, 2239, 2142, 45088, -1000, -1000, 1120, 1120, -239, -1000,
	-1000, 1110, -1000, -1000, 962, 581, -1000, 2406, 2458, -1000,
	2450, 109, -1000, 109, -1000, 233, 10592, -1000, 2237, -1000,
	-1000, -1000, 2234, -1000, -1000, 2389, -1000, 2404, -1000, 2233,
	-1000, -1000, 45088, 785, 988, 48012, -151, -128, 16171, -151,
	-1000, -1000, 365, -1000, -1000, 319, -1000, -1000, 2016, 558,
	-1000, -1000, -1000, -1000, 1670, 1906, 2181, 30943, 24793, 25408,
	2226, -1000, -1000, 32788, 1430, 1430, 48238, 258, 48621, -1000,
	2601, 1048, 1673, -1000, 2031, -1000, 2029, -1000, 3298, 1204,
	139, -1000, -1000, 1476, -353, -1000, 1048, 2575, 3271, -1000,
	2816, 45088, 2776, 45088, 2600, 1669, 12446, -1000, 713, 3038,
	-1000, -1000, 308, -1000, -1000, 1883, 12446, -1000, -1000, 2222,
	25408, 808, 1665, 1661, 867, 2597, -1000, 522, 3320, -1000,
	-1000, -1000, 898, 2596, -1000, 1859, 1849, -1000, 45088, -1000,
	30943, 30943, 737, 737, 30943, 30943, 2595, 735, -1000, -1000,
	12446, -1000, -1000, 1634, -1000, -1000, -1000, 1634, 1524, -1000,
	-1000, -1000, -1000, -1000, -1000, 2038, -1000, -1000, -1000, 3254,
	-1000, -1000, 2108, 45088, 2108, 32173, -1000, 3270, 3269, -1000,
	2108, 232, -1000, -326, 45088, 45088, -246, 2014, -1000, 2210,
	136, -1000, -1000, 1079, -242, -249, 71, 24793, 1658, -1000,
	-1000, -1000, -1000, -1000, 2403, -1000, 598, -1000, -1000, -1000,
	1078, 2400, 2396, -1000, -1000, -1000, -1000, 338, 45088, -119,
	-1000, -1000, 396, -1000, -1000, -1000, 560, 2157, -1000, -1000,
	317, -1000, -1000, 2207, -1000, -1000, 125, -1000, 1657, 1348,
	-1000, 2592, 10592, -1000, -1000, -1000, -1000, -1000, -1000, 709,
	-1000, 372, 48488, -1000, 1067, -1000, 962, 709, 29713, 592,
	316, -1000, 2009, -1000, -1000, 3338, -1000, -1000, 550, -1000,
	484, -1000, 1340, -1000, 1331, 31558, 2006, 2285, -1000, 48405,
	830, -1000, -1000, 3720, -1000, -1000, -1000, -1000, -1000, -1000,
	2192, 2191, -1000, -1000, -1000, -1000, -1000, 1999, 2591, -17,
	3221, 2190, -1000, -1000, 2589, 1324, 1315, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1309, 1299, 30943, -1000,
	-1000, 3720, 1995, 24793, 1634, -1000, -1000, 1298, 1295, -1000,
	-1000, -1000, -1000, -1000, 3087, -1000, -1000, -1000, 2588, -1000,
	-1000, 3268, -246, -251, 2188, 108, 134, -1000, 2187, -1000,
	-1000, 658, -235, 104, 102, 99, -1000, -1000, -1000, 10592,
	-1000, -1000, 45088, 783, 45088, 513, -1000, -1000, -1000, -1000,
	169, -1000, -1000, -1000, -1000, -1000, 2181, 2180, -1000, 30943,
	3174, 2205, 453, 3266, -1000, 48621, -1000, 1634, -1000, 453,
	1274, -1000, 1634, 1634, -1000, 418, -1000, 1599, -1000, 1987,
	-1000, 3254, -1000, 415, -1000, 457, -1000, -1000, -1000, 1272,
	-1000, -1000, -1000, 48405, 478, -1000, 689, 2586, -1000, -1000,
	2228, 10592, 2579, 1634, 2144, -115, 30943, 2778, 2775, 2712,
	2698, 1243, -1000, -1000, 24793, -1000, -1000, 30328, -1000, 45088,
	2142, -1000, -1000, 2177, -1000, 773, 128, 134, -1000, 3262,
	131, 3261, 3259, 1072, 1816, -1000, 106, 97, 94, -1000,
	-1000, -1000, -1000, -1000, 337, 527, -1000, 260, -1000, -1000,
	-1000, 299, -1000, -1000, 3174, -1000, 3258, 649, -1000, 24793,
	-1000, -1000, 29713, 1430, 1430, -1000, -1000, 1985, -1000, -1000,
	-1000, -1000, 1971, -1000, -1000, -1000, 1240, -1000, 45088, 877,
	7496, -1000, 2194, -1000, 45088, -1000, 2983, -1000, 235, 1237,
	299, 737, 299, 737, 299, 737, 299, 737, 247, -1000,
	-1000, -1000, 1231, -1000, -1000, -1000, 2576, 1954, 129, 126,
	3257, -1000, 2142, 3256, 2142, 2142, -1000, 112, 658, -1000,
	-1000, -1000, 45088, 2176, -1000, -1000, -1000, -1000, 1634, 1634,
	2167, 2166, 379, -1000, -1000, -1000, 29098, 485, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 478, 48621, -1000, 7496, 1192,
	-1000, 2108, -1000, 735, -1000, -1000, 2969, 2962, 3309, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 45088,
	3206, 24178, 120, -1000, -1000, -1000, 2165, -1000, 2142, -1000,
	-1000, 1606, -1000, -1000, -291, 1910, 1892, -1000, -1000, 45088,
	-1000, 45088, 471, -1000, 48621, 1182, -1000, 7496, -1000, -1000,
	3318, -1000, 3315, 835, 835, 299, 299, 299, 299, -1000,
	-1000, 45088, -1000, 1175, -1000, -1000, -1000, 1368, -1000, -1000,
	-1000, -1000, 2126, -1000, -1000, 2124, -1000, -1000, -1000, 1154,
	2575, -1000, -1000, -1000, -1000, -1000, 1955, 552, -1000, 1068,
	-1000, 1497, -1000, 28483, 45088, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 45088, 6878, -1000, 1149, -1000, -1000, 2108, 45088,
	-1000,
}

var yyPgo = [...]int{
	0, 183, 3360, 263, 180, 3982, 87, 256, 237, 231,
	255, 3981, 3980, 3979, 3978, 3150, 3134, 3963, 3961, 3953,
	3947, 3939, 3938, 3937, 3935, 3934, 3933, 3932, 3931, 3930,
	3929, 3928, 3927, 3923, 3918, 3917, 3915, 3914, 3913, 3912,
	3911, 3910, 3909, 3908, 3907, 3905, 3901, 251, 3898, 3897,
	3895, 3894, 3893, 3892, 3891, 3886, 3885, 3883, 3882, 3881,
	3879, 3878, 3877, 3876, 3875, 3874, 3872, 3871, 3853, 3852,
	3851, 3847, 3846, 3845, 3842, 3839, 3838, 3836, 3833, 250,
	3832, 3831, 221, 3830, 3128, 3829, 3826, 3823, 3821, 3820,
	3819, 3818, 252, 3817, 3801, 3800, 3799, 3796, 3795, 3790,
	3789, 3788, 3787, 3786, 254, 3781, 3779, 3778, 3777, 258,
	3769, 247, 3768, 178, 153, 3767, 3766, 3765, 3764, 3759,
	3758, 3757, 249, 192, 74, 3756, 46, 3753, 3745, 224,
	3744, 159, 3742, 157, 3741, 3740, 3739, 3737, 3736, 3734,
	3723, 3721, 3719, 3718, 3716, 3713, 3712, 3710, 3701, 3699,
	3698, 3697, 96, 3696, 264, 3695, 75, 3692, 176, 145,
	3691, 60, 138, 262, 1998, 265, 257, 188, 177, 118,
	3690, 338, 3689, 166, 228, 161, 27, 3687, 143, 3686,
	267, 49, 50, 248, 151, 58, 205, 144, 3685, 223,
	109, 107, 3684, 3683, 146, 3682, 241, 185, 3681, 104,
	3679, 3678, 3676, 3674, 3673, 200, 191, 3668, 3667, 135,
	3666, 3663, 69, 134, 3661, 77, 133, 170, 129, 3660,
	434, 127, 128, 119, 97, 3645, 89, 3644, 3642, 3638,
	3637, 184, 3636, 3634, 136, 70, 3633, 3631, 3630, 72,
	3629, 76, 3628, 40, 3627, 66, 3626, 3624, 3622, 3621,
	3620, 3619, 3618, 3617, 3616, 3614, 3611, 3610, 55, 3608,
	3602, 9, 13, 17, 3601, 30, 3599, 174, 3597, 3594,
	3592, 3591, 3590, 94, 88, 3589, 91, 169, 3586, 8,
	29, 73, 3585, 3584, 227, 261, 101, 156, 3583, 327,
	3580, 3572, 3571, 165, 3570, 1592, 3565, 3564, 3563, 3561,
	3559, 3558, 124, 3557, 1, 222, 43, 3556, 132, 141,
	3555, 41, 47, 116, 202, 130, 98, 3552, 3551, 3550,
	140, 208, 126, 37, 0, 3549, 235, 164, 3548, 3547,
	3545, 281, 3543, 239, 234, 172, 214, 272, 259, 3542,
	3539, 71, 122, 3538, 167, 25, 61, 139, 86, 23,
	213, 3537, 14, 7, 206, 3536, 207, 3533, 404, 18,
	656, 155, 3532, 3531, 32, 269, 3530, 3529, 3528, 131,
	3527, 3526, 194, 78, 3522, 3520, 3519, 3518, 36, 3517,
	39, 16, 3516, 105, 3514, 244, 3513, 246, 149, 186,
	182, 163, 232, 233, 83, 84, 3512, 1734, 158, 100,
	15, 3509, 236, 3508, 196, 114, 3507, 106, 3506, 242,
	271, 219, 3505, 190, 10, 48, 38, 33, 45, 11,
	187, 225, 3503, 3502, 21, 53, 3500, 52, 3497, 20,
	3496, 3494, 3493, 79, 5, 3492, 3491, 19, 22, 3490,
	35, 218, 175, 121, 95, 65, 3489, 3488, 51, 137,
	3487, 142, 160, 162, 3486, 80, 3485, 3483, 3482, 3481,
	861, 3480, 260, 3478, 3477, 3474, 3473, 3471, 3470, 3469,
	3468, 3467, 226, 3465, 102, 44, 3461, 3460, 3459, 3457,
	81, 148, 3456, 3455, 3452, 3451, 31, 150, 3450, 12,
	3449, 26, 24, 34, 3447, 99, 3445, 3, 189, 3444,
	3443, 4, 3442, 3440, 2, 3439, 3427, 117, 3424, 93,
	28, 171, 108, 3423, 3418, 92, 220, 152, 3416, 3415,
	112, 243, 198, 3414, 154, 245, 266, 3413, 215, 3412,
	3411, 3408, 3407, 3406, 3405, 1141, 3404, 3403, 240, 68,
	90, 3402, 229, 113, 3401, 3400, 85, 168, 125, 115,
	59, 82, 3396, 111, 209, 3394, 197, 3389, 3387, 3384,
	103, 3383, 3382, 3381, 3378, 193, 3377, 3376, 195, 230,
	3375, 3374, 321, 3373, 3372, 3370, 3368, 3367, 3366, 3365,
	3364, 3362, 3350, 253, 344, 3326,
}

//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:12166
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) PartitionNamesUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColPositionUnion() *tree.ColumnPosition {
	v, _ := st.union.(*tree.ColumnPosition)
	return v
}

func (st *yySymType) alterColumnOrderUnion() *tree.AlterColumnOrder {
	v, _ := st.union.(*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterColumnOrderByUnion() []*tree.AlterColumnOrder {
	v, _ := st.union.([]*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterPartitionOptionUnion() tree.AlterPartitionOption {
	v, _ := st.union.(tree.AlterPartitionOption)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) alterTypeOptionUnion() *tree.TypeOption {
	v, _ := st.union.(*tree.TypeOption)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) atTimeStampUnion() *tree.AtTimeStamp {
	v, _ := st.union.(*tree.AtTimeStamp)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) connectorOptionUnion() *tree.ConnectorOption {
	v, _ := st.union.(*tree.ConnectorOption)
	return v
}

func (st *yySymType) connectorOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) connectorOptionsUnion() []*tree.ConnectorOption {
	v, _ := st.union.([]*tree.ConnectorOption)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) cycleOptionUnion() *tree.CycleOption {
	v, _ := st.union.(*tree.CycleOption)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fillModeUnion() tree.FillMode {
	v, _ := st.union.(tree.FillMode)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() *tree.GroupBy {
	v, _ := st.union.(*tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) snapshotObjectUnion() tree.ObjectInfo {
	v, _ := st.union.(tree.ObjectInfo)
	return v
}

func (st *yySymType) sourceOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) stageCommentUnion() tree.StageComment {
	v, _ := st.union.(tree.StageComment)
	return v
}

func (st *yySymType) stageCredentialsUnion() tree.StageCredentials {
	v, _ := st.union.(tree.StageCredentials)
	return v
}

func (st *yySymType) stageStatusUnion() tree.StageStatus {
	v, _ := st.union.(tree.StageStatus)
	return v
}

func (st *yySymType) stageUrlUnion() tree.StageUrl {
	v, _ := st.union.(tree.StageUrl)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) timeFillUnion() *tree.Fill {
	v, _ := st.union.(*tree.Fill)
	return v
}

func (st *yySymType) timeIntervalUnion() *tree.Interval {
	v, _ := st.union.(*tree.Interval)
	return v
}

func (st *yySymType) timeSlidingUnion() *tree.Sliding {
	v, _ := st.union.(*tree.Sliding)
	return v
}

func (st *yySymType) timeWindowUnion() *tree.TimeWindow {
	v, _ := st.union.(*tree.TimeWindow)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) upgrade_targetUnion() *tree.Target {
	v, _ := st.union.(*tree.Target)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 578, 581, 581, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 119, 119, 315, 315, 316,
	316, 149, 557, 557, 120, 120, 120, 120, 120, 120,
	120, 118, 563, 563, 563, 564, 564, 115, 138, 137,
	140, 140, 139, 139, 136, 136, 132, 135, 135, 134,
	134, 133, 128, 130, 130, 129, 131, 131, 116, 104,
	117, 506, 506, 505, 505, 504, 504, 456, 456, 457,
	457, 304, 304, 304, 503, 503, 503, 502, 502, 501,
	501, 500, 500, 498, 498, 499, 497, 496, 496, 496,
	494, 494, 494, 490, 490, 492, 491, 491, 493, 485,
	485, 488, 488, 486, 486, 486, 486, 489, 484, 484,
	484, 483, 483, 103, 103, 103, 399, 399, 102, 102,
	413, 413, 413, 413, 413, 411, 411, 411, 411, 411,
	411, 410, 410, 409, 409, 414, 414, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 93, 93,
	93, 93, 93, 98, 98, 98, 569, 569, 568, 568,
	570, 570, 570, 570, 571, 571, 96, 96, 96, 97,
	408, 408, 408, 94, 95, 95, 398, 398, 403, 403,
	402, 402, 402, 402, 402, 402, 402, 402, 402, 402,
	402, 402, 402, 407, 407, 407, 405, 405, 404, 404,
	406, 406, 87, 87, 87, 90, 89, 397, 397, 397,
	397, 397, 397, 397, 397, 397, 88, 88, 88, 88,
	88, 88, 83, 83, 83, 83, 83, 82, 82, 84,
	84, 395, 395, 394, 99, 99, 100, 566, 566, 565,
	567, 567, 567, 567, 101, 107, 107, 107, 107, 107,
	107, 107, 107, 106, 106, 109, 109, 108, 110, 92,
	92, 92, 92, 92, 92, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 531, 531,
	531, 533, 533, 329, 330, 582, 332, 328, 328, 328,
	527, 527, 528, 529, 530, 530, 530, 105, 14, 195,
	195, 431, 431, 11, 11, 11, 11, 11, 11, 11,
	11, 13, 81, 86, 86, 266, 266, 271, 271, 272,
	272, 272, 277, 277, 278, 278, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 253, 253,
	253, 248, 248, 248, 248, 249, 249, 250, 250, 251,
	251, 251, 251, 252, 252, 321, 321, 273, 273, 273,
	275, 275, 274, 270, 268, 268, 268, 268, 268, 268,
	268, 269, 269, 269, 269, 276, 276, 79, 85, 85,
	85, 85, 545, 545, 80, 556, 556, 460, 460, 344,
	344, 343, 343, 343, 343, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 343, 466, 467, 339,
	47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
	47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
	47, 47, 47, 47, 47, 47, 47, 47, 47, 47,
	47, 47, 54, 57, 58, 53, 53, 53, 384, 384,
	52, 583, 583, 314, 314, 67, 66, 56, 68, 69,
	70, 71, 72, 73, 51, 65, 65, 65, 65, 65,
	65, 65, 65, 76, 479, 479, 585, 585, 585, 74,
	75, 459, 459, 459, 64, 63, 62, 61, 60, 60,
	50, 50, 49, 49, 55, 144, 59, 145, 145, 336,
	336, 336, 338, 338, 334, 342, 342, 584, 584, 427,
	427, 337, 337, 48, 48, 48, 48, 77, 335, 335,
	313, 333, 333, 333, 12, 12, 10, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 26, 27, 29, 392, 392, 389, 28, 20,
	19, 19, 23, 22, 18, 18, 21, 24, 25, 25,
	9, 9, 9, 9, 15, 15, 16, 168, 168, 221,
	221, 539, 539, 535, 535, 536, 536, 536, 537, 537,
	538, 538, 111, 473, 473, 473, 473, 473, 473, 8,
	8, 190, 190, 472, 472, 472, 472, 472, 472, 396,
	396, 396, 516, 516, 516, 517, 189, 189, 184, 184,
	474, 474, 361, 518, 518, 482, 482, 481, 481, 480,
	480, 187, 187, 188, 188, 171, 171, 123, 123, 487,
	487, 487, 487, 495, 495, 455, 455, 258, 258, 306,
	306, 307, 307, 161, 161, 162, 162, 162, 162, 162,
	162, 572, 572, 573, 574, 575, 575, 576, 576, 576,
	577, 577, 577, 577, 577, 524, 524, 526, 526, 525,
	186, 186, 182, 182, 183, 183, 183, 181, 181, 180,
	179, 179, 178, 176, 176, 176, 177, 177, 177, 194,
	194, 164, 164, 164, 163, 163, 163, 163, 163, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 165, 165, 532, 532, 532, 461, 461, 461, 469,
	469, 286, 286, 287, 287, 465, 465, 285, 285, 166,
	166, 167, 167, 167, 167, 284, 284, 283, 169, 169,
	175, 174, 174, 170, 170, 170, 170, 294, 294, 293,
	293, 293, 293, 114, 121, 121, 122, 193, 193, 292,
	291, 291, 291, 291, 192, 192, 191, 191, 185, 185,
	173, 173, 173, 173, 290, 172, 288, 562, 562, 561,
	561, 560, 558, 558, 558, 559, 559, 559, 559, 508,
	508, 508, 508, 508, 322, 322, 322, 327, 327, 325,
	325, 325, 325, 325, 331, 7, 7, 7, 7, 7,
	7, 7, 33, 33, 33, 33, 33, 33, 33, 33,
	33, 33, 33, 33, 33, 39, 204, 205, 40, 206,
	206, 207, 207, 208, 208, 209, 210, 211, 211, 211,
	211, 38, 196, 196, 197, 197, 198, 198, 199, 200,
	200, 200, 203, 201, 202, 202, 580, 580, 579, 37,
	37, 30, 153, 153, 154, 154, 154, 156, 156, 254,
	254, 254, 155, 155, 157, 157, 157, 540, 542, 542,
	544, 543, 543, 543, 546, 546, 546, 546, 546, 547,
	547, 547, 547, 548, 548, 31, 141, 141, 146, 551,
	551, 551, 550, 550, 552, 552, 553, 553, 310, 310,
	311, 311, 151, 152, 152, 148, 143, 159, 159, 159,
	159, 159, 160, 160, 142, 147, 150, 541, 549, 549,
	549, 393, 393, 390, 391, 391, 388, 387, 387, 387,
	555, 555, 554, 554, 554, 323, 323, 32, 383, 383,
	385, 386, 386, 386, 377, 377, 377, 377, 36, 381,
	381, 382, 382, 382, 382, 382, 382, 382, 378, 378,
	380, 380, 376, 376, 376, 376, 376, 376, 376, 35,
	158, 158, 375, 375, 372, 372, 370, 370, 371, 371,
	369, 369, 369, 373, 373, 43, 78, 44, 45, 46,
	42, 374, 374, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 125, 124, 124, 124, 124, 124, 127,
	127, 309, 309, 308, 308, 126, 255, 255, 41, 233,
	233, 447, 447, 442, 442, 442, 442, 442, 463, 463,
	463, 443, 443, 443, 444, 444, 444, 446, 446, 446,
	445, 445, 445, 445, 445, 462, 462, 464, 464, 464,
	415, 415, 416, 416, 416, 419, 419, 434, 434, 435,
	435, 433, 433, 440, 440, 439, 439, 438, 438, 437,
	437, 436, 436, 436, 436, 430, 430, 429, 429, 417,
	417, 417, 417, 417, 418, 418, 418, 428, 428, 432,
	432, 282, 282, 281, 281, 241, 241, 242, 242, 280,
	280, 239, 239, 240, 240, 240, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 514, 514, 515, 244, 244, 256, 256, 256, 256,
	256, 256, 243, 243, 245, 245, 222, 222, 220, 220,
	212, 212, 212, 212, 212, 212, 213, 213, 214, 214,
	215, 215, 215, 219, 219, 218, 218, 218, 218, 216,
	216, 217, 217, 217, 217, 217, 217, 401, 401, 511,
	511, 512, 512, 507, 507, 507, 510, 510, 510, 510,
	510, 510, 510, 513, 513, 513, 509, 509, 223, 303,
	303, 303, 324, 324, 324, 324, 326, 302, 302, 302,
	238, 238, 237, 237, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 400, 400, 340, 340,
	341, 341, 265, 264, 264, 264, 264, 264, 262, 263,
	261, 261, 261, 261, 261, 260, 260, 259, 259, 259,
	379, 379, 257, 257, 247, 247, 247, 246, 246, 246,
	441, 348, 348, 348, 348, 348, 348, 348, 348, 348,
	348, 348, 348, 348, 350, 350, 350, 350, 350, 350,
	350, 350, 350, 350, 350, 350, 350, 350, 350, 350,
	350, 350, 350, 350, 350, 350, 350, 350, 350, 350,
	300, 300, 300, 301, 301, 301, 301, 301, 301, 301,
	301, 351, 351, 357, 357, 523, 523, 522, 224, 224,
	224, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	234, 234, 234, 424, 424, 424, 424, 425, 425, 425,
	425, 426, 426, 426, 422, 422, 423, 423, 362, 363,
	363, 470, 470, 471, 471, 420, 420, 421, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 478, 478, 478, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	534, 534, 534, 519, 519, 519, 520, 520, 520, 520,
	520, 520, 520, 520, 520, 520, 520, 520, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 298, 298, 298, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 364, 364, 365, 365,
	475, 475, 475, 475, 475, 475, 476, 476, 477, 477,
	477, 477, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 349, 295, 295, 295, 366, 358, 358, 359, 359,
	360, 360, 352, 352, 352, 352, 352, 352, 353, 353,
	355, 355, 355, 355, 355, 355, 355, 355, 355, 355,
	355, 347, 347, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 354, 354, 356, 356, 368, 368, 368, 367,
	367, 367, 367, 367, 367, 367, 236, 236, 236, 236,
	346, 346, 346, 345, 345, 345, 345, 345, 345, 345,
	345, 345, 345, 345, 345, 226, 226, 226, 226, 230,
	230, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 231, 231, 231, 231, 231,
	229, 229, 229, 229, 229, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 112, 113, 113, 228, 305, 305, 448,
	448, 451, 451, 449, 449, 450, 452, 452, 452, 453,
	453, 453, 454, 454, 454, 458, 458, 312, 312, 312,
	320, 320, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 317, 317, 317,
	317, 317, 317, 317, 317, 317, 317, 317, 317, 317,
	317, 317, 317, 317, 317, 317, 317, 317, 317, 317,
	317, 317, 317, 317, 317, 317, 317, 317, 317, 317,
	317, 317, 317, 317, 317, 317, 317, 317, 317, 317,
	317, 317, 317, 317, 317, 317, 317,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 8, 8, 0, 2, 0,
	2, 6, 1, 2, 5, 6, 8, 10, 9, 11,
	13, 4, 0, 1, 1, 0, 1, 5, 2, 2,
	6, 9, 6, 9, 4, 7, 8, 0, 1, 1,
	2, 4, 6, 1, 2, 4, 0, 2, 10, 11,
	2, 0, 2, 1, 3, 3, 3, 0, 2, 0,
	2, 1, 3, 5, 0, 2, 3, 1, 3, 1,
	1, 1, 3, 1, 1, 1, 1, 0, 3, 3,
	0, 3, 3, 0, 1, 3, 0, 1, 3, 0,
	2, 1, 2, 3, 4, 3, 3, 1, 0, 1,
	1, 0, 1, 8, 5, 7, 0, 3, 8, 5,
	1, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 4, 1, 3, 1, 2, 2,
	2, 2, 2, 2, 2, 1, 2, 2, 2, 2,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 2,
	2, 2, 1, 2, 1, 2, 2, 1, 2, 1,
	1, 2, 2, 1, 1, 1, 3, 2, 2, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 4, 1, 3, 3, 1,
	2, 2, 2, 1, 2, 2, 3, 4, 4, 6,
	1, 1, 1, 2, 4, 6, 1, 4, 1, 3,
	3, 4, 4, 4, 4, 3, 3, 2, 4, 4,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 3,
	1, 3, 1, 1, 1, 2, 2, 0, 1, 4,
	2, 4, 1, 5, 3, 2, 1, 2, 2, 4,
	4, 5, 2, 1, 3, 4, 4, 1, 2, 9,
	7, 1, 3, 3, 1, 1, 3, 1, 3, 2,
	1, 2, 1, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 2, 4, 3, 3, 1,
	1, 1, 1, 1, 1, 2, 3, 4, 7, 2,
	3, 3, 4, 5, 3, 4, 4, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 2, 1, 1, 1, 1, 6, 4, 1,
	1, 0, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 10, 7, 4, 4, 1, 3, 1, 6, 3,
	3, 3, 1, 1, 1, 3, 2, 4, 5, 5,
	6, 5, 5, 3, 2, 2, 1, 3, 4, 3,
	7, 5, 8, 2, 2, 1, 3, 2, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 0, 1, 2,
	1, 3, 2, 1, 2, 2, 1, 2, 3, 2,
	2, 3, 6, 3, 3, 1, 1, 7, 7, 7,
	8, 8, 0, 4, 7, 0, 3, 0, 2, 0,
	1, 1, 1, 1, 4, 2, 2, 3, 3, 4,
	5, 3, 4, 4, 2, 2, 2, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 3, 3, 2, 5, 5, 0, 2,
	7, 0, 1, 0, 1, 5, 5, 3, 3, 2,
	4, 4, 4, 4, 4, 1, 1, 1, 3, 3,
	1, 1, 1, 6, 0, 1, 1, 1, 1, 5,
	5, 0, 1, 1, 3, 3, 3, 4, 7, 7,
	5, 4, 7, 8, 3, 3, 2, 3, 4, 0,
	2, 2, 0, 2, 2, 0, 5, 1, 1, 1,
	1, 0, 1, 5, 5, 5, 4, 3, 1, 3,
	1, 1, 3, 5, 2, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 4, 1, 3, 1, 4, 6,
	6, 4, 4, 4, 4, 4, 3, 6, 3, 5,
	1, 1, 2, 2, 11, 8, 9, 1, 3, 2,
	4, 0, 2, 0, 1, 1, 1, 1, 0, 1,
	0, 1, 4, 2, 1, 5, 4, 4, 2, 5,
	5, 1, 3, 2, 1, 5, 4, 4, 2, 0,
	5, 4, 0, 1, 3, 3, 1, 3, 1, 3,
	1, 3, 4, 0, 1, 0, 1, 1, 3, 1,
	1, 0, 4, 1, 3, 2, 1, 0, 8, 0,
	4, 7, 4, 0, 2, 0, 2, 0, 2, 0,
	4, 1, 3, 1, 1, 6, 4, 5, 7, 4,
	5, 0, 1, 3, 8, 0, 6, 0, 4, 6,
	1, 1, 1, 1, 1, 2, 3, 1, 3, 6,
	0, 3, 0, 1, 2, 4, 4, 0, 1, 3,
	1, 3, 3, 0, 1, 1, 0, 2, 2, 0,
	2, 3, 3, 3, 1, 3, 3, 3, 3, 1,
	2, 2, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 7, 7, 1, 1, 1, 0, 1, 1, 1,
	1, 0, 2, 0, 4, 0, 2, 0, 2, 1,
	3, 1, 2, 3, 5, 0, 1, 2, 1, 3,
	1, 1, 1, 4, 4, 4, 3, 2, 2, 2,
	3, 2, 3, 4, 1, 3, 4, 0, 2, 1,
	1, 2, 2, 2, 0, 1, 2, 4, 1, 3,
	1, 3, 2, 3, 1, 4, 3, 0, 1, 1,
	2, 5, 2, 2, 2, 0, 2, 3, 3, 0,
	1, 3, 1, 3, 0, 1, 2, 1, 1, 0,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 7, 1, 1, 7, 1,
	3, 0, 1, 1, 3, 1, 3, 0, 1, 1,
	1, 14, 1, 3, 0, 1, 1, 3, 1, 1,
	2, 4, 1, 1, 1, 1, 0, 1, 2, 9,
	9, 7, 1, 2, 3, 3, 3, 0, 4, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 1, 1,
	4, 1, 1, 1, 3, 3, 4, 3, 3, 0,
	1, 1, 1, 0, 2, 7, 8, 8, 8, 0,
	3, 3, 0, 3, 0, 3, 0, 5, 1, 3,
	0, 3, 3, 0, 2, 9, 7, 0, 2, 2,
	3, 3, 0, 2, 4, 4, 4, 1, 0, 2,
	2, 1, 3, 2, 1, 3, 2, 1, 3, 2,
	0, 1, 3, 4, 3, 1, 1, 4, 1, 3,
	1, 1, 1, 1, 0, 1, 1, 1, 11, 0,
	2, 3, 3, 2, 2, 3, 1, 1, 1, 3,
	3, 4, 0, 2, 2, 2, 2, 2, 2, 6,
	0, 4, 1, 1, 0, 3, 0, 1, 1, 2,
	4, 4, 4, 0, 1, 8, 2, 4, 4, 4,
	9, 0, 2, 11, 9, 11, 8, 6, 9, 7,
	10, 7, 6, 2, 2, 9, 4, 5, 3, 0,
	4, 1, 3, 0, 3, 6, 0, 2, 10, 0,
	2, 0, 2, 0, 3, 2, 4, 3, 0, 2,
	1, 0, 2, 3, 0, 2, 3, 0, 2, 1,
	0, 3, 2, 4, 3, 0, 1, 0, 1, 1,
	0, 6, 0, 3, 5, 0, 4, 0, 3, 1,
	3, 4, 5, 0, 3, 1, 3, 2, 3, 1,
	2, 0, 4, 6, 5, 0, 2, 0, 2, 4,
	5, 4, 5, 1, 5, 6, 5, 0, 3, 0,
	1, 1, 3, 3, 3, 0, 4, 1, 3, 3,
	3, 0, 1, 1, 3, 2, 3, 3, 3, 4,
	4, 3, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 1, 5,
	4, 1, 3, 3, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 2, 4,
	0, 2, 5, 5, 5, 5, 0, 1, 1, 3,
	1, 1, 1, 1, 1, 7, 9, 7, 9, 2,
	1, 7, 9, 7, 9, 8, 5, 0, 1, 0,
	1, 1, 1, 1, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 3, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 3, 5,
	0, 1, 1, 2, 1, 2, 2, 1, 1, 2,
	2, 2, 3, 3, 2, 2, 1, 5, 6, 4,
	1, 1, 1, 5, 4, 1, 1, 2, 0, 1,
	1, 2, 5, 0, 1, 1, 2, 2, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 2, 2, 2,
	0, 3, 0, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 1, 1, 3, 5, 2,
	2, 2, 2, 4, 1, 1, 2, 5, 6, 8,
	6, 6, 6, 1, 1, 1, 1, 1, 1, 3,
	4, 4, 4, 7, 9, 7, 7, 7, 9, 7,
	7, 0, 2, 0, 1, 1, 2, 4, 1, 2,
	2, 1, 2, 2, 1, 2, 2, 2, 2, 2,
	0, 1, 1, 1, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 5, 0, 1, 3, 0,
	1, 0, 2, 0, 2, 0, 1, 6, 8, 8,
	6, 6, 5, 5, 5, 6, 6, 6, 6, 5,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 1, 1, 1, 4, 4, 6, 8, 6, 4,
	5, 4, 4, 4, 3, 4, 6, 6, 7, 4,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 8, 4, 2,
	3, 2, 4, 2, 2, 4, 6, 2, 2, 4,
	6, 4, 2, 4, 4, 4, 0, 1, 2, 3,
	1, 1, 1, 1, 1, 1, 0, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 1, 1, 3, 0, 1, 1, 3,
	1, 3, 3, 3, 3, 3, 2, 1, 1, 1,
	3, 4, 3, 4, 3, 4, 3, 4, 3, 4,
	1, 3, 4, 4, 5, 4, 5, 3, 4, 5,
	6, 1, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 1, 2, 3, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 2, 2, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	4, 4, 1, 2, 3, 5, 1, 1, 3, 0,
	1, 0, 3, 0, 3, 3, 0, 3, 5, 0,
	3, 5, 0, 1, 1, 0, 1, 1, 2, 2,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -578, -581, -2, -5, 625, -1, -4, -113, -87,
	-7, -14, -115, -116, -8, -111, -9, -10, -12, -91,
	-106, -108, -110, -109, -47, -11, -105, -82, -83, -93,
	-99, -102, -103, -104, -117, -112, -114, -161, -118, -119,
	-120, 615, -88, -89, -90, -33, -32, -31, -30, -141,
	-146, -149, 547, 621, 450, 14, 499, -15, -16, -524,
	-17, 261, -328, -329, -330, -332, -582, -48, -49, -50,
	-60, -61, -62, -63, -64, -74, -75, -76, -51, -52,
	-53, -56, -54, -67, -66, -68, -69, -70, -71, -72,
	-73, -55, -59, -144, -145, -77, -57, -78, -58, -80,
	-79, -85, -81, -86, -143, -148, -13, 236, -84, 77,
	-94, -95, -96, -97, -98, -100, -101, 374, 380, 437,
	614, 62, -162, -164, 632, 633, 636, 161, 162, 164,
	165, -34, -35, -36, -37, -38, -39, -41, -40, -42,
	-43, -44, -45, -46, 232, 16, 542, -18, -21, -19,
	-22, -20, -28, -29, -27, -24, -26, -142, -25, -147,
	-23, -150, 256, 255, 38, 322, 323, 324, 378, 254,
	233, 15, 31, 42, 353, -163, 84, 534, 535, 537,
	234, -165, 13, 638, -6, -3, -2, -128, -132, -136,
	-139, -140, -137, -138, -4, -113, 119, 246, 616, -324,
	370, 617, 619, 618, 87, 95, -317, -319, 450, 261,
	374, 380, 614, 633, 636, 549, 550, 551, 552, 553,
	554, 555, 556, 558, 559, 560, 561, 562, 563, 564,
	574, 575, 565, 566, 567, 568, 569, 570, 571, 572,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 502, 600, 601, 602, 603, 530,
	557, 594, 595, 596, 597, 351, 352, 539, 273, 297,
	405, 303, 310, 161, 180, 174, 202, 194, 535, 169,
	277, 315, 278, 94, 164, 485, 109, 462, 434, 167,
	292, 294, 296, 531, 532, 364, 299, 529, 298, 300,
	302, 533, 279, 354, 190, 185, 291, 275, 183, 280,
	40, 281, 207, 282, 283, 544, 458, 350, 464, 307,
	53, 432, 184, 459, 295, 461, 211, 215, 476, 477,
	178, 179, 466, 479, 206, 209, 210, 253, 347, 348,
	43, 541, 265, 480, 213, 205, 201, 488, 311, 309,
	204, 177, 200, 276, 66, 217, 216, 218, 428, 429,
	430, 431, 284, 285, 368, 475, 197, 186, 355, 170,
	23, 483, 260, 463, 381, 286, 304, 312, 212, 214,
	267, 272, 543, 534, 436, 271, 308, 481, 182, 264,
	293, 259, 484, 171, 537, 383, 287, 165, 301, 478,
	487, 65, 396, 176, 168, 250, 162, 269, 274, 288,
	289, 290, 528, 314, 313, 305, 536, 198, 266, 203,
	188, 175, 199, 163, 268, 486, 397, 612, 353, 415,
	196, 193, 270, 243, 482, 465, 166, 419, 398, 191,
	316, 607, 608, 609, 369, 346, 317, 318, 189, 257,
	456, 457, 321, 425, 337, 399, 435, 406, 400, 224,
	225, 325, 468, 470, 208, 610, 326, 327, 328, 460,
	329, 330, 331, 332, 373, 57, 59, 96, 99, 98,
	634, 635, 64, 29, 359, 362, 394, 401, 339, 613,
	540, 336, 340, 341, 363, 25, 417, 385, 421, 420,
	49, 50, 51, 54, 55, 56, 58, 60, 61, 52,
	527, 378, 391, 489, 45, 47, 388, 27, 365, 416,
	438, 335, 418, 449, 46, 447, 448, 469, 26, 367,
	366, 63, 44, 424, 426, 427, 319, 333, 376, 622,
	490, 371, 387, 390, 372, 338, 361, 392, 68, 67,
	384, 623, 379, 377, 334, 545, 546, 342, 573, 356,
	433, 524, 523, 522, 521, 520, 519, 518, 517, 322,
	323, 324, 402, 403, 404, 414, 407, 408, 409, 410,
	411, 412, 413, 452, 453, 624, 471, 473, 474, 472,
	238, 637, 357, 358, 241, 626, 627, 97, 628, 630,
	629, 28, 631, -406, -404, -324, 535, 614, 380, 534,
	537, 374, 353, 633, 636, 378, 261, 322, 323, 324,
	450, 351, -206, -324, 637, -171, 245, 39, -220, -324,
	-171, -84, -16, -15, -163, -164, -220, 240, -333, 24,
	432, -92, 433, 236, 84, 78, -324, -9, -104, -8,
	-111, -82, -161, 437, -331, -324, 322, 322, -331, 240,
	-326, 271, 413, -324, -460, 246, -410, -383, 272, -409,
	-385, -412, -386, 32, 232, 234, 233, 547, 268, 16,
	378, 242, 14, 13, 379, 254, 25, 26, 28, 15,
	380, 382, 29, 383, 386, 387, 388, 42, 391, 392,
	261, 87, 95, 90, 279, -205, -324, -360, -352, 116,
	-355, -347, -348, -350, -304, -498, -345, 84, 143, 144,
	151, 117, 639, -349, -441, 36, 119, 553, 557, 594,
	500, -296, -297, -298, -299, -300, -301, -324, -499, -497,
	90, 100, 102, 106, 107, 105, 103, 155, 187, 104,
	91, 156, -164, 87, -519, 563, -318, 586, 600, 601,
	602, 603, 585, 62, -468, -477, 239, -475, 154, 192,
	257, 188, 14, 149, 425, 189, 595, 596, 597, 560,
	582, 502, 564, 574, 589, 555, 556, 558, 550, 551,
	552, 554, 565, 567, 581, -478, 577, 587, 588, 573,
	598, 599, 592, 590, 591, 593, 630, 89, 88, 580,
	579, 566, 561, 562, 568, 549, 559, 569, 570, 578,
	583, 584, 362, 109, 363, 364, 492, 354, 365, 246,
	432, 71, 366, 367, 368, 369, 370, 499, 371, 72,
	372, 361, 261, 415, 373, 191, 208, 504, 503, 505,
	496, 493, 491, 494, 495, 497, 498, 571, 572, 576,
	-121, -122, 605, -572, -289, -573, 6, 7, 8, 9,
	-574, 156, -563, 434, 543, 90, 315, 351, 166, 163,
	-397, 166, 115, 171, 170, -397, 168, 325, 267, -374,
	-153, 351, 415, 329, 96, 271, -377, -375, 531, -462,
	319, 315, 291, 241, 112, -154, 251, 250, 110, 492,
	239, 389, 310, 57, 59, -535, -536, 229, 230, 231,
	-526, 525, -525, -324, 364, 98, 99, 27, 240, 375,
	267, 470, 468, 469, 471, 472, 473, 474, -65, -479,
	-459, 465, 464, -337, 457, 463, 455, 467, 458, 352,
	331, 547, 330, 232, 626, 532, 526, -312, 399, 435,
	489, 490, 376, 436, 476, 478, 459, 109, 195, 192,
	241, 243, 240, 351, 492, 415, 96, 329, -535, 163,
	476, 478, 271, 413, 41, -403, 425, -402, -404, 477,
	488, 88, 89, 475, -312, 109, 456, 456, -572, -289,
	-162, -164, -114, -524, 533, 533, 533, 241, 351, 415,
	271, 242, 240, 528, 531, 243, 492, 239, 322, 375,
	267, 329, 96, 168, -461, -532, 32, -469, 226, 227,
	228, 33, 34, -1, 123, 638, -352, -352, -6, 641,
	-6, -352, -324, -324, 158, -226, -230, -227, -229, -228,
	-232, -231, 192, 193, 154, 196, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 209, 210, 207, 31, 208,
	257, 188, 189, 190, 191, 211, 174, 194, 540, 219,
	175, 220, 176, 221, 177, 222, 178, 179, 223, 180,
	183, 184, 185, 186, 182, 157, -195, 90, 32, 84,
	157, 90, -187, 263, -171, -220, -212, 157, 639, -187,
	-572, -180, -181, 11, -220, -302, -324, 434, 126, -92,
	78, -92, 433, 78, -527, -528, -529, -531, 236, 433,
	432, -109, 157, 279, 17, -331, -331, 82, -220, -385,
	271, -410, -383, 36, 81, 158, 244, 158, 81, 84,
	376, 351, 415, 377, 492, 240, 389, 243, 271, 390,
	351, 415, 240, 243, 492, 271, 351, 240, 243, 415,
	271, 390, 351, 455, 456, 243, 27, 381, 384, 385,
	456, -483, 488, 158, 115, 112, 113, 114, -352, 133,
	-367, 126, 127, 128, 129, 130, 131, 132, 140, 139,
	150, 143, 144, 145, 146, 147, 148, 149, 141, 142,
	136, 116, 134, 138, 135, 118, 153, -164, -352, -360,
	62, -350, -350, -350, -350, -324, -441, -357, -352, 84,
	84, 84, 84, 157, 103, 90, -352, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, -476,
	84, 84, -364, -365, 84, 84, -345, -302, 84, 90,
	90, 84, 84, 84, 90, 84, 84, 84, -365, -365,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, -181, 158, -180, 84,
	-180, -181, -165, -164, 32, 33, 32, 33, 32, 33,
	32, 33, -575, 623, 84, 100, 634, 224, 17, -324,
	481, 542, 169, 170, 171, -372, 246, -204, -324, -206,
	375, 243, 528, 243, -154, -372, -372, -372, -372, -372,
	242, -372, 24, 240, 240, 240, 240, -372, 499, 126,
	126, 60, -537, 173, 158, -526, -186, 84, -336, 134,
	138, -336, -285, 18, 24, 269, 269, 269, -336, 309,
	-583, -584, 17, 136, -334, -584, -334, -334, -336, -585,
	242, 466, 43, 270, 269, -182, -183, 22, -182, 460,
	456, -427, 461, 462, -338, -584, -337, -336, -336, -337,
	-336, -336, -336, 32, 240, 243, 492, 329, 627, -583,
	-583, 31, 31, -460, -460, -220, -460, 526, -313, -324,
	-460, -460, -460, -538, 245, -569, -568, 479, -571, 481,
	163, -404, 163, -404, -385, 271, 271, 158, 126, 24,
	-405, 126, 137, -404, -404, -405, -405, -243, 41, -323,
	154, -324, 90, -243, 41, -566, -565, -220, -181, -165,
	-164, 85, 85, 85, 536, 536, 536, -460, -460, -460,
	-460, -460, -462, -460, -460, -460, -460, -460, -331, -196,
	-324, -206, 246, -460, -460, -460, -166, -167, 145, -352,
	-324, -166, -3, -130, -129, 120, 121, 123, 617, 370,
	616, 620, 614, -404, 41, -454, 397, 396, -448, -450,
	84, -449, 84, -449, -449, -449, -449, -449, 84, 84,
	-451, 84, -451, -451, -448, -452, 84, -452, -453, 84,
	-453, -452, -324, -431, 542, -358, -360, -324, 39, -472,
	62, -161, 84, 31, 84, -187, -324, 640, 189, 168,
	631, -473, 62, -161, 84, 31, -181, -123, 39, -183,
	21, 157, 100, 90, -109, -92, 78, -109, 85, 158,
	-530, 106, 107, -533, 206, 198, -324, -107, 90, -7,
	-8, -9, -10, -47, -82, -79, -161, 233, -500, -498,
	84, 32, 424, 81, 17, -411, 240, 492, 375, 267,
	243, 351, -409, -392, -389, -387, -323, -385, -388, -387,
	-414, -302, 456, -124, 439, 438, 321, -352, -352, -352,
	-352, -352, 105, 116, 346, 106, 107, -347, -368, 32,
	317, 318, -348, -348, -348, -348, -348, -348, -348, -348,
	-348, -348, -348, -348, -356, -366, -441, 84, 136, 134,
	138, 135, 118, -350, -350, -348, -348, -245, -323, 154,
	85, 158, -352, -523, -522, 120, -352, -352, -352, -352,
	-324, -520, -521, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 366, 361, 367, 365, 354, 373,
	368, 369, 191, 523, 524, 517, 518, 519, 520, 521,
	522, -358, -358, -352, -520, -358, -295, 33, 32, -360,
	-360, -360, 85, -352, -534, 344, 343, 345, -184, -324,
	-358, 85, 85, 85, 100, -360, -360, -358, -348, -358,
	-358, -358, -358, -521, -295, -295, -295, -295, 145, -360,
	-360, -295, -295, -295, -295, 145, -295, -295, -295, -295,
	-295, -295, -295, -295, -295, -295, -295, 85, 85, 85,
	145, -360, -182, -122, -481, -480, -352, 41, -123, -183,
	-576, 624, 84, -302, -564, 90, 90, 639, 168, 17,
	492, 482, 483, 167, 170, 169, -324, 116, 35, 84,
	-196, -372, -372, -372, -542, -324, 91, -393, -390, -387,
	-324, -324, -383, -324, -313, -220, -372, -372, -372, -372,
	-220, -254, 54, 55, 56, -387, -155, 57, 58, -538,
	-525, 35, -185, -324, -285, -350, -350, -352, -387, 271,
	-583, -336, -336, -314, -313, -338, -333, -338, -338, -285,
	-334, -336, -336, -352, -338, -334, -285, -324, 456, -285,
	-285, -427, -336, -335, -324, -335, -372, -313, -314, -314,
	-220, -220, -266, -271, -267, -272, 263, 237, 359, 360,
	235, 233, 11, 234, -279, 310, -373, 500, -249, -250,
	78, 42, -252, 261, 401, 394, 273, 277, 94, 278,
	434, 279, 242, 281, 282, 283, 298, 300, 253, 284,
	285, 286, 425, 287, 162, 299, 288, 289, 290, 377,
	-244, 6, 332, 41, 52, 53, 448, 447, 545, 542,
	274, -542, -540, 31, -324, 31, -393, -324, -324, -174,
	-169, -173, -170, -175, -288, -290, -172, 84, -220, -164,
	-324, 158, 480, 482, 483, -569, -405, -569, -405, 32,
	424, -408, 424, 32, -383, -402, 476, 478, -398, 90,
	425, -388, -407, 81, 154, -480, -405, -405, -407, -407,
	153, 158, -567, 481, 482, 229, -182, 100, 100, 100,
	-222, -220, -542, -392, -383, -324, -460, -222, -222, -222,
	-326, -326, 84, 157, 36, -324, -324, -324, -284, 158,
	-283, 17, -325, -324, 35, 90, 157, -284, -131, -129,
	122, -352, -6, 616, -352, -6, -6, -352, -6, -352,
	-458, 398, 100, 100, -305, 90, -305, 100, 100, 100,
	548, 85, 90, -396, 81, -474, -361, -518, 605, -189,
	85, -184, -516, -517, -184, -188, -324, -472, -212, 126,
	126, 126, -474, -189, 85, -516, -182, 606, -123, -179,
	-178, -352, -324, 24, -109, -92, -528, 157, 351, 158,
	-185, -411, -391, -388, -413, 145, -324, -399, 158, 542,
	642, 88, 244, -555, -554, 416, 85, 158, -484, 245,
	499, 90, 639, 432, 224, 225, 105, 346, 106, 107,
	-441, -360, -356, -350, -350, -348, -348, -354, 258, -354,
	115, -352, 640, -351, -522, 122, -352, 35, 158, 35,
	158, 82, 157, 85, 85, 17, 17, 85, -352, 85,
	85, 85, 85, 17, 17, -352, 85, 157, 85, 85,
	85, 85, 82, 85, 158, 85, 85, 85, 85, 158,
	-360, -360, -352, -360, 85, 85, 85, -352, -352, -352,
	-360, 85, -352, -352, -352, -352, -352, -352, -352, -352,
	-352, -352, -352, -421, 451, -421, -421, 158, 158, 158,
	85, -123, 84, 100, 158, 635, -309, -308, 90, -324,
	168, -324, 168, 171, 171, 170, 24, 36, -205, -207,
	-208, -209, -210, -211, 136, 159, 160, 84, -220, -220,
	-220, -544, 402, -556, 158, 41, -554, 492, 240, -151,
	321, -376, 82, -158, 17, 542, -220, -220, -220, -220,
	-233, 35, 17, -168, -221, -324, 84, 85, 158, -384,
	82, -324, -314, -285, -285, -338, -285, -285, 158, 23,
	-336, -338, -338, -342, 639, -334, -342, 157, -342, -313,
	-447, 35, -186, 158, 21, 263, -219, -321, -216, -218,
	248, -341, -217, 251, -512, 249, 247, 110, 252, 306,
	111, 242, -321, -321, 248, -253, 244, 35, -321, -269,
	242, 349, 306, 249, 21, 263, -268, 242, 111, -324,
	248, 252, 249, 247, -320, 126, -312, 153, 244, 43,
	377, -320, 546, 263, -320, -320, -320, -320, -320, -320,
	-320, 280, 280, -320, -320, -320, -320, -320, -320, -320,
	-320, -320, -320, -320, 163, -320, -320, -320, -320, -320,
	-320, 84, 275, 276, -545, 402, 31, 357, 357, 358,
	-556, 31, -159, 351, 31, -291, -292, -293, -294, 69,
	73, 75, 79, 70, 71, 72, 76, 31, 158, -322,
	-327, 35, -324, 90, -322, -164, -169, -174, -322, 84,
	-568, -570, 484, 481, 487, -407, -407, 244, 84, 126,
	-407, -407, 41, -323, -565, 488, 482, -123, 158, 81,
	-222, -197, -198, -199, -200, -226, -302, 193, 196, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 209, 210,
	207, 208, 257, 188, 189, 190, 191, 211, 174, 194,
	540, 175, 176, 177, 178, 179, 180, 183, 184, 185,
	186, 182, -324, -206, -285, -167, -169, -324, 90, -324,
	145, -285, 123, -6, 121, -135, -134, -133, 124, 614,
	620, 123, 123, 123, 85, 85, 85, 158, 85, 85,
	85, 158, 85, 158, 100, -487, 461, 40, 158, 84,
	85, 158, 62, 158, 126, 85, 158, -352, -324, 90,
	-352, 85, 62, -123, 90, 158, -176, 37, 38, 157,
	434, -324, -498, 85, -413, 158, 244, 157, 157, -389,
	380, -323, -391, 21, 542, -302, 39, -309, 126, 639,
	-324, 85, -354, -354, 115, -350, -347, 85, 123, -352,
	121, -224, -226, 396, 397, -352, -224, -225, -231, 154,
	192, 257, 191, 190, 188, 396, 397, -243, -324, -352,
	-352, 85, -352, -352, 17, -324, -243, -348, -352, -181,
	-181, 85, 85, -420, -421, -420, -420, 85, 85, 85,
	85, -420, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 85, 84, 100, 102, 100, 102, -480, -577,
	64, 622, 63, 424, 105, 311, 158, 100, 90, 640,
	158, 126, -324, 17, 240, 171, -557, 315, 351, 388,
	85, 158, -302, -197, -186, 84, -186, -547, 463, 404,
	414, -320, -344, -343, 353, 42, -466, 425, 410, 411,
	-390, 271, -324, -324, -553, 97, 126, 81, 336, 340,
	341, 337, 338, 339, -370, -371, -369, -373, -540, 84,
	84, -161, 35, 134, -158, 84, 84, 35, -442, 326,
	-226, -220, -168, -324, 17, 158, -539, 157, -1, -324,
	-383, -336, -285, -352, -352, -285, -336, -336, 168, -338,
	-324, -442, -226, 35, -267, 237, 234, -417, 308, 309,
	-418, -432, 311, -434, 84, -223, -302, -217, -511, -512,
	-372, -324, 111, -511, 111, 84, -223, -302, -302, -270,
	-335, -302, -324, -324, -324, -324, -275, -274, -302, -277,
	32, -278, -324, -324, -324, -324, 111, -324, 111, -248,
	41, 49, 50, 51, -320, -320, 195, -251, 41, 424,
	426, 427, -277, 100, 100, 100, 100, 90, 90, 90,
	-320, -320, 100, 90, -327, 90, -513, 170, 45, 46,
	100, 100, 100, 100, 41, 90, -256, 41, 291, 295,
	292, 293, 294, 90, 100, 41, 100, 41, 100, 41,
	-324, 84, -514, -515, 90, -547, -320, 357, -404, 126,
	126, -344, -552, 321, -160, 492, 32, -190, 237, 234,
	-540, -395, -394, -302, -173, -173, -173, -173, 69, 69,
	69, 69, 74, 69, 74, 69, -293, -395, -175, -186,
	-327, 85, -562, -561, -560, -558, 77, 245, 78, -358,
	481, 485, 486, -391, -339, 90, -398, -194, 24, -220,
	-220, -464, 301, 302, 85, 158, -226, -287, 19, 157,
	-287, 119, -6, -131, -133, -352, -6, -352, 616, 370,
	617, 90, 100, 100, -495, 445, 440, 442, 111, -361,
	-482, -481, 62, -161, -184, -474, -517, -480, -324, 640,
	640, 640, 640, 62, -161, -474, -194, -487, -178, -177,
	44, -324, 100, 17, -388, -383, 145, 145, -324, 381,
	-399, 90, 403, 90, 240, 640, 90, -309, -347, -352,
	85, -234, 179, 178, -234, 35, 85, 85, -449, -449,
	-448, -451, -448, -234, -234, 85, 85, 24, 85, 85,
	85, -352, 85, 85, 158, -470, 501, -471, 575, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -363, -362, 263, 446,
	629, 629, 446, 629, 629, 85, 158, -520, 158, -315,
	316, -315, -308, 90, 244, 168, -324, -324, 90, 90,
	-209, -226, 85, 35, -213, -214, -215, -223, -216, -218,
	35, -548, 94, -543, 90, -324, 91, -549, 94, 405,
	156, 355, 41, 406, 407, 422, 350, 100, 100, 412,
	-541, -324, -159, -159, -551, 53, 126, 90, -220, -369,
	-312, 153, 282, 329, -282, -281, -324, 90, -213, -161,
	-220, -213, -213, -161, -443, 328, 21, 100, 144, -187,
	82, 157, -169, -221, -324, 145, 85, -285, -342, -285,
	-285, 126, -336, -443, -161, -429, 312, 84, -427, 84,
	-427, 111, 337, -435, -433, 263, -273, 45, 47, -226,
	-509, -324, -507, -509, -324, -507, -507, -372, -352, -273,
	-223, 244, 31, 234, -276, 334, 335, 340, -400, 307,
	116, -400, 158, -176, 158, -324, -243, -243, 31, 90,
	90, -222, 85, 158, 126, -548, -543, 126, -405, 90,
	90, -549, -553, 126, -152, 94, -313, 158, -190, -190,
	-285, 158, 126, -192, -191, 81, 82, -193, 81, -191,
	69, 69, -285, -560, -559, 24, -512, -512, -512, 85,
	85, 15, -199, 41, -286, 20, 21, 145, -286, 123,
	121, 123, 123, -324, 85, 85, -455, 607, -491, -493,
	440, 21, 21, 15, 245, 85, -474, -474, -495, 45,
	46, -383, -399, 425, -220, 158, 640, -224, -352, 85,
	-352, 85, 90, 85, 90, -181, 21, 85, 158, 85,
	85, 85, 158, 85, 85, -352, 85, -520, -316, 189,
	90, -316, 351, -324, 17, 238, -161, 85, 158, -161,
	90, -546, 416, 90, 90, 100, 41, 100, 156, 408,
	-467, -152, -152, -550, 94, 126, 639, 84, -320, -320,
	-320, -324, 85, 158, -320, -320, 85, 85, 85, -241,
	542, -444, 262, 100, 144, 100, 144, 100, -322, -169,
	-324, -285, -539, 157, 90, -285, -444, -419, 313, 100,
	-348, 84, -348, 84, -428, 310, 84, 85, 158, -324,
	-302, -238, -237, -235, 105, 116, 41, 394, -236, 94,
	153, 296, 299, 298, 274, 297, -265, -340, 81, 400,
	334, 335, -373, 607, 530, 247, 110, 111, 382, -341,
	84, 84, 82, 316, 84, 84, -509, 85, -273, -302,
	41, -276, 41, 347, 307, -274, -324, 153, -243, 85,
	-515, 90, -546, 90, -407, -551, 90, 90, -540, -181,
	-394, -480, -352, 84, -352, 84, 69, 11, 19, -345,
	-352, -360, 246, -6, 617, 370, -258, 608, 90, 21,
	90, -489, 90, -395, -455, -126, -255, -312, 279, 85,
	85, 85, -420, -420, -423, -422, -426, 446, 308, 454,
	-360, 90, 90, 85, 85, 90, -324, 244, 168, -201,
	-226, -156, 542, -241, -215, -156, 21, 542, 354, 41,
	100, 41, 409, 126, 106, 107, -310, -311, 90, -378,
	-380, -302, 84, -243, -245, 90, -281, -345, -345, -239,
	-161, 35, -240, -279, -373, -125, -124, -239, 84, -445,
	162, 100, 144, 100, 100, -285, -285, 640, -445, -434,
	21, 85, -414, 85, -414, 84, 126, -348, -433, -436,
	62, -235, 105, -348, 90, -245, -246, 41, 295, 291,
	126, 126, -247, 41, 275, 276, -257, 84, 306, 15,
	195, 84, 111, 111, -220, -378, -378, -510, 336, 337,
	338, 342, 340, 341, 339, -510, -378, -378, 84, -401,
	-400, -348, -320, -320, 153, -550, -182, -185, -508, -324,
	247, 21, 21, -465, 542, -324, -324, -306, 609, 100,
	90, 442, -258, -456, 610, -485, -427, -243, 126, 85,
	-425, 118, 408, 412, -346, -349, 100, 102, 187, 156,
	85, 85, 351, -324, 541, -157, 61, 488, 90, 91,
	403, 90, 91, 354, 90, 640, 158, 126, 85, 158,
	-448, -352, -415, 263, -161, 158, -279, -312, -126, -415,
	-242, -280, -324, 90, -463, 170, 327, 542, 100, 144,
	100, -181, -446, 170, 327, -418, 85, 85, 85, -414,
	100, 85, -440, -437, 84, -279, 265, 136, 90, 90,
	100, 84, -475, 31, 90, -379, 84, 85, 85, 85,
	85, -378, 100, -243, -320, 85, 85, 158, 48, 84,
	21, -306, -457, 611, 90, -494, 445, -488, -486, 440,
	441, 442, 443, 90, -424, -425, 412, -346, -349, 605,
	452, 452, 452, -324, 244, -203, -324, 306, 425, -311,
	90, -381, -380, -176, 85, -416, 315, 21, -279, -320,
	-416, 85, 158, -320, -320, 327, 100, 144, 100, -182,
	327, -430, 314, 85, -440, -279, -439, -438, 313, 266,
	84, 85, -352, -364, -320, 85, -260, -259, 538, -378,
	-381, 82, -381, 82, -381, 82, -381, 82, 85, -243,
	-324, 247, -307, -324, -489, 90, -496, 245, -492, -493,
	444, -486, 21, 442, 21, 21, -127, 158, 115, 453,
	453, 453, 351, -202, 35, 447, 381, -382, 253, 347,
	348, 94, 542, 334, 335, -176, 21, -417, -243, -280,
	-345, -345, 100, 100, 85, 158, -324, 262, 84, -359,
	-353, -352, 262, 85, -324, -264, -262, -263, 81, 459,
	304, 305, 85, -510, -510, -510, -510, -265, 85, 158,
	-503, 84, 100, -491, -490, -492, 21, -489, 21, -489,
	-489, 449, -424, -324, 90, -320, -320, 90, 90, 333,
	-302, 84, -429, -438, -437, -359, 85, 158, -400, -263,
	81, -262, 81, 16, 15, -381, -381, -381, -381, -324,
	-506, 31, 85, -502, -501, -303, -497, -324, 445, 446,
	90, -489, 126, -580, -579, 628, 100, 100, -324, -414,
	-419, 85, -353, -261, 301, 302, 31, 170, -261, -505,
	-504, -304, 85, 158, 157, 90, 90, 85, -434, 105,
	41, 303, 158, 126, -501, -324, -504, 41, -352, 157,
	-324,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
	54, 0, 282, 283, 284, 895, 896, 897, 898, 899,
	900, 901, 0, 0, 0, 0, 0, 650, 651, 0,
	616, 0, 0, 0, 0, 0, 0, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 383,
	384, 385, 386, 387, 388, 389, 390, 0, 307, 303,
	228, 229, 230, 231, 232, 314, 315, 477, 0, 0,
	0, 0, 733, -2, 72, 0, 0, 296, 0, 287,
	287, 902, 903, 904, 905, 906, 907, 908, 909, 910,
	911, 912, 913, 914, -2, 663, 0, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 628, 629,
	630, 631, 367, 368, 369, 363, 364, 366, 365, -2,
	0, 663, 0, 0, 0, 741, 0, 0, 0, 0,
	0, 784, 806, 23, 0, 7, 9, 10, 11, 12,
	13, 14, 15, 16, 17, 18, 0, 0, 19, 0,
	19, 0, 0, 0, 1312, 1313, 1314, 1315, 2096, 2066,
	-2, 1838, 1815, 1990, 1991, 2127, 2128, 2129, 2130, 2131,
	2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141,
	2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151,
	2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161,
	2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171,
	2172, 2173, 2174, 2175, 2176, 1772, 1773, 1774, 1775, 1776,
	1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786,
	1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796,
	1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806,
	1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1816, 1817,
	1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827,
	1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837,
	1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848,
	1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858,
	1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868,
	1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878,
	1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888,
	1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898,
	1899, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1908, 1909,
	1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919,
	1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929,
	1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939,
	1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949,
	1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959,
	1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969,
	1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979,
	1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989,
	1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001,
	2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,
	2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021,
	2022, -2, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031,
	2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041,
	2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051,
	2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061,
	2062, 2063, 2064, 2065, 2067, 2068, 2069, 2070, 2071, 2072,
	2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, -2,
	-2, -2, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092,
	2093, 2094, 2095, 2097, 2098, 2099, 2100, 2101, 2102, 2103,
	2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113,
	2114, 2115, 2116, 0, 280, 278, 1785, 1815, 1838, 1892,
	1903, 1904, 1938, 1990, 1991, 2023, 2066, 2082, 2083, 2084,
	2096, 0, 0, 919, 0, 711, 0, 0, 716, 1260,
	711, 308, 652, 653, 741, 767, 614, 0, 345, 0,
	1829, 349, 2073, 0, 0, 0, 611, 339, 340, 341,
	342, 343, 344, 0, 0, 894, 0, 0, 335, 0,
	302, 1894, 2095, 1316, 0, 0, 0, 0, 0, 171,
	1038, 173, 1040, 177, 185, 0, 0, 0, 190, 191,
	194, 195, 196, 197, 198, 0, 202, 0, 204, 207,
	0, 209, 210, 0, 213, 214, 215, 0, 225, 226,
	227, 1041, 1042, 1043, -2, 100, 917, 1743, 1630, 0,
	1637, 1650, 1661, 1393, 1394, 1395, 1396, 0, 0, 0,
	0, 0, 0, 1404, 1405, 0, 1433, 2131, 2172, 2173,
	0, 1413, 1414, 1415, 1416, 1417, 1418, 111, 123, 124,
	1683, 1684, 1685, 1686, 1687, 1688, 1689, 0, 1691, 1692,
	1693, 1601, 1380, 1312, 0, 2140, 0, 2162, 2167, 2168,
	2169, 2170, 2161, 0, 0, 1586, 0, 1576, 0, 0,
	-2, -2, 0, 0, 1963, -2, 2174, 2175, 2176, 2137,
	2158, 2166, 2141, 2142, 2165, 2133, 2134, 2135, 2128, 2129,
	2130, 2132, 2144, 2146, 2157, 0, 2153, 2163, 2164, 2071,
	0, 0, 0, 0, 0, 0, 2113, 125, 126, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 1597, -2, -2, 1600,
	-2, 1603, -2, -2, -2, -2, 1608, 1609, -2, 1611,
	-2, -2, -2, -2, -2, -2, -2, 1588, 1589, 1590,
	1591, 1580, 1581, 1582, 1583, 1584, 1585, -2, -2, -2,
	767, 844, 0, 767, 0, 742, 789, 792, 795, 798,
	745, 0, 0, 73, 74, 0, 0, 0, 297, 298,
	286, 288, 0, 292, 0, 285, 1074, 0, 0, 0,
	0, 1074, 1074, 1074, 1074, 1074, 0, 1074, 0, 0,
	0, 0, 0, 1074, 0, 952, 1045, 1046, 1047, 1072,
	1073, 1146, 0, 0, 0, 668, 664, 665, 666, 667,
	755, 0, 757, 760, 589, 589, 817, 535, 0, 0,
	0, 589, 0, 549, 541, 0, 0, 0, 589, 0,
	0, 762, 762, 0, 592, 601, 589, 589, -2, 589,
	589, 586, 589, 0, 0, 1086, 555, 556, 557, 541,
	541, 560, 561, 562, 572, 573, 602, 1767, 0, 0,
	477, 477, 0, 477, 0, 477, 477, 477, 670, 1933,
	1836, 1909, 1894, 2095, 0, 253, 1963, 258, 0, 1837,
	1856, 0, 0, 1874, 0, -2, 0, 324, 767, 0,
	0, 741, 0, 0, 0, 0, 0, 477, 477, 477,
	477, 477, 1145, 477, 477, 477, 477, 477, 0, 0,
	0, 477, 477, 477, 0, 0, 807, 808, 803, 804,
	805, 809, 810, 5, 6, 19, 0, 0, 0, 0,
	0, 0, 79, 78, 0, 1744, 1762, 1696, 1697, 1698,
	1749, 1700, 1753, 1753, 1753, 1753, 1729, 1730, 1731, 1732,
	1733, 1734, 1735, 1736, 1737, 1753, 1753, 0, 0, 1742,
	1720, 1751, 1751, 1751, 1749, 1746, 1701, 1702, 1703, 1704,
	1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714,
	1756, 1756, 1759, 1759, 1756, 0, 381, 379, 380, 1626,
	0, 0, 0, 0, 711, 715, 1258, 0, 0, 0,
	767, -2, 0, 0, 615, 346, 1317, 0, 0, 350,
	0, 351, 0, 0, 0, 370, 0, 373, 358, 359,
	360, 354, 0, 151, 0, 337, 338, 0, 0, 304,
	0, 0, 0, 478, 0, 0, 0, 0, 0, 0,
	182, 178, 186, 189, 199, 206, 0, 218, 220, 223,
	179, 187, 192, 193, 200, 221, 180, 183, 184, 188,
	222, 224, 181, 201, 205, 219, 203, 208, 211, 212,
	217, 0, 152, 0, 0, 0, 0, 0, 1636, 0,
	0, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 1630, 0,
	0, 1399, 1400, 1401, 1402, 0, 1406, 0, 1434, 0,
	0, 0, 0, 0, 1690, 1694, 0, 1626, 1626, 0,
	1626, 1622, 0, 0, 0, 0, 0, 0, 1626, 1559,
	0, 0, 1561, 1577, 0, 0, 1563, 1564, 0, 1567,
	1568, 1626, 0, 1626, 1572, 1626, 1626, 1626, 1555, 1556,
	0, 1622, 1622, 1622, 1622, 0, 0, 1622, 1622, 1622,
	1622, 1622, 1622, 1622, 1622, 1622, 1622, 1622, 1622, 1622,
	1622, 1622, 0, 0, 0, 0, 762, 0, 768, 0,
	-2, 0, 786, 788, 790, 791, 793, 794, 796, 797,
	799, 800, 747, 0, 0, 75, 0, 0, 0, 0,
	0, 0, 290, 0, 295, 0, 0, 0, 916, 0,
	0, 1074, 1074, 1074, 953, 0, 0, 0, 0, 0,
	0, 0, 0, 1074, 1074, 1074, 1074, 0, 1092, 0,
	0, 0, 670, 669, 0, 756, 0, 0, 817, 0,
	0, 533, 534, 0, 0, 541, 589, 589, 547, 548,
	543, 542, 597, 598, 592, 0, 592, 592, 817, 0,
	566, 567, 568, 589, 589, 574, 763, 0, 575, 576,
	592, 0, 599, 600, 817, 0, 0, 817, 817, 0,
	584, 585, 587, 589, 0, 0, 1074, 0, 607, 543,
	543, 1768, 1769, 0, 0, 1083, 0, 0, 0, 610,
	0, 0, 0, 0, 671, 233, 236, 0, 239, 0,
	1933, 0, 1933, 0, 246, 0, 0, 0, 0, 0,
	0, 276, 277, 0, 0, 0, 0, 267, 270, 1252,
	1253, 1035, 1036, 271, 272, 316, 317, 0, 762, 785,
	787, 781, 782, 783, 0, 0, 0, 0, 0, 0,
	0, 0, 477, 0, 0, 0, 0, 0, 646, 0,
	932, 648, 0, 0, 0, 0, 825, 819, 821, 889,
	111, 825, 8, 96, 93, 0, 19, 0, 0, 19,
	19, 0, 19, 281, 0, 1765, 1763, 1764, 1699, 1750,
	0, 1725, 0, 1726, 1727, 1728, 1738, 1739, 0, 0,
	1721, 0, 1722, 1723, 1724, 1715, 0, 1716, 1717, 0,
	1718, 1719, 279, 378, 0, 0, 1627, 920, 0, 689,
	703, 684, 0, 692, 0, 0, 1260, 1261, 0, 0,
	0, 672, 703, 674, 0, 692, 762, 739, 0, 717,
	0, 0, 347, 0, 355, 352, 0, 356, 0, 0,
	372, 374, 375, 376, 361, 362, 612, 333, 334, 325,
	326, 327, 328, 329, 330, 331, 332, 0, 336, 121,
	0, 305, 306, 0, 0, 0, 165, 166, 167, 168,
	169, 170, 172, 156, 635, 637, 1027, 1039, 0, 1030,
	0, 175, 216, 148, 0, 0, 0, 1631, 1632, 1633,
	1634, 1635, 1640, 0, 1642, 1644, 1646, 1648, 0, 1666,
	-2, -2, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388,
	1389, 1390, 1391, 1392, 1651, 1664, 1665, 0, 0, 0,
	0, 0, 0, 1662, 1662, 1657, 0, 1419, 1254, 1255,
	1397, 0, 0, 1431, 1435, 0, 0, 0, 0, 0,
	112, 1621, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533,
	1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543,
	1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553,
	1554, 0, 0, 1630, 0, 0, 0, 1623, 1624, 0,
	0, 0, 1514, 0, 0, 1520, 1521, 1522, 0, 698,
	0, 1587, 1560, 1578, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 843, 845, 0, 707, 709, 710, 736, 717,
	743, 0, 0, 0, 71, 76, 0, 1113, 0, 0,
	0, 299, 300, 0, 0, 294, 0, 0, 0, -2,
	0, 0, 0, 0, 0, 968, 969, 475, 1021, 0,
	0, 0, 1037, 1062, 1070, 0, 0, 0, 0, 0,
	1119, 954, 959, 960, 961, 955, 956, 962, 963, 0,
	758, 0, 0, 858, 532, 590, 591, 818, 538, 1894,
	543, 817, 817, 550, 544, 551, 594, 552, 553, 554,
	592, 817, 817, 764, 589, 592, 577, 593, 592, 595,
	581, 0, 588, 595, 608, 595, 0, 606, 558, 559,
	1121, 760, 393, 394, 395, 397, 0, 445, 445, 445,
	428, 445, 0, 0, 416, 1770, 0, 0, 0, 0,
	425, 1770, 0, 0, 1770, 1770, 1770, 1770, 1770, 1770,
	1770, 0, 0, 1770, 1770, 1770, 1770, 1770, 1770, 1770,
	1770, 1770, 1770, 1770, 0, 1770, 1770, 1770, 1770, 1770,
	1238, 1770, 0, 1084, 435, 436, 437, 438, 443, 444,
	0, 472, 0, 0, 967, 0, 475, 0, 1007, 830,
	0, 831, 832, 828, 860, 884, 884, 0, 884, 864,
	1260, 0, 0, 244, 245, 234, 0, 235, 0, 247,
	248, 0, 250, 251, 252, 259, 1836, 1909, 254, 256,
	0, 0, 260, 273, 274, 275, 0, 0, 265, 266,
	0, 0, 319, 320, 322, 0, 717, 1087, 1088, 1089,
	632, 1256, 633, 634, 638, 0, 0, 641, 642, 643,
	644, 645, 934, 0, 0, 1014, 1015, 1016, 817, 0,
	826, 0, 822, 890, 0, 892, 0, 817, 0, 94,
	19, 0, 87, 84, 0, 0, 0, 0, 0, 1745,
	1695, 1766, 0, 0, 0, 1747, 0, 0, 0, 0,
	0, 77, 719, 679, 0, 683, 700, 0, 704, 0,
	0, 696, 688, 693, 0, 0, 713, 680, 1259, 0,
	0, 0, 673, 0, 0, 678, 717, 0, 740, 769,
	770, 773, 1318, 0, 357, 353, 371, 0, 477, 0,
	0, 0, 159, 1024, 0, 160, 164, 154, 0, 0,
	0, 1029, 0, 1026, 1031, 0, 174, 0, 0, 149,
	150, 1104, 1113, 0, 0, 0, 1641, 1643, 1645, 1647,
	1649, 0, 1652, 1662, 1662, 1658, 0, 1653, 0, 1655,
	0, 1631, 1403, 0, 1436, 0, 0, 0, 0, 0,
	0, 0, 0, 1504, 1505, 0, 0, 1509, 0, 1511,
	1512, 1513, 1515, 0, 0, 0, 1519, 0, 1558, 1579,
	1562, 1565, 0, 1569, 0, 1571, 1573, 1574, 1575, 0,
	767, 767, 0, 0, 1475, 1475, 1475, 0, 0, 0,
	0, 1475, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1420, 0, 1421, 1422, 0, 0, 0,
	846, 737, 0, 0, 0, 0, 0, 1111, 0, 64,
	0, 0, 301, 289, 291, 0, 0, 1075, 0, 0,
	922, 923, 925, 0, 928, 929, 930, 934, 760, 0,
	760, 979, 1770, 479, 0, 0, 1023, 0, 0, 996,
	0, 0, 0, -2, 0, 0, 1070, 0, 0, 0,
	1123, 0, 0, 0, 657, 661, 23, 761, 0, 536,
	0, 537, 589, 545, 546, 817, 569, 570, 0, 0,
	817, 589, 589, 580, 0, 592, 603, 0, 604, 605,
	1123, 0, 0, 1083, 1189, 1157, 406, 0, 1273, 1274,
	446, 0, 1280, 1289, 1074, 1350, 0, 1289, 0, 0,
	1291, 1292, 0, 0, 0, 0, 429, 430, 0, 415,
	0, 0, 0, 0, 0, 0, 414, 0, 0, 456,
	0, 0, 0, 0, 0, 1771, 1770, 1770, 0, 423,
	424, 0, 427, 0, 0, 0, 0, 0, 0, 0,
	0, 1770, 1770, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1229, 0, 0, 0, 0, 0,
	0, 0, 1244, 1245, 979, 1770, 0, 0, 0, 0,
	479, 994, 1012, 0, 0, 0, 0, 0, 0, 850,
	0, 0, 0, 849, 0, 0, 0, 0, 0, 760,
	885, 0, 887, 888, 862, -2, 0, 830, 867, 1626,
	237, 238, 0, 0, 243, 261, 263, 0, 0, 0,
	262, 264, 268, 269, 318, 321, 323, 779, 0, 0,
	1147, 0, 935, 936, 938, 939, 0, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1820, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 933, 649, 813, 820, 827, 891, 893, 112,
	823, 813, 0, 97, 19, 96, 88, 89, 0, 19,
	0, 0, 0, 0, 1755, 1754, 1740, 0, 1741, 1752,
	1757, 0, 1760, 0, 382, 723, 0, 0, 703, 705,
	0, 0, 703, 0, 0, 712, 0, 0, 0, 0,
	0, 0, 703, 779, 719, 0, 776, 774, 775, 0,
	0, 613, 122, 377, 0, 0, 0, 0, 0, 636,
	0, 1028, 156, 0, 0, 176, 0, 0, 0, 1113,
	1108, 1625, 1654, 1656, 0, 1663, 1659, 1398, 1407, 1432,
	0, 0, 1438, 1450, 1450, 0, 0, 0, 1441, 1753,
	1753, 1444, 1749, 1751, 1749, 1450, 1450, 0, 113, 0,
	0, 1510, 0, 0, 0, 699, 0, 0, 0, 1471,
	1473, 1475, 1475, 1482, 1476, 1483, 1484, 1475, 1475, 1475,
	1475, 1489, 1475, 1475, 1475, 1475, 1475, 1475, 1475, 1475,
	1475, 1475, 1475, 1469, 0, 0, 1684, 1685, 708, 0,
	0, 750, 751, 752, 753, 754, 0, 0, 57, 57,
	1113, 0, 65, 0, 0, 293, 61, 62, 0, 0,
	0, 927, 0, 0, 0, 1266, 0, 983, 980, 981,
	982, 0, 1018, 480, 481, 482, 483, 0, 0, 0,
	1022, 0, 1007, 1007, 989, 0, 0, 0, 1063, 1064,
	1065, 1066, 1067, 1068, 1069, -2, 1078, 0, 0, 0,
	1266, 1097, 0, 0, 1102, 1266, 1266, 0, 1131, 0,
	1120, 711, 0, -2, 0, 0, 659, 0, 0, 859,
	539, 817, 563, 765, 766, 595, 817, 817, 0, 589,
	609, 1131, 1122, 0, 396, 445, 0, 1177, 0, 0,
	1183, 0, 1190, 399, 0, 447, 0, 1279, 1306, 1290,
	1306, 1351, 1306, 1306, 1074, 0, 447, 0, 0, 417,
	453, 0, 0, 0, 0, 0, 413, 450, 773, 400,
	402, 403, 404, 454, 455, 457, 0, 459, 460, 419,
	431, 432, 433, 434, 0, 0, 0, 426, 439, 440,
	441, 442, 401, 1206, 1207, 1208, 1211, 1212, 1213, 1214,
	0, 0, 1217, 1218, 1219, 1220, 1221, 1303, 1304, 1305,
	1222, 1223, 1224, 1225, 1226, 1227, 1228, 1246, 1247, 1248,
	1249, 1250, 1251, 1230, 1231, 1232, 1233, 1234, 1235, 1236,
	1237, 0, 0, 1241, 0, 983, 0, 0, 0, 0,
	0, 1018, 996, 0, 1003, 0, 1008, 1009, 0, 0,
	681, 817, 311, 0, 854, 847, 0, 836, 851, 852,
	853, 839, 0, 841, 0, 837, 838, 817, 829, 861,
	886, 863, 866, 868, 869, 875, 0, 0, 0, 0,
	240, 241, 242, 249, 0, 499, 255, 735, 0, 1257,
	639, 640, 1148, 1149, 647, 0, 940, 811, 0, 0,
	811, 92, 95, 0, 90, 0, 0, 0, 0, 82,
	80, 1748, 0, 0, 725, 136, 0, 0, 0, 701,
	0, 706, 703, 687, 697, 686, 694, 695, 714, 1262,
	1263, 1264, 1265, 703, 677, 676, 738, 723, 771, 772,
	0, 1319, 348, 0, 1025, 156, 161, 162, 163, 157,
	155, 1032, 0, 1034, 0, 1106, 0, 0, 1660, 1437,
	1408, 1439, 1451, 1452, 1440, 0, 1410, 1411, 1442, 1443,
	1445, 1446, 1447, 1448, 1449, 1412, 1506, 0, 1508, 1516,
	1517, 0, 1566, 1570, 0, 0, 0, 0, 0, 1480,
	1481, 1485, 1486, 1487, 1488, 1490, 1491, 1492, 1493, 1494,
	1495, 1496, 1497, 1498, 1499, 1500, 767, 1470, 0, 0,
	0, 0, 0, 0, 0, 748, 0, 0, 0, 59,
	0, 59, 1112, 1114, 0, 0, 0, 63, 915, 918,
	924, 926, 0, 0, 0, 1267, 1268, 1270, 1271, 1272,
	0, 951, 0, 0, 971, 972, 973, 985, 0, 0,
	0, 485, 486, 0, 0, 0, 498, 494, 495, 496,
	476, 1017, 1003, 1003, 992, 0, 0, 1002, 0, 1079,
	1770, 1770, 1770, 0, 0, 1191, 1770, 1770, 0, 1099,
	1101, 0, 0, 1195, 1134, 0, 0, 1125, 0, 884,
	0, 0, 817, 658, 661, 662, 759, 540, 578, 582,
	579, 0, 817, 1134, 392, 1155, 0, 0, 0, 0,
	0, 1187, 0, 0, 1159, 0, 418, 448, 0, -2,
	0, 1307, 0, 1293, 1307, 0, 0, 1306, 0, 407,
	447, 0, 0, 0, 461, 465, 466, 0, 463, 1346,
	0, 464, 0, 452, 0, 458, 1209, 1210, 0, 1215,
	1216, 0, 1240, 0, 0, 467, 0, 0, 0, 468,
	469, 474, 989, 0, 1006, 0, 1013, 0, 1010, 1011,
	767, 0, 0, 833, 855, 0, 0, 834, 0, 835,
	840, 842, 310, 870, 0, 0, 872, 873, 874, 865,
	257, 780, 937, 0, 801, 0, 0, 824, 802, 0,
	19, 0, 0, 85, 1758, 1761, 727, 0, 724, 137,
	0, 0, 0, 0, 691, 702, 685, 675, 725, 777,
	778, 158, 153, 1033, 1116, 0, 1107, 0, 0, 1518,
	0, 1475, 1472, 1475, 1474, 1466, 0, 1423, 0, 1425,
	1426, 1427, 0, 1429, 1430, 0, 746, 0, 55, 0,
	58, 56, 0, 66, 0, 0, 957, 1195, 0, 957,
	984, 970, 0, 1019, 1020, 0, 487, 488, 0, 491,
	497, 986, 987, 988, 0, 0, 1000, 0, 0, 0,
	0, 1071, 1085, 0, 0, 0, -2, 0, -2, 1096,
	0, 1140, 0, 1132, 0, 1124, 0, 1127, 817, 817,
	-2, 655, 660, 0, 0, 583, 1140, 1157, 0, 1178,
	0, 0, 0, 0, 0, 0, 0, 1158, 0, 1171,
	449, 1308, -2, 1322, 1324, 0, 1084, 1327, 1328, 0,
	0, 0, 0, 0, 0, 1372, 1336, 0, 0, 1340,
	1341, 1342, 0, 0, 1345, 0, 1678, 1679, 0, 1349,
	0, 0, 0, 0, 0, 0, 0, 1287, 408, 409,
	0, 411, 412, 1770, 1347, 451, 405, 1770, 421, 1239,
	1242, 1243, 473, 470, 471, 992, 995, 1004, 682, 762,
	312, 313, 856, 0, 848, 879, 876, 0, 0, 941,
	812, 815, 86, 91, 0, 0, 729, 0, 726, 0,
	720, 722, 147, 690, 727, 107, 139, 0, 0, 1409,
	1507, 1557, 1478, 1479, 0, 1467, 0, 1461, 1462, 1463,
	1468, 0, 0, 749, 744, 60, 68, 0, 0, 0,
	943, 950, 964, 1090, 1269, 949, 0, 0, 484, 489,
	0, 492, 493, 0, 990, 991, 0, 998, 0, 0,
	1058, 1749, 0, 1080, 1081, 1082, 1192, 1193, 1194, 1150,
	1098, 0, -2, 1203, 0, 1094, 1116, 1150, 0, 1128,
	0, 1135, 0, 1133, 1126, 767, 656, 596, 1137, 398,
	1189, 1179, 0, 1181, 0, 0, 0, 0, 1160, -2,
	0, 1323, 1325, 1326, 1329, 1330, 1331, 1377, 1378, 1379,
	0, 0, 1334, 1374, 1375, 1376, 1335, 0, 0, 0,
	0, 0, 1676, 1677, 1370, 0, 0, 1294, 1296, 1297,
	1298, 1299, 1300, 1301, 1302, 1295, 0, 0, 0, 1286,
	1288, 410, 0, 0, 1770, 1005, 309, 0, 0, 880,
	882, 877, 878, 814, 0, 81, 83, 98, 0, 728,
	138, 0, 729, 109, 0, 130, 0, 1117, 0, 1477,
	1464, 0, 0, 0, 0, 0, 1680, 1681, 1682, 0,
	1424, 1428, 0, 67, 0, 0, 965, 966, 974, 975,
	0, 977, 978, 490, 993, 997, 1000, 0, 1049, 0,
	773, 0, 1152, 0, 1100, 1083, 1205, 1770, 1103, 1152,
	0, 1197, 1770, 1770, 1118, 0, 1130, 0, 1142, 0,
	1136, 762, 391, 0, 1139, 1175, 1180, 1182, 1184, 0,
	1188, 1186, 1161, -2, 0, 1169, 0, 0, 1332, 1333,
	0, 0, 1576, 1770, 0, 1365, 0, 1049, 1049, 1049,
	1049, 0, 462, 420, 0, 857, 871, 0, 816, 0,
	0, 718, 99, 0, 108, 127, 0, 140, 141, 0,
	0, 0, 0, 1109, 0, 1453, 0, 0, 0, 1457,
	1458, 1459, 1460, 69, 0, 0, 942, 0, 976, 999,
	1001, 1048, 1059, 1060, 773, 1093, 0, 1189, 1204, 0,
	1095, 1196, 0, 0, 0, 1129, 1141, 0, 1144, 654,
	1138, 1156, 0, 1185, 1162, 1170, 0, 1165, 0, 0,
	0, 1373, 0, 1339, 0, 1344, 1353, 1366, 0, 0,
	1275, 0, 1277, 0, 1281, 0, 1283, 0, 0, 422,
	881, 883, 0, 731, 721, 110, 114, 0, 136, 133,
	0, 142, 0, 0, 0, 0, 1105, 0, 0, 1454,
	1455, 1456, 0, 0, 944, 945, 958, 1050, 1770, 1770,
	0, 0, 0, 1056, 1057, 1061, 0, 1177, 1209, 1198,
	1199, 1200, 1143, 1176, 1164, 0, -2, 1172, 0, 0,
	1628, 1638, 1639, 1337, 1343, 1352, 1354, 1355, 0, 1367,
	1368, 1369, 1371, 1049, 1049, 1049, 1049, 1285, 730, 0,
	101, 0, 0, 131, 132, 134, 0, 143, 0, 145,
	146, 0, 1465, 70, 946, 0, 0, 1053, 1054, 0,
	1153, 0, 1155, 1166, -2, 0, 1174, 0, 1338, 1356,
	0, 1357, 0, 0, 0, 1276, 1278, 1282, 1284, 732,
	1115, 0, 115, 0, 117, 119, 120, 1309, 128, 129,
	135, 144, 0, 931, 947, 0, 1051, 1052, 1055, 0,
	1157, 1173, 1629, 1358, 1360, 1361, 0, 0, 1359, 102,
	103, 0, 116, 0, 0, 1110, 948, 1154, 1151, 1362,
	1364, 1363, 0, 0, 118, 1310, 104, 105, 106, 0,
	1311,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 117, 3, 3, 3, 148, 140, 3,
	84, 85, 145, 143, 158, 144, 157, 146, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 641, 638,
	127, 126, 128, 3, 642, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 150, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 639, 139, 640, 151,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 113,
	114, 115, 116, 118, 119, 120, 121, 122, 123, 124,
	125, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 141, 142, 147, 149, 152, 153, 154, 155, 156,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:814
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:821
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:827
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:835
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:841
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:845
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:860
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:864
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:870
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:875
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:879
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:912
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:922
		{
			var timestamp = yyDollar[2].str
			var isS3 = false
			var dir = yyDollar[4].str
			var parallelism = yyDollar[6].str
			var option []string
			var backuptype = yyDollar[7].str
			var backupts = yyDollar[8].str
			yyLOCAL = tree.NewBackupStart(timestamp, isS3, dir, parallelism, option, backuptype, backupts)
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:933
		{
			var timestamp = yyDollar[2].str
			var isS3 = true
			var dir string
			var parallelism string
			var option = yyDollar[5].strsUnion()
			var backuptype = yyDollar[7].str
			var backupts = yyDollar[8].str
			yyLOCAL = tree.NewBackupStart(timestamp, isS3, dir, parallelism, option, backuptype, backupts)
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:945
		{
			yyVAL.str = ""
		}
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:949
		{
			yyVAL.str = yyDollar[2].str
		}
	case 59:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:954
		{
			yyVAL.str = ""
		}
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:958
		{
			yyVAL.str = yyDollar[2].str
		}
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:966
		{
			yyLOCAL = &tree.CreateSnapShot{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Object:      yyDollar[6].snapshotObjectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectInfo
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:976
		{
			spLevel := tree.SnapshotLevelType{
				Level: tree.SNAPSHOTLEVELCLUSTER,
			}
			yyLOCAL = tree.ObjectInfo{
				SLevel:  spLevel,
				ObjName: "",
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ObjectInfo
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:986
		{
			spLevel := tree.SnapshotLevelType{
				Level: tree.SNAPSHOTLEVELACCOUNT,
			}
			yyLOCAL = tree.ObjectInfo{
				SLevel:  spLevel,
				ObjName: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:999
		{
			yyLOCAL = &tree.RestoreSnapShot{
				Level:        tree.RESTORELEVELCLUSTER,
				SnapShotName: tree.Identifier(yyDollar[5].cstrUnion().Compare()),
			}

		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1007
		{
			yyLOCAL = &tree.RestoreSnapShot{
				Level:        tree.RESTORELEVELACCOUNT,
				AccountName:  tree.Identifier(yyDollar[3].cstrUnion().Compare()),
				SnapShotName: tree.Identifier(yyDollar[6].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1015
		{
			yyLOCAL = &tree.RestoreSnapShot{
				Level:        tree.RESTORELEVELDATABASE,
				AccountName:  tree.Identifier(yyDollar[3].cstrUnion().Compare()),
				DatabaseName: tree.Identifier(yyDollar[5].cstrUnion().Compare()),
				SnapShotName: tree.Identifier(yyDollar[8].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1024
		{
			yyLOCAL = &tree.RestoreSnapShot{
				Level:        tree.RESTORELEVELTABLE,
				AccountName:  tree.Identifier(yyDollar[3].cstrUnion().Compare()),
				DatabaseName: tree.Identifier(yyDollar[5].cstrUnion().Compare()),
				TableName:    tree.Identifier(yyDollar[7].cstrUnion().Compare()),
				SnapShotName: tree.Identifier(yyDollar[10].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1034
		{
			yyLOCAL = &tree.RestoreSnapShot{
				Level:         tree.RESTORELEVELACCOUNT,
				AccountName:   tree.Identifier(yyDollar[3].cstrUnion().Compare()),
				SnapShotName:  tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				ToAccountName: tree.Identifier(yyDollar[9].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1043
		{
			yyLOCAL = &tree.RestoreSnapShot{
				Level:         tree.RESTORELEVELDATABASE,
				AccountName:   tree.Identifier(yyDollar[3].cstrUnion().Compare()),
				DatabaseName:  tree.Identifier(yyDollar[5].cstrUnion().Compare()),
				SnapShotName:  tree.Identifier(yyDollar[8].cstrUnion().Compare()),
				ToAccountName: tree.Identifier(yyDollar[11].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1053
		{
			yyLOCAL = &tree.RestoreSnapShot{
				Level:         tree.RESTORELEVELTABLE,
				AccountName:   tree.Identifier(yyDollar[3].cstrUnion().Compare()),
				DatabaseName:  tree.Identifier(yyDollar[5].cstrUnion().Compare()),
				TableName:     tree.Identifier(yyDollar[7].cstrUnion().Compare()),
				SnapShotName:  tree.Identifier(yyDollar[10].cstrUnion().Compare()),
				ToAccountName: tree.Identifier(yyDollar[13].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1066
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				goto ret1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1086
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1092
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1099
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1107
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1113
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1122
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1132
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1140
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1148
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1156
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1166
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1174
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1184
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1191
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1200
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1210
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1214
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1220
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1224
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1230
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1239
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1249
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1253
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1259
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1268
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1272
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1278
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1299
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
			yyLOCAL.(*tree.Load).Param.Strict = yyDollar[11].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1313
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1320
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1324
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1330
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1334
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1340
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1347
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1355
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1359
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error strict flag")
				goto ret1
			}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1371
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1375
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				goto ret1
			}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1389
		{
			yyLOCAL = tree.NewUnresolvedName(yyDollar[1].cstrUnion())
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1393
		{
			tblNameCStr := yylex.(*Lexer).GetDbOrTblNameCStr(yyDollar[1].cstrUnion().Origin())
			yyLOCAL = tree.NewUnresolvedName(tblNameCStr, yyDollar[3].cstrUnion())
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1398
		{
			dbNameCStr := yylex.(*Lexer).GetDbOrTblNameCStr(yyDollar[1].cstrUnion().Origin())
			tblNameCStr := yylex.(*Lexer).GetDbOrTblNameCStr(yyDollar[3].cstrUnion().Origin())
			yyLOCAL = tree.NewUnresolvedName(dbNameCStr, tblNameCStr, yyDollar[5].cstrUnion())
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1405
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1409
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1413
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1419
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1428
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1439
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1443
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1449
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1453
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1459
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1463
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1469
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				goto ret1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1493
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            goto ret1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1512
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1516
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1520
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1525
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1529
		{
			yyLOCAL = &tree.Lines{
				StartingBy: yyDollar[2].str,
				TerminatedBy: &tree.Terminated{
					Value: yyDollar[3].str,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1538
		{
			yyLOCAL = &tree.Lines{
				StartingBy: yyDollar[3].str,
				TerminatedBy: &tree.Terminated{
					Value: yyDollar[2].str,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1548
		{
			yyVAL.str = ""
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1555
		{
			yyVAL.str = yyDollar[3].str
		}
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1560
		{
			yyVAL.str = "\n"
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1567
		{
			yyVAL.str = yyDollar[3].str
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1572
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1576
		{
			res := &tree.Fields{
				Terminated: &tree.Terminated{
					Value: "\t",
				},
				EnclosedBy: &tree.EnclosedBy{
					Value: byte(0),
				},
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != nil {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != nil {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != nil {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1604
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1608
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1614
		{
			yyLOCAL = &tree.Fields{
				Terminated: &tree.Terminated{
					Value: yyDollar[3].str,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1622
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				goto ret1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: &tree.EnclosedBy{
					Value: b,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1642
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				goto ret1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: &tree.EnclosedBy{
					Value: b,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1661
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				goto ret1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: &tree.EscapedBy{
					Value: b,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1686
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1690
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1694
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1699
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1703
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1709
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1722
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1733
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1746
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1750
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1760
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1773
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1786
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1792
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1798
		{
			tblName := yylex.(*Lexer).GetDbOrTblName(yyDollar[1].cstrUnion().Origin())
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: tblName,
			}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1806
		{
			dbName := yylex.(*Lexer).GetDbOrTblName(yyDollar[1].cstrUnion().Origin())
			tblName := yylex.(*Lexer).GetDbOrTblName(yyDollar[3].cstrUnion().Origin())
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  dbName,
				TabName: tblName,
			}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1816
		{
			tblName := yylex.(*Lexer).GetDbOrTblName(yyDollar[1].cstrUnion().Origin())
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: tblName,
			}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1826
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1830
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1834
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1838
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1842
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1846
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1853
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1857
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1863
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1870
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1879
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1883
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1889
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1893
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1897
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1901
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1905
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPGRADE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1909
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1913
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1917
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1921
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1925
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1929
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1933
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1937
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1941
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1945
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1949
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1953
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1957
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1961
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1965
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1969
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1973
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1977
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1981
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1985
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1989
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1993
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:1997
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2001
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2005
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2009
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2013
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2017
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2021
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2025
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2029
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2033
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2037
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2041
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2045
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2049
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2053
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2057
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2061
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2065
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2069
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2073
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2077
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2081
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2085
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2089
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2102
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2109
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2116
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2126
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2130
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2136
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2143
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2151
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2155
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2159
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2163
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2169
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2173
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2179
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2186
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2193
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2202
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2232
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2236
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2240
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2246
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2252
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2256
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-4 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2263
		{
			yyVAL.str = yyDollar[3].str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2269
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2273
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2279
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2287
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2296
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2305
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2313
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2321
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				goto ret1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2344
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				goto ret1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2367
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2374
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2381
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2389
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2396
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2403
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2412
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2416
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2420
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2426
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2430
		{
			yyVAL.str = yyDollar[1].str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2436
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2440
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2446
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2450
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2461
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2467
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2472
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2476
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2480
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2484
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2488
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2492
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2496
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2500
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2504
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2510
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2514
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2518
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2522
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2527
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2532
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2538
		{
			name := yyDollar[2].cstrUnion()
			secondaryRole := false
			var secondaryRoleType tree.SecondaryRoleType = 0
			var role *tree.Role
			yyLOCAL = tree.NewUse(
				name,
				secondaryRole,
				secondaryRoleType,
				role,
			)
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2551
		{
			var name *tree.CStr
			secondaryRole := false
			var secondaryRoleType tree.SecondaryRoleType = 0
			var role *tree.Role
			yyLOCAL = tree.NewUse(
				name,
				secondaryRole,
				secondaryRoleType,
				role,
			)
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2564
		{
			var name *tree.CStr
			secondaryRole := false
			var secondaryRoleType tree.SecondaryRoleType = 0
			role := yyDollar[3].roleUnion()
			yyLOCAL = tree.NewUse(
				name,
				secondaryRole,
				secondaryRoleType,
				role,
			)
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2577
		{
			var name *tree.CStr
			secondaryRole := true
			secondaryRoleType := tree.SecondaryRoleTypeAll
			var role *tree.Role
			yyLOCAL = tree.NewUse(
				name,
				secondaryRole,
				secondaryRoleType,
				role,
			)
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2590
		{
			var name *tree.CStr
			secondaryRole := true
			secondaryRoleType := tree.SecondaryRoleTypeNone
			var role *tree.Role
			yyLOCAL = tree.NewUse(
				name,
				secondaryRole,
				secondaryRoleType,
				role,
			)
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2606
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2613
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2624
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2635
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2639
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2645
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2655
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2661
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2665
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2671
		{
			yyLOCAL = tree.TableLock{Table: *yyDollar[1].tableNameUnion(), LockType: yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2677
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2681
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2685
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2689
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2695
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2708
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2714
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2718
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2724
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2728
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2734
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2740
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2751
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2757
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2761
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2765
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2769
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2773
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2777
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2785
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2793
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2803
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2815
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2819
		{
			explainStmt := tree.NewExplainStmt(yyDollar[4].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2827
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2835
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2874
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2878
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2884
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2890
		{
			yyVAL.str = yyDollar[1].str
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2895
		{
			yyVAL.str = "true"
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2896
		{
			yyVAL.str = "false"
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2897
		{
			yyVAL.str = yyDollar[1].str
		}
	case 377:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2902
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2908
		{
			yyLOCAL = &tree.UpgradeStatement{
				Target: yyDollar[3].upgrade_targetUnion(),
				Retry:  yyDollar[4].int64ValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Target
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2917
		{
			yyLOCAL = &tree.Target{
				AccountName:  yyDollar[1].str,
				IsALLAccount: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Target
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2924
		{
			yyLOCAL = &tree.Target{
				AccountName:  "",
				IsALLAccount: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2932
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2936
		{
			res := yyDollar[3].item.(int64)
			if res <= 0 {
				yylex.Error("retry value can not less than 0")
				yyLOCAL = -1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2959
		{
			var ifExists = yyDollar[3].boolValUnion()
			var name = yyDollar[4].tableNameUnion()
			var typ = yyDollar[5].alterTypeOptionUnion()
			var incrementBy = yyDollar[6].incrementByOptionUnion()
			var minValue = yyDollar[7].minValueOptionUnion()
			var maxValue = yyDollar[8].maxValueOptionUnion()
			var startWith = yyDollar[9].startWithOptionUnion()
			var cycle = yyDollar[10].cycleOptionUnion()
			yyLOCAL = tree.NewAlterSequence(
				ifExists,
				name,
				typ,
				incrementBy,
				minValue,
				maxValue,
				startWith,
				cycle,
			)
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2982
		{
			var ifExists = yyDollar[3].boolValUnion()
			var name = yyDollar[4].tableNameUnion()
			var colNames = yyDollar[5].identifierListUnion()
			var asSource = yyDollar[7].selectUnion()
			yyLOCAL = tree.NewAlterView(ifExists, name, colNames, asSource)
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2992
		{
			var table = yyDollar[3].tableNameUnion()
			alterTable := tree.NewAlterTable(table)
			alterTable.Options = yyDollar[4].alterTableOptionsUnion()
			yyLOCAL = alterTable
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:2999
		{
			var table = yyDollar[3].tableNameUnion()
			alterTable := tree.NewAlterTable(table)
			alterTable.PartitionOption = yyDollar[4].alterPartitionOptionUnion()
			yyLOCAL = alterTable
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3008
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3012
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterPartitionOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3018
		{
			yyLOCAL = yyDollar[1].alterPartitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterPartitionOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3022
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			var PartBy = yyDollar[3].partitionByUnion()
			var SubPartBy = yyDollar[5].partitionByUnion()
			var Partitions = yyDollar[6].partitionsUnion()

			partitionDef := tree.NewPartitionOption(
				PartBy,
				SubPartBy,
				Partitions,
			)

			var typ tree.AlterPartitionOptionType

			opt := tree.NewAlterPartitionRedefinePartitionClause(
				typ,
				partitionDef,
			)

			yyLOCAL = tree.AlterPartitionOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterPartitionOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3046
		{
			var typ = tree.AlterPartitionAddPartition
			var partitions = yyDollar[3].partitionsUnion()
			opt := tree.NewAlterPartitionAddPartitionClause(
				typ,
				partitions,
			)
			yyLOCAL = tree.AlterPartitionOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterPartitionOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3056
		{
			var typ = tree.AlterPartitionDropPartition
			var partitionNames = yyDollar[3].PartitionNamesUnion()
			opt := tree.NewAlterPartitionDropPartitionClause(
				typ,
				partitionNames,
			)

			if yyDollar[3].PartitionNamesUnion() == nil {
				opt.OnAllPartitions = true
			} else {
				opt.PartitionNames = yyDollar[3].PartitionNamesUnion()
			}
			yyLOCAL = tree.AlterPartitionOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterPartitionOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3072
		{
			var typ = tree.AlterPartitionTruncatePartition
			var partitionNames = yyDollar[3].PartitionNamesUnion()
			opt := tree.NewAlterPartitionTruncatePartitionClause(
				typ,
				partitionNames,
			)

			if yyDollar[3].PartitionNamesUnion() == nil {
				opt.OnAllPartitions = true
			} else {
				opt.PartitionNames = yyDollar[3].PartitionNamesUnion()
			}
			yyLOCAL = tree.AlterPartitionOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3090
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3094
		{
			yyLOCAL = yyDollar[1].PartitionNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3100
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3104
		{
			yyLOCAL = append(yyDollar[1].PartitionNamesUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3110
		{
			var def = yyDollar[2].tableDefUnion()
			opt := tree.NewAlterOptionAdd(def)
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3116
		{
			var typ = tree.AlterTableModifyColumn
			var newColumn = yyDollar[3].columnTableDefUnion()
			var position = yyDollar[4].alterColPositionUnion()
			opt := tree.NewAlterTableModifyColumnClause(typ, newColumn, position)
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3124
		{
			// Type OldColumnName NewColumn Position
			var typ = tree.AlterTableChangeColumn
			var oldColumnName = yyDollar[3].unresolvedNameUnion()
			var newColumn = yyDollar[4].columnTableDefUnion()
			var position = yyDollar[5].alterColPositionUnion()
			opt := tree.NewAlterTableChangeColumnClause(typ, oldColumnName, newColumn, position)
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3134
		{
			var typ = tree.AlterTableRenameColumn
			var oldColumnName = yyDollar[3].unresolvedNameUnion()
			var newColumnName = yyDollar[5].unresolvedNameUnion()
			opt := tree.NewAlterTableRenameColumnClause(typ, oldColumnName, newColumnName)
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3142
		{
			var typ = tree.AlterTableAlterColumn
			var columnName = yyDollar[3].unresolvedNameUnion()
			var defaultExpr = tree.NewAttributeDefault(yyDollar[6].exprUnion())
			var visibility tree.VisibleType
			var optionType = tree.AlterColumnOptionSetDefault
			opt := tree.NewAlterTableAlterColumnClause(typ, columnName, defaultExpr, visibility, optionType)
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3152
		{
			var typ = tree.AlterTableAlterColumn
			var columnName = yyDollar[3].unresolvedNameUnion()
			var defaultExpr = tree.NewAttributeDefault(nil)
			var visibility = yyDollar[5].indexVisibilityUnion()
			var optionType = tree.AlterColumnOptionSetVisibility
			opt := tree.NewAlterTableAlterColumnClause(typ, columnName, defaultExpr, visibility, optionType)
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3162
		{
			var typ = tree.AlterTableAlterColumn
			var columnName = yyDollar[3].unresolvedNameUnion()
			var defaultExpr = tree.NewAttributeDefault(nil)
			var visibility tree.VisibleType
			var optionType = tree.AlterColumnOptionDropDefault
			opt := tree.NewAlterTableAlterColumnClause(typ, columnName, defaultExpr, visibility, optionType)
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3172
		{
			var orderByClauseType = tree.AlterTableOrderByColumn
			var orderByColumnList = yyDollar[3].alterColumnOrderByUnion()
			opt := tree.NewAlterTableOrderByColumnClause(orderByClauseType, orderByColumnList)
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3179
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3183
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3187
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3191
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3195
		{
			var column = yyDollar[3].columnTableDefUnion()
			var position = yyDollar[4].alterColPositionUnion()
			opt := tree.NewAlterAddCol(column, position)
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3202
		{
			var checkType = yyDollar[1].str
			var enforce bool
			yyLOCAL = tree.NewAlterOptionAlterCheck(checkType, enforce)
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3208
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3212
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3216
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3220
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3224
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3228
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3232
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3236
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3241
		{
			yyVAL.str = ""
		}
	case 445:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3272
		{
			yyVAL.str = ""
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3276
		{
			yyVAL.str = string("COLUMN")
		}
	case 447:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3281
		{
			var typ = tree.ColumnPositionNone
			var relativeColumn *tree.UnresolvedName
			yyLOCAL = tree.NewColumnPosition(typ, relativeColumn)
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3287
		{
			var typ = tree.ColumnPositionFirst
			var relativeColumn *tree.UnresolvedName
			yyLOCAL = tree.NewColumnPosition(typ, relativeColumn)
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3293
		{
			var typ = tree.ColumnPositionAfter
			var relativeColumn = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = tree.NewColumnPosition(typ, relativeColumn)
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3301
		{
			yyLOCAL = []*tree.AlterColumnOrder{yyDollar[1].alterColumnOrderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3305
		{
			yyLOCAL = append(yyDollar[1].alterColumnOrderByUnion(), yyDollar[3].alterColumnOrderUnion())
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColumnOrder
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3311
		{
			var column = yyDollar[1].unresolvedNameUnion()
			var direction = yyDollar[2].directionUnion()
			yyLOCAL = tree.NewAlterColumnOrder(column, direction)
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3319
		{
			var name = yyDollar[1].unresolvedObjectNameUnion()
			yyLOCAL = tree.NewAlterOptionTableName(name)
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3326
		{
			var dropType = tree.AlterTableDropIndex
			var name = tree.Identifier(yyDollar[2].cstrUnion().Compare())
			yyLOCAL = tree.NewAlterOptionDrop(dropType, name)
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3332
		{
			var dropType = tree.AlterTableDropKey
			var name = tree.Identifier(yyDollar[2].cstrUnion().Compare())
			yyLOCAL = tree.NewAlterOptionDrop(dropType, name)
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3338
		{
			var dropType = tree.AlterTableDropColumn
			var name = tree.Identifier(yyDollar[1].cstrUnion().Compare())
			yyLOCAL = tree.NewAlterOptionDrop(dropType, name)
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3344
		{
			var dropType = tree.AlterTableDropColumn
			var name = tree.Identifier(yyDollar[2].cstrUnion().Compare())
			yyLOCAL = tree.NewAlterOptionDrop(dropType, name)
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3350
		{
			var dropType = tree.AlterTableDropForeignKey
			var name = tree.Identifier(yyDollar[3].cstrUnion().Compare())
			yyLOCAL = tree.NewAlterOptionDrop(dropType, name)

		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3357
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3364
		{
			var dropType = tree.AlterTableDropPrimaryKey
			var name = tree.Identifier("")
			yyLOCAL = tree.NewAlterOptionDrop(dropType, name)
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3372
		{
			var indexName = tree.Identifier(yyDollar[2].cstrUnion().Compare())
			var visibility = yyDollar[3].indexVisibilityUnion()
			yyLOCAL = tree.NewAlterOptionAlterIndex(indexName, visibility)
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3378
		{
			val := int64(yyDollar[6].item.(int64))
			if val <= 0 {
				yylex.Error("LISTS should be greater than 0")
				return 1
			}
			var keyType = tree.INDEX_TYPE_IVFFLAT
			var algoParamList = val
			var name = tree.Identifier(yyDollar[2].cstrUnion().Compare())
			yyLOCAL = tree.NewAlterOptionAlterReIndex(name, keyType, algoParamList)
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3390
		{
			var checkType = yyDollar[1].str
			var enforce = yyDollar[3].boolValUnion()
			yyLOCAL = tree.NewAlterOptionAlterCheck(checkType, enforce)
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3396
		{
			var checkType = yyDollar[1].str
			var enforce = yyDollar[3].boolValUnion()
			yyLOCAL = tree.NewAlterOptionAlterCheck(checkType, enforce)
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3404
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3408
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3415
		{
			var ifExists = yyDollar[3].boolValUnion()
			var name = yyDollar[4].exprUnion()
			var authOption = yyDollar[5].alterAccountAuthOptionUnion()
			var statusOption = yyDollar[6].accountStatusUnion()
			var comment = yyDollar[7].accountCommentUnion()

			yyLOCAL = tree.NewAlterAccount(
				ifExists,
				name,
				authOption,
				statusOption,
				comment,
			)
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3433
		{
			var accountName = ""
			var dbName = yyDollar[3].str
			var isAccountLevel = false
			var updateConfig = yyDollar[7].str

			yyLOCAL = tree.NewAlterDataBaseConfig(
				accountName,
				dbName,
				isAccountLevel,
				tree.MYSQL_COMPATIBILITY_MODE,
				updateConfig,
			)
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3448
		{
			var accountName = ""
			var dbName = yyDollar[3].str
			var isAccountLevel = false
			var updateConfig = yyDollar[7].str

			yyLOCAL = tree.NewAlterDataBaseConfig(
				accountName,
				dbName,
				isAccountLevel,
				tree.UNIQUE_CHECK_ON_AUTOINCR,
				updateConfig,
			)
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3463
		{
			var accountName = yyDollar[4].str
			var dbName = ""
			var isAccountLevel = true
			var updateConfig = yyDollar[8].str

			yyLOCAL = tree.NewAlterDataBaseConfig(
				accountName,
				dbName,
				isAccountLevel,
				tree.MYSQL_COMPATIBILITY_MODE,
				updateConfig,
			)
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3478
		{
			assignments := []*tree.VarAssignmentExpr{
				&tree.VarAssignmentExpr{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3491
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3497
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].exprUnion(),
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3508
		{
			// Create temporary variables with meaningful names
			ifExists := yyDollar[3].boolValUnion()
			users := yyDollar[4].usersUnion()
			role := yyDollar[5].accountRoleUnion()
			miscOpt := yyDollar[6].userMiscOptionUnion()
			commentOrAttribute := yyDollar[7].accountCommentOrAttributeUnion()

			// Use the temporary variables to call the function
			yyLOCAL = tree.NewAlterUser(ifExists, users, role, miscOpt, commentOrAttribute)
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3521
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3525
		{
			var UserName = yyDollar[3].str
			yyLOCAL = tree.NewRole(
				UserName,
			)
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3533
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3537
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3542
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3546
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3562
		{
			yyLOCAL = tree.NewUserMiscOptionAccountUnlock()
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3566
		{
			yyLOCAL = tree.NewUserMiscOptionAccountLock()
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3570
		{
			yyLOCAL = tree.NewUserMiscOptionPasswordExpireNone()
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3574
		{
			var Value = yyDollar[3].item.(int64)
			yyLOCAL = tree.NewUserMiscOptionPasswordExpireInterval(
				Value,
			)
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3581
		{
			yyLOCAL = tree.NewUserMiscOptionPasswordExpireNever()
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3585
		{
			yyLOCAL = tree.NewUserMiscOptionPasswordExpireDefault()
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3589
		{
			yyLOCAL = tree.NewUserMiscOptionPasswordHistoryDefault()
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3593
		{
			var Value = yyDollar[3].item.(int64)
			yyLOCAL = tree.NewUserMiscOptionPasswordHistoryCount(
				Value,
			)
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3600
		{
			yyLOCAL = tree.NewUserMiscOptionPasswordReuseIntervalDefault()
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3604
		{
			var Value = yyDollar[4].item.(int64)
			yyLOCAL = tree.NewUserMiscOptionPasswordReuseIntervalCount(
				Value,
			)
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3611
		{
			yyLOCAL = tree.NewUserMiscOptionPasswordRequireCurrentNone()
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3615
		{
			yyLOCAL = tree.NewUserMiscOptionPasswordRequireCurrentDefault()
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3619
		{
			yyLOCAL = tree.NewUserMiscOptionPasswordRequireCurrentOptional()
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3623
		{
			var Value = yyDollar[2].item.(int64)
			yyLOCAL = tree.NewUserMiscOptionFailedLoginAttempts(
				Value,
			)
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3630
		{
			var Value = yyDollar[2].item.(int64)
			yyLOCAL = tree.NewUserMiscOptionPasswordLockTimeCount(
				Value,
			)
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3637
		{
			yyLOCAL = tree.NewUserMiscOptionPasswordLockTimeUnbounded()
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3643
		{
			yyVAL.item = nil
		}
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3648
		{
			yyVAL.item = nil
		}
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3691
		{
			yyLOCAL = &tree.ShowCollation{
				Like:  yyDollar[3].comparisionExprUnion(),
				Where: yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3700
		{
			yyLOCAL = &tree.ShowStages{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3708
		{
			yyLOCAL = &tree.ShowSnapShots{
				Where: yyDollar[3].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3716
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3720
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3724
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{
				&tree.Role{UserName: yyDollar[5].cstrUnion().Compare()},
			}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3735
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3739
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3745
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3750
		{
		}
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3754
		{
		}
	case 545:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3759
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3769
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3779
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3787
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3793
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3799
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3805
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3811
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3817
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3823
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3832
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3836
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3840
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3844
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3848
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3852
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3856
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3860
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3866
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: yyDollar[4].unresolvedObjectNameUnion(),
				DbName:    yyDollar[5].str,
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3875
		{
		}
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3877
		{
		}
	case 569:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3886
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3896
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3905
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3909
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3913
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3919
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3925
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3931
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3937
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3946
		{
			yyLOCAL = &tree.ShowTables{
				Open:         false,
				Full:         yyDollar[2].fullOptUnion(),
				DBName:       yyDollar[4].str,
				Like:         yyDollar[5].comparisionExprUnion(),
				Where:        yyDollar[6].whereUnion(),
				SnapshotName: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3957
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3969
		{
			yyLOCAL = &tree.ShowDatabases{
				Like:         yyDollar[3].comparisionExprUnion(),
				Where:        yyDollar[4].whereUnion(),
				SnapshotName: yyDollar[5].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3977
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3983
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:3995
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4009
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4015
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4021
		{
			yyLOCAL = &tree.ShowAccountUpgrade{}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4028
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4032
		{
			yyLOCAL = &tree.ShowSubscriptions{All: true, Like: yyDollar[4].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4037
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4041
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4045
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4050
		{
			yyVAL.str = ""
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4054
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4060
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4065
		{
			yyVAL.str = ""
		}
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4069
		{
			yyVAL.str = yyDollar[4].str
		}
	case 601:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4084
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4088
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4094
		{
			yyLOCAL = &tree.ShowCreateTable{
				Name:         yyDollar[4].unresolvedObjectNameUnion(),
				SnapshotName: yyDollar[5].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4102
		{
			yyLOCAL = &tree.ShowCreateView{
				Name:         yyDollar[4].unresolvedObjectNameUnion(),
				SnapshotName: yyDollar[5].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4109
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4113
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4119
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4125
		{
			tblName := yylex.(*Lexer).GetDbOrTblName(yyDollar[1].cstrUnion().Origin())
			yyLOCAL = tree.NewUnresolvedObjectName(tblName)
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4130
		{
			dbName := yylex.(*Lexer).GetDbOrTblName(yyDollar[1].cstrUnion().Origin())
			tblName := yylex.(*Lexer).GetDbOrTblName(yyDollar[3].cstrUnion().Origin())
			yyLOCAL = tree.NewUnresolvedObjectName(dbName, tblName)
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4138
		{
			yyVAL.str = yylex.(*Lexer).GetDbOrTblName(yyDollar[1].cstrUnion().Origin())
		}
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4144
		{
			tblName := yylex.(*Lexer).GetDbOrTblName(yyDollar[1].cstrUnion().Origin())
			yyLOCAL = tree.NewUnresolvedObjectName(tblName)
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4149
		{
			dbName := yylex.(*Lexer).GetDbOrTblName(yyDollar[1].cstrUnion().Origin())
			tblName := yylex.(*Lexer).GetDbOrTblName(yyDollar[3].cstrUnion().Origin())
			yyLOCAL = tree.NewUnresolvedObjectName(dbName, tblName)
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4155
		{
			yyLOCAL = tree.NewUnresolvedObjectName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4161
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4165
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4191
		{
			var ifExists = yyDollar[3].boolValUnion()
			var name = yyDollar[4].tableNamesUnion()
			yyLOCAL = tree.NewDropSequence(ifExists, name)
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4199
		{
			var ifExists = yyDollar[3].boolValUnion()
			var name = yyDollar[4].exprUnion()
			yyLOCAL = tree.NewDropAccount(ifExists, name)
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4207
		{
			var ifExists = yyDollar[3].boolValUnion()
			var users = yyDollar[4].usersUnion()
			yyLOCAL = tree.NewDropUser(ifExists, users)
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4215
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4219
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4225
		{
			var Username = yyDollar[1].usernameRecordUnion().Username
			var Hostname = yyDollar[1].usernameRecordUnion().Hostname
			var AuthOption *tree.AccountIdentified
			yyLOCAL = tree.NewUser(
				Username,
				Hostname,
				AuthOption,
			)
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4238
		{
			var ifExists = yyDollar[3].boolValUnion()
			var roles = yyDollar[4].rolesUnion()
			yyLOCAL = tree.NewDropRole(ifExists, roles)
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4246
		{
			var name = tree.Identifier(yyDollar[4].cstrUnion().Compare())
			var tableName = yyDollar[6].tableNameUnion()
			var ifExists = yyDollar[3].boolValUnion()
			yyLOCAL = tree.NewDropIndex(name, tableName, ifExists)
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4255
		{
			var ifExists = yyDollar[4].boolValUnion()
			var names = yyDollar[5].tableNamesUnion()
			yyLOCAL = tree.NewDropTable(ifExists, names)
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4261
		{
			var ifExists = yyDollar[3].boolValUnion()
			var names = yyDollar[4].tableNamesUnion()
			yyLOCAL = tree.NewDropTable(ifExists, names)
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4269
		{
			var ifExists = yyDollar[3].boolValUnion()
			var names = yyDollar[4].tableNamesUnion()
			yyLOCAL = tree.NewDropConnector(ifExists, names)
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4277
		{
			var ifExists = yyDollar[3].boolValUnion()
			var names = yyDollar[4].tableNamesUnion()
			yyLOCAL = tree.NewDropView(ifExists, names)
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4285
		{
			var name = tree.Identifier(yyDollar[4].cstrUnion().Compare())
			var ifExists = yyDollar[3].boolValUnion()
			yyLOCAL = tree.NewDropDatabase(name, ifExists)
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4291
		{
			var name = tree.Identifier(yyDollar[4].cstrUnion().Compare())
			var ifExists = yyDollar[3].boolValUnion()
			yyLOCAL = tree.NewDropDatabase(name, ifExists)
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4299
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4305
		{
			var name = yyDollar[3].functionNameUnion()
			var args = yyDollar[5].funcArgsUnion()
			yyLOCAL = tree.NewDropFunction(name, args)
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4313
		{
			var name = yyDollar[3].procNameUnion()
			var ifExists = false
			yyLOCAL = tree.NewDropProcedure(name, ifExists)
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4319
		{
			var name = yyDollar[5].procNameUnion()
			var ifExists = true
			yyLOCAL = tree.NewDropProcedure(name, ifExists)
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4329
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4334
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4341
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4357
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4370
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4381
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4385
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4391
		{
			tblName := yylex.(*Lexer).GetDbOrTblName(yyDollar[1].cstrUnion().Origin())
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(tblName), prefix, nil)
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4397
		{
			dbName := yylex.(*Lexer).GetDbOrTblName(yyDollar[1].cstrUnion().Origin())
			tblName := yylex.(*Lexer).GetDbOrTblName(yyDollar[3].cstrUnion().Origin())
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(dbName), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(tblName), prefix, nil)
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4406
		{
		}
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4408
		{
		}
	case 663:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4411
		{
		}
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4420
		{
		}
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4424
		{
		}
	case 672:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4429
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4438
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4445
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4451
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4459
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4466
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4473
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				goto ret1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4493
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4501
		{
			ins := yyDollar[5].insertUnion()
			ins.Table = yyDollar[3].tableExprUnion()
			ins.PartitionNames = yyDollar[4].identifierListUnion()
			ins.OnDuplicateUpdate = []*tree.UpdateExpr{nil}
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4511
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4515
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4521
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4528
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4534
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4542
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4549
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4556
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				goto ret1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4575
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4579
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4583
		{
			yyLOCAL = []*tree.UpdateExpr{nil}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4588
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4592
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4596
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4602
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4611
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4615
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4621
		{
			yyVAL.str = yylex.(*Lexer).GetDbOrTblName(yyDollar[1].cstrUnion().Origin())
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4625
		{
			yyVAL.str = yylex.(*Lexer).GetDbOrTblName(yyDollar[3].cstrUnion().Origin())
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4631
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4635
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4641
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4646
		{
		}
	case 705:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4650
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4657
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4661
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4668
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4673
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4677
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4683
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4687
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4693
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4697
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4702
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4706
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4719
		{
			yyLOCAL = &tree.Fields{
				Terminated: &tree.Terminated{
					Value: ",",
				},
				EnclosedBy: &tree.EnclosedBy{
					Value: '"',
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4730
		{
			yyLOCAL = &tree.Fields{
				Terminated: &tree.Terminated{
					Value: yyDollar[4].str,
				},
				EnclosedBy: &tree.EnclosedBy{
					Value: '"',
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4741
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				goto ret1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: &tree.Terminated{
					Value: yyDollar[4].str,
				},
				EnclosedBy: &tree.EnclosedBy{
					Value: b,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4763
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				goto ret1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: &tree.Terminated{
					Value: ",",
				},
				EnclosedBy: &tree.EnclosedBy{
					Value: b,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4786
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: &tree.Terminated{
					Value: "\n",
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4794
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: &tree.Terminated{
					Value: yyDollar[2].str,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4803
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4807
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				goto ret1
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4820
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4824
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4829
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4833
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4840
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4845
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4852
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4858
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), TimeWindow: yyDollar[2].timeWindowUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4862
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), TimeWindow: yyDollar[2].timeWindowUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4866
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), TimeWindow: yyDollar[2].timeWindowUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Select
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4870
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), TimeWindow: yyDollar[3].timeWindowUnion(), OrderBy: yyDollar[4].orderByUnion(), Limit: yyDollar[5].limitUnion(), Ep: yyDollar[6].exportParmUnion(), SelectLockInfo: yyDollar[7].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4874
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4878
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.TimeWindow
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4883
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TimeWindow
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4887
		{
			yyLOCAL = yyDollar[1].timeWindowUnion()
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TimeWindow
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4893
		{
			yyLOCAL = &tree.TimeWindow{
				Interval: yyDollar[1].timeIntervalUnion(),
				Sliding:  yyDollar[2].timeSlidingUnion(),
				Fill:     yyDollar[3].timeFillUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.Interval
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4903
		{
			str := fmt.Sprintf("%v", yyDollar[5].item)
			v, errStr := util.GetInt64(yyDollar[5].item)
			if errStr != "" {
				yylex.Error(errStr)
				goto ret1
			}
			yyLOCAL = &tree.Interval{
				Col:  yyDollar[3].unresolvedNameUnion(),
				Val:  tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64),
				Unit: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Sliding
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4918
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Sliding
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4922
		{
			str := fmt.Sprintf("%v", yyDollar[3].item)
			v, errStr := util.GetInt64(yyDollar[3].item)
			if errStr != "" {
				yylex.Error(errStr)
				goto ret1
			}
			yyLOCAL = &tree.Sliding{
				Val:  tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64),
				Unit: yyDollar[5].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fill
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4936
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fill
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4940
		{
			yyLOCAL = &tree.Fill{
				Mode: yyDollar[3].fillModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Fill
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4946
		{
			yyLOCAL = &tree.Fill{
				Mode: tree.FillValue,
				Val:  yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4955
		{
			yyLOCAL = tree.FillPrev
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4959
		{
			yyLOCAL = tree.FillNext
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4963
		{
			yyLOCAL = tree.FillNone
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4967
		{
			yyLOCAL = tree.FillNull
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4971
		{
			yyLOCAL = tree.FillLinear
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4977
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4984
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4993
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:4997
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5003
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5011
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5015
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5020
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5024
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5030
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5034
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5038
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5043
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5047
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5053
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5059
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5063
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5069
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5074
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5078
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5082
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5087
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5091
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5095
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5100
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5104
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5112
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5116
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5120
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5134
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5138
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5148
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5158
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5168
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5180
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5188
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5196
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5205
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5213
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5221
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5229
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5237
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5245
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5253
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5261
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5269
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5279
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5290
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5304
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5308
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5312
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5317
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5321
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5325
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5334
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5338
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.GroupBy
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5343
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.GroupBy
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5347
		{
			yyLOCAL = &tree.GroupBy{Exprs: yyDollar[3].exprsUnion(), WithRollup: yyDollar[4].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5352
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5356
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5361
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5365
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5371
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5375
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5381
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5385
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5389
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.NewUnresolvedNameWithStar(yyDollar[1].cstrUnion())}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5393
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.NewUnresolvedNameWithStar(yyDollar[1].cstrUnion(), yyDollar[3].cstrUnion())}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5398
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix, nil)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5406
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5412
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5420
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5428
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5438
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5444
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5453
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5462
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5471
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5481
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5485
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5495
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5499
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5503
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5507
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5513
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5523
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5527
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5533
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5539
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5543
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5549
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5555
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5559
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5563
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5567
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS_L2
		}
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5573
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5577
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5583
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5587
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5593
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5597
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5603
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5607
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5617
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5630
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5636
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5642
		{
			name := tree.NewUnresolvedName(yyDollar[1].cstrUnion())
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:     tree.FuncName2ResolvableFunctionReference(name),
					FuncName: yyDollar[1].cstrUnion(),
					Exprs:    yyDollar[3].exprsUnion(),
					Type:     tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5656
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5667
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5674
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5678
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5684
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5694
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5698
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5702
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5707
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5711
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5715
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5719
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5724
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5728
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5732
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5736
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5740
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5745
		{
			yyVAL.str = ""
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5749
		{
			yyVAL.str = yyDollar[1].str
		}
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5753
		{
			yyVAL.str = yyDollar[2].str
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5759
		{
			yyVAL.str = yylex.(*Lexer).GetDbOrTblName(yyDollar[1].cstrUnion().Origin())
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5763
		{
			yyVAL.str = yylex.(*Lexer).GetDbOrTblName(yyDollar[1].str)
		}
	case 889:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5768
		{
			yyLOCAL = tree.NewCStr("", 1)
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5772
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5776
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5780
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, 1)
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5784
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, 1)
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5790
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 915:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5830
		{
			var Language = yyDollar[3].str
			var Name = tree.Identifier(yyDollar[5].str)
			var Filename = tree.Identifier(yyDollar[7].str)
			yyLOCAL = tree.NewCreateExtension(
				Language,
				Name,
				Filename,
			)
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5843
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5849
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 918:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5855
		{
			var Name = yyDollar[3].procNameUnion()
			var Args = yyDollar[5].procArgsUnion()
			var Body = yyDollar[7].str
			yyLOCAL = tree.NewCreateProcedure(
				Name,
				Args,
				Body,
			)
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5868
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5873
		{
			dbName := yylex.(*Lexer).GetDbOrTblName(yyDollar[1].cstrUnion().Origin())
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(dbName), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5880
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5887
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5891
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5897
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5903
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5908
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5912
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5916
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5920
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5927
		{
			if yyDollar[13].str == "" {
				yylex.Error("no function body error")
				goto ret1
			}
			if yyDollar[11].str == "python" && yyDollar[14].str == "" {
				yylex.Error("no handler error")
				goto ret1
			}

			var Replace = yyDollar[2].sourceOptionalUnion()
			var Name = yyDollar[4].functionNameUnion()
			var Args = yyDollar[6].funcArgsUnion()
			var ReturnType = yyDollar[9].funcReturnUnion()
			var Language = yyDollar[11].str
			var Import = yyDollar[12].boolValUnion()
			var Body = yyDollar[13].str
			var Handler = yyDollar[14].str

			yyLOCAL = tree.NewCreateFunction(
				Replace,
				Name,
				Args,
				ReturnType,
				Language,
				Import,
				Body,
				Handler,
			)
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5960
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5965
		{
			dbName := yylex.(*Lexer).GetDbOrTblName(yyDollar[1].cstrUnion().Origin())
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(dbName), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5972
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5979
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5983
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5989
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5995
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:5999
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6003
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6009
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6015
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6021
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6025
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6031
		{
			yyVAL.str = ""
		}
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6038
		{
			yyVAL.str = yyDollar[2].str
		}
	case 949:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6044
		{
			var Replace bool
			var Name = yyDollar[5].tableNameUnion()
			var ColNames = yyDollar[6].identifierListUnion()
			var AsSource = yyDollar[8].selectUnion()
			var IfNotExists = yyDollar[4].ifNotExistsUnion()
			yyLOCAL = tree.NewCreateView(
				Replace,
				Name,
				ColNames,
				AsSource,
				IfNotExists,
			)
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6059
		{
			var Replace = yyDollar[2].sourceOptionalUnion()
			var Name = yyDollar[5].tableNameUnion()
			var ColNames = yyDollar[6].identifierListUnion()
			var AsSource = yyDollar[8].selectUnion()
			var IfNotExists = yyDollar[4].ifNotExistsUnion()
			yyLOCAL = tree.NewCreateView(
				Replace,
				Name,
				ColNames,
				AsSource,
				IfNotExists,
			)
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6076
		{
			var IfNotExists = yyDollar[3].ifNotExistsUnion()
			var Name = yyDollar[4].exprUnion()
			var AuthOption = yyDollar[5].accountAuthOptionUnion()
			var StatusOption = yyDollar[6].accountStatusUnion()
			var Comment = yyDollar[7].accountCommentUnion()
			yyLOCAL = tree.NewCreateAccount(
				IfNotExists,
				Name,
				AuthOption,
				StatusOption,
				Comment,
			)
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6093
		{
			yyVAL.str = yyDollar[1].str
		}
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6097
		{
			yyVAL.str = yyVAL.str + yyDollar[2].str
		}
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6103
		{
			yyVAL.str = "ALGORITHM = " + yyDollar[3].str
		}
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6107
		{
			yyVAL.str = "DEFINER = "
		}
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6111
		{
			yyVAL.str = "SQL SECURITY " + yyDollar[3].str
		}
	case 957:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6116
		{
			yyVAL.str = ""
		}
	case 958:
		yyDollar = yyS[yypt-4 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6120
		{
			yyVAL.str = "WITH " + yyDollar[2].str + " CHECK OPTION"
		}
	case 964:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6134
		{
			yyVAL.str = ""
		}
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6142
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6148
		{
			var Str = yyDollar[1].cstrUnion().Compare()
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(Str), Str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6153
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6159
		{
			var Equal = yyDollar[2].str
			var AdminName = yyDollar[3].exprUnion()
			var IdentifiedType = yyDollar[4].accountIdentifiedUnion()
			yyLOCAL = *tree.NewAccountAuthOption(
				Equal,
				AdminName,
				IdentifiedType,
			)
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6172
		{
			var Str = yyDollar[1].str
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(Str), Str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6177
		{
			var Str = yyDollar[1].cstrUnion().Compare()
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(Str), Str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6182
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6188
		{
			yyLOCAL = *tree.NewAccountIdentified(
				tree.AccountIdentifiedByPassword,
				tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char),
			)
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6195
		{
			yyLOCAL = *tree.NewAccountIdentified(
				tree.AccountIdentifiedByPassword,
				tree.NewParamExpr(yylex.(*Lexer).GetParamIndex()),
			)
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6202
		{
			yyLOCAL = *tree.NewAccountIdentified(
				tree.AccountIdentifiedByRandomPassword,
				nil,
			)
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6209
		{
			yyLOCAL = *tree.NewAccountIdentified(
				tree.AccountIdentifiedWithSSL,
				tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char),
			)
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6216
		{
			yyLOCAL = *tree.NewAccountIdentified(
				tree.AccountIdentifiedWithSSL,
				tree.NewParamExpr(yylex.(*Lexer).GetParamIndex()),
			)
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6224
		{
			as := tree.NewAccountStatus()
			as.Exist = false
			yyLOCAL = *as
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6230
		{
			as := tree.NewAccountStatus()
			as.Exist = true
			as.Option = tree.AccountStatusOpen
			yyLOCAL = *as
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6237
		{
			as := tree.NewAccountStatus()
			as.Exist = true
			as.Option = tree.AccountStatusSuspend
			yyLOCAL = *as
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6244
		{
			as := tree.NewAccountStatus()
			as.Exist = true
			as.Option = tree.AccountStatusRestricted
			yyLOCAL = *as
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6252
		{
			ac := tree.NewAccountComment()
			ac.Exist = false
			yyLOCAL = *ac
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6258
		{
			ac := tree.NewAccountComment()
			ac.Exist = true
			ac.Comment = yyDollar[2].str
			yyLOCAL = *ac
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6267
		{
			var IfNotExists = yyDollar[3].ifNotExistsUnion()
			var Users = yyDollar[4].usersUnion()
			var Role = yyDollar[5].accountRoleUnion()
			var MiscOpt = yyDollar[6].userMiscOptionUnion()
			var CommentOrAttribute = yyDollar[7].accountCommentOrAttributeUnion()
			yyLOCAL = tree.NewCreateUser(
				IfNotExists,
				Users,
				Role,
				MiscOpt,
				CommentOrAttribute,
			)
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6284
		{
			var IfNotExists = yyDollar[3].ifNotExistsUnion()
			var Name = tree.Identifier(yyDollar[4].cstrUnion().Compare())
			var Database = tree.Identifier(yyDollar[6].cstrUnion().Compare())
			var Table = tree.Identifier("")
			var AccountsSet = yyDollar[7].accountsSetOptionUnion()
			var Comment = yyDollar[8].str
			yyLOCAL = tree.NewCreatePublication(
				IfNotExists,
				Name,
				Database,
				Table,
				AccountsSet,
				Comment,
			)
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6301
		{
			var IfNotExists = yyDollar[3].ifNotExistsUnion()
			var Name = tree.Identifier(yyDollar[4].cstrUnion().Compare())
			var Database = tree.Identifier("")
			var Table = tree.Identifier(yyDollar[6].cstrUnion().Compare())
			var AccountsSet = yyDollar[7].accountsSetOptionUnion()
			var Comment = yyDollar[8].str
			yyLOCAL = tree.NewCreatePublication(
				IfNotExists,
				Name,
				Database,
				Table,
				AccountsSet,
				Comment,
			)
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6320
		{
			var IfNotExists = yyDollar[3].ifNotExistsUnion()
			var Name = tree.Identifier(yyDollar[4].cstrUnion().Compare())
			var Url = yyDollar[5].str
			var Credentials = yyDollar[6].stageCredentialsUnion()
			var Status = yyDollar[7].stageStatusUnion()
			var Comment = yyDollar[8].stageCommentUnion()
			yyLOCAL = tree.NewCreateStage(
				IfNotExists,
				Name,
				Url,
				Credentials,
				Status,
				Comment,
			)
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageStatus
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6338
		{
			yyLOCAL = tree.StageStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6344
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusEnabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6351
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusDisabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageComment
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6359
		{
			yyLOCAL = tree.StageComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageComment
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6365
		{
			yyLOCAL = tree.StageComment{
				Exist:   true,
				Comment: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageUrl
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6373
		{
			yyLOCAL = tree.StageUrl{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageUrl
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6379
		{
			yyLOCAL = tree.StageUrl{
				Exist: true,
				Url:   yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6387
		{
			yyLOCAL = tree.StageCredentials{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6393
		{
			yyLOCAL = tree.StageCredentials{
				Exist:       true,
				Credentials: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6402
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6406
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6411
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6415
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6422
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1003:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6427
		{
			yyVAL.str = ""
		}
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6431
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1005:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6437
		{
			var ifNotExists = yyDollar[3].boolValUnion()
			var name = tree.Identifier(yyDollar[4].cstrUnion().Compare())
			var urlOption = yyDollar[6].stageUrlUnion()
			var credentialsOption = yyDollar[7].stageCredentialsUnion()
			var statusOption = yyDollar[8].stageStatusUnion()
			var comment = yyDollar[9].stageCommentUnion()
			yyLOCAL = tree.NewAlterStage(ifNotExists, name, urlOption, credentialsOption, statusOption, comment)
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6450
		{
			var ifExists = yyDollar[3].boolValUnion()
			var name = tree.Identifier(yyDollar[4].cstrUnion().Compare())
			var accountsSet = yyDollar[5].accountsSetOptionUnion()
			var dbName = yyDollar[6].str
			var comment = yyDollar[7].str
			yyLOCAL = tree.NewAlterPublication(ifExists, name, accountsSet, dbName, comment)
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6460
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6464
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6470
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6476
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6482
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6489
		{
			yyVAL.str = ""
		}
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6493
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6499
		{
			var ifExists = yyDollar[3].boolValUnion()
			var name = tree.Identifier(yyDollar[4].cstrUnion().Compare())
			yyLOCAL = tree.NewDropPublication(ifExists, name)
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6507
		{
			var ifNotExists = yyDollar[3].boolValUnion()
			var name = tree.Identifier(yyDollar[4].cstrUnion().Compare())
			yyLOCAL = tree.NewDropStage(ifNotExists, name)
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6515
		{
			var ifExists = yyDollar[3].boolValUnion()
			var name = tree.Identifier(yyDollar[4].cstrUnion().Compare())
			yyLOCAL = tree.NewDropSnapShot(ifExists, name)
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6523
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1018:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6528
		{
			var Exist = false
			var IsComment bool
			var Str string
			yyLOCAL = *tree.NewAccountCommentOrAttribute(
				Exist,
				IsComment,
				Str,
			)

		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6540
		{
			var Exist = true
			var IsComment = true
			var Str = yyDollar[2].str
			yyLOCAL = *tree.NewAccountCommentOrAttribute(
				Exist,
				IsComment,
				Str,
			)
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6551
		{
			var Exist = true
			var IsComment = false
			var Str = yyDollar[2].str
			yyLOCAL = *tree.NewAccountCommentOrAttribute(
				Exist,
				IsComment,
				Str,
			)
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6660
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6664
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6670
		{
			var Username = yyDollar[1].usernameRecordUnion().Username
			var Hostname = yyDollar[1].usernameRecordUnion().Hostname
			var AuthOption = yyDollar[2].userIdentifiedUnion()
			yyLOCAL = tree.NewUser(
				Username,
				Hostname,
				AuthOption,
			)
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6683
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6687
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6693
		{
			var Username = yyDollar[1].usernameRecordUnion().Username
			var Hostname = yyDollar[1].usernameRecordUnion().Hostname
			var AuthOption = yyDollar[2].userIdentifiedUnion()
			yyLOCAL = tree.NewUser(
				Username,
				Hostname,
				AuthOption,
			)
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6706
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6710
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6714
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6719
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6723
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6729
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6736
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6742
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6751
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1037:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6758
		{
			var IfNotExists = yyDollar[3].ifNotExistsUnion()
			var Roles = yyDollar[4].rolesUnion()
			yyLOCAL = tree.NewCreateRole(
				IfNotExists,
				Roles,
			)
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6769
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6773
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6779
		{
			var UserName = yyDollar[1].cstrUnion().Compare()
			yyLOCAL = tree.NewRole(
				UserName,
			)
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6788
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, 1)
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6792
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, 1)
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6796
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, 1)
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6801
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6805
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6809
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6813
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6819
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = tree.NewIndexOption()
				io.IType = yyDollar[5].indexTypeUnion()
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			} else {
				io = tree.NewIndexOption()
				io.IType = tree.INDEX_TYPE_INVALID
			}
			var Name = tree.Identifier(yyDollar[4].cstrUnion().Compare())
			var Table = yyDollar[7].tableNameUnion()
			var ifNotExists = false
			var IndexCat = yyDollar[2].indexCategoryUnion()
			var KeyParts = yyDollar[9].keyPartsUnion()
			var IndexOption = io
			var MiscOption []tree.MiscOption
			yyLOCAL = tree.NewCreateIndex(
				Name,
				Table,
				ifNotExists,
				IndexCat,
				KeyParts,
				IndexOption,
				MiscOption,
			)
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6850
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6854
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				} else if opt2.AlgoParamList > 0 {
					opt1.AlgoParamList = opt2.AlgoParamList
				} else if len(opt2.AlgoParamVectorOpType) > 0 {
					opt1.AlgoParamVectorOpType = opt2.AlgoParamVectorOpType
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6880
		{
			io := tree.NewIndexOption()
			io.KeyBlockSize = uint64(yyDollar[3].item.(int64))
			yyLOCAL = io
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6886
		{
			val := int64(yyDollar[3].item.(int64))
			if val <= 0 {
				yylex.Error("LISTS should be greater than 0")
				return 1
			}

			io := tree.NewIndexOption()
			io.AlgoParamList = val
			yyLOCAL = io
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6898
		{
			io := tree.NewIndexOption()
			io.AlgoParamVectorOpType = yyDollar[2].str
			yyLOCAL = io
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6904
		{
			io := tree.NewIndexOption()
			io.Comment = yyDollar[2].str
			yyLOCAL = io
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6910
		{
			io := tree.NewIndexOption()
			io.ParserName = yyDollar[3].cstrUnion().Compare()
			yyLOCAL = io
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6916
		{
			io := tree.NewIndexOption()
			io.Visible = tree.VISIBLE_TYPE_VISIBLE
			yyLOCAL = io
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6922
		{
			io := tree.NewIndexOption()
			io.Visible = tree.VISIBLE_TYPE_INVISIBLE
			yyLOCAL = io
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6930
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6934
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6940
		{
			// Order is parsed but just ignored as MySQL dtree.
			var ColName = yyDollar[1].unresolvedNameUnion()
			var Length = int(yyDollar[2].lengthOptUnion())
			var Direction = yyDollar[3].directionUnion()
			var Expr tree.Expr
			yyLOCAL = tree.NewKeyPart(
				ColName,
				Length,
				Direction,
				Expr,
			)
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6954
		{
			var ColName *tree.UnresolvedName
			var Length int
			var Expr = yyDollar[2].exprUnion()
			var Direction = yyDollar[4].directionUnion()
			yyLOCAL = tree.NewKeyPart(
				ColName,
				Length,
				Direction,
				Expr,
			)
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6968
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6972
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6976
		{
			yyLOCAL = tree.INDEX_TYPE_IVFFLAT
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6980
		{
			yyLOCAL = tree.INDEX_TYPE_MASTER
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6984
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6988
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6992
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:6998
		{
			var IfNotExists = yyDollar[3].ifNotExistsUnion()
			var Name = tree.Identifier(yyDollar[4].str)
			var SubscriptionOption = yyDollar[5].subscriptionOptionUnion()
			var CreateOptions = yyDollar[6].createOptionsUnion()
			yyLOCAL = tree.NewCreateDatabase(
				IfNotExists,
				Name,
				SubscriptionOption,
				CreateOptions,
			)
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7013
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7017
		{
			var From = tree.Identifier(yyDollar[2].str)
			var Publication = tree.Identifier(yyDollar[4].cstrUnion().Compare())
			yyLOCAL = tree.NewSubscriptionOption(From, Publication)
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7028
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7032
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7037
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7041
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7047
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7051
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7057
		{
			var IsDefault = yyDollar[1].defaultOptionalUnion()
			var Charset = yyDollar[4].str
			yyLOCAL = tree.NewCreateOptionCharset(
				IsDefault,
				Charset,
			)
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7066
		{
			var IsDefault = yyDollar[1].defaultOptionalUnion()
			var Collate = yyDollar[4].str
			yyLOCAL = tree.NewCreateOptionCollate(
				IsDefault,
				Collate,
			)
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7075
		{
			var Encrypt = yyDollar[4].str
			yyLOCAL = tree.NewCreateOptionEncryption(Encrypt)
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7081
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7085
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7091
		{
			var TableName = yyDollar[4].tableNameUnion()
			var Options = yyDollar[7].connectorOptionsUnion()
			yyLOCAL = tree.NewCreateConnector(
				TableName,
				Options,
			)
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7102
		{
			yyLOCAL = &tree.ShowConnectors{}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7108
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				goto ret1
			}
			yyLOCAL = &tree.PauseDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7126
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				goto ret1
			}
			yyLOCAL = &tree.CancelDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7144
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				goto ret1
			}
			yyLOCAL = &tree.ResumeDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7162
		{
			var Replace = yyDollar[2].sourceOptionalUnion()
			var IfNotExists = yyDollar[4].ifNotExistsUnion()
			var SourceName = yyDollar[5].tableNameUnion()
			var Defs = yyDollar[7].tableDefsUnion()
			var Options = yyDollar[9].tableOptionsUnion()
			yyLOCAL = tree.NewCreateSource(
				Replace,
				IfNotExists,
				SourceName,
				Defs,
				Options,
			)
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7178
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7182
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7191
		{
			t := tree.NewCreateTable()
			t.Temporary = yyDollar[2].boolValUnion()
			t.IfNotExists = yyDollar[4].ifNotExistsUnion()
			t.Table = *yyDollar[5].tableNameUnion()
			t.Defs = yyDollar[7].tableDefsUnion()
			t.Options = yyDollar[9].tableOptionsUnion()
			t.PartitionOption = yyDollar[10].partitionOptionUnion()
			t.ClusterByOption = yyDollar[11].clusterByOptionUnion()
			yyLOCAL = t
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7203
		{
			t := tree.NewCreateTable()
			t.IfNotExists = yyDollar[4].ifNotExistsUnion()
			t.Table = *yyDollar[5].tableNameUnion()
			t.Defs = yyDollar[7].tableDefsUnion()
			t.Param = yyDollar[9].loadParamUnion()
			yyLOCAL = t
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7212
		{
			t := tree.NewCreateTable()
			t.IsClusterTable = true
			t.IfNotExists = yyDollar[4].ifNotExistsUnion()
			t.Table = *yyDollar[5].tableNameUnion()
			t.Defs = yyDollar[7].tableDefsUnion()
			t.Options = yyDollar[9].tableOptionsUnion()
			t.PartitionOption = yyDollar[10].partitionOptionUnion()
			t.ClusterByOption = yyDollar[11].clusterByOptionUnion()
			yyLOCAL = t
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7224
		{
			t := tree.NewCreateTable()
			t.IsDynamicTable = true
			t.IfNotExists = yyDollar[4].ifNotExistsUnion()
			t.Table = *yyDollar[5].tableNameUnion()
			t.AsSource = yyDollar[7].selectUnion()
			t.DTOptions = yyDollar[8].tableOptionsUnion()
			yyLOCAL = t
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7234
		{
			t := tree.NewCreateTable()
			t.IsAsSelect = true
			t.Temporary = yyDollar[2].boolValUnion()
			t.IfNotExists = yyDollar[4].ifNotExistsUnion()
			t.Table = *yyDollar[5].tableNameUnion()
			t.AsSource = yyDollar[6].selectUnion()
			yyLOCAL = t
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7244
		{
			t := tree.NewCreateTable()
			t.IsAsSelect = true
			t.Temporary = yyDollar[2].boolValUnion()
			t.IfNotExists = yyDollar[4].ifNotExistsUnion()
			t.Table = *yyDollar[5].tableNameUnion()
			t.Defs = yyDollar[7].tableDefsUnion()
			t.AsSource = yyDollar[9].selectUnion()
			yyLOCAL = t
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7255
		{
			t := tree.NewCreateTable()
			t.IsAsSelect = true
			t.Temporary = yyDollar[2].boolValUnion()
			t.IfNotExists = yyDollar[4].ifNotExistsUnion()
			t.Table = *yyDollar[5].tableNameUnion()
			t.AsSource = yyDollar[7].selectUnion()
			yyLOCAL = t
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7265
		{
			t := tree.NewCreateTable()
			t.IsAsSelect = true
			t.Temporary = yyDollar[2].boolValUnion()
			t.IfNotExists = yyDollar[4].ifNotExistsUnion()
			t.Table = *yyDollar[5].tableNameUnion()
			t.Defs = yyDollar[7].tableDefsUnion()
			t.AsSource = yyDollar[10].selectUnion()
			yyLOCAL = t
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7276
		{
			t := tree.NewCreateTable()
			t.IsAsLike = true
			t.Table = *yyDollar[5].tableNameUnion()
			t.LikeTableName = *yyDollar[7].tableNameUnion()
			yyLOCAL = t
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7284
		{
			t := tree.NewCreateTable()
			t.Temporary = yyDollar[2].boolValUnion()
			t.IfNotExists = yyDollar[4].ifNotExistsUnion()
			t.Table = *yyDollar[5].tableNameUnion()
			t.SubscriptionOption = yyDollar[6].subscriptionOptionUnion()
			yyLOCAL = t
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7295
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7302
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7312
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.INLINE,
					Format:   yyDollar[4].str,
					Data:     yyDollar[8].str,
				},
				ExParam: tree.ExParam{
					JsonData: yyDollar[9].str,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7325
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7333
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7342
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					StageName: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7351
		{
			yyVAL.str = ""
		}
	case 1110:
		yyDollar = yyS[yypt-4 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7355
		{
			yyVAL.str = yyDollar[4].str
		}
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7361
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7365
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7370
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7374
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7381
		{
			yyLOCAL = &tree.TailParameter{
				Charset:      yyDollar[1].str,
				Fields:       yyDollar[2].fieldsUnion(),
				Lines:        yyDollar[3].linesUnion(),
				IgnoredLines: uint64(yyDollar[4].int64ValUnion()),
				ColumnList:   yyDollar[5].loadColumnsUnion(),
				Assignments:  yyDollar[6].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7393
		{
			yyVAL.str = ""
		}
	case 1117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7397
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1118:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7403
		{
			var Name = yyDollar[4].tableNameUnion()
			var Type = yyDollar[5].columnTypeUnion()
			var IfNotExists = yyDollar[3].ifNotExistsUnion()
			var IncrementBy = yyDollar[6].incrementByOptionUnion()
			var MinValue = yyDollar[7].minValueOptionUnion()
			var MaxValue = yyDollar[8].maxValueOptionUnion()
			var StartWith = yyDollar[9].startWithOptionUnion()
			var Cycle = yyDollar[10].boolValUnion()
			yyLOCAL = tree.NewCreateSequence(
				Name,
				Type,
				IfNotExists,
				IncrementBy,
				MinValue,
				MaxValue,
				StartWith,
				Cycle,
			)
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7424
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7438
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.TypeOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7442
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TypeOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7446
		{
			yyLOCAL = &tree.TypeOption{
				Type: yyDollar[2].columnTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7452
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7456
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7463
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7470
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7477
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7484
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7488
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7492
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7496
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7500
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7507
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7514
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7518
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7525
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7532
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7536
		{
			yyLOCAL = &tree.CycleOption{
				Cycle: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7542
		{
			yyLOCAL = &tree.CycleOption{
				Cycle: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7548
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7552
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7559
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7566
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7573
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7580
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7584
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7589
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7593
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7597
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7602
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7606
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			var PartBy = yyDollar[3].partitionByUnion()
			var SubPartBy = yyDollar[5].partitionByUnion()
			var Partitions = yyDollar[6].partitionsUnion()
			yyLOCAL = tree.NewPartitionOption(
				PartBy,
				SubPartBy,
				Partitions,
			)
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7619
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7623
		{
			var ColumnList = []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()}
			yyLOCAL = tree.NewClusterByOption(
				ColumnList,
			)

		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7631
		{
			var ColumnList = yyDollar[4].unresolveNamesUnion()
			yyLOCAL = tree.NewClusterByOption(
				ColumnList,
			)
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7639
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7643
		{
			var IsSubPartition = true
			var PType = yyDollar[3].partitionByUnion()
			var Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = tree.NewPartitionBy2(
				IsSubPartition,
				PType,
				Num,
			)
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7655
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7659
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7665
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7669
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7675
		{
			var Name = tree.Identifier(yyDollar[2].cstrUnion().Compare())
			var Values = yyDollar[3].valuesUnion()
			var Options []tree.TableOption
			var Subs = yyDollar[4].subPartitionsUnion()
			yyLOCAL = tree.NewPartition(
				Name,
				Values,
				Options,
				Subs,
			)
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7688
		{
			var Name = tree.Identifier(yyDollar[2].cstrUnion().Compare())
			var Values = yyDollar[3].valuesUnion()
			var Options = yyDollar[4].tableOptionsUnion()
			var Subs = yyDollar[5].subPartitionsUnion()
			yyLOCAL = tree.NewPartition(
				Name,
				Values,
				Options,
				Subs,
			)
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7702
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7706
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7712
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7716
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7722
		{
			var Name = tree.Identifier(yyDollar[2].cstrUnion().Compare())
			var Options []tree.TableOption
			yyLOCAL = tree.NewSubPartition(
				Name,
				Options,
			)
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7731
		{
			var Name = tree.Identifier(yyDollar[2].cstrUnion().Compare())
			var Options = yyDollar[3].tableOptionsUnion()
			yyLOCAL = tree.NewSubPartition(
				Name,
				Options,
			)
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7742
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7746
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7751
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7755
		{
			expr := tree.NewMaxValue()
			var valueList = tree.Exprs{expr}
			yyLOCAL = tree.NewValuesLessThan(valueList)
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7761
		{
			var valueList = yyDollar[5].exprsUnion()
			yyLOCAL = tree.NewValuesLessThan(valueList)
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7766
		{
			var valueList = yyDollar[4].exprsUnion()
			yyLOCAL = tree.NewValuesIn(
				valueList,
			)
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7774
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7778
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				goto ret1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7788
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7792
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				goto ret1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7803
		{
			rangeTyp := tree.NewRangeType()
			rangeTyp.Expr = yyDollar[3].exprUnion()
			yyLOCAL = tree.NewPartitionBy(
				rangeTyp,
			)
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7811
		{
			rangeTyp := tree.NewRangeType()
			rangeTyp.ColumnList = yyDollar[4].unresolveNamesUnion()
			yyLOCAL = tree.NewPartitionBy(
				rangeTyp,
			)
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7819
		{
			listTyp := tree.NewListType()
			listTyp.Expr = yyDollar[3].exprUnion()
			yyLOCAL = tree.NewPartitionBy(
				listTyp,
			)
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7827
		{
			listTyp := tree.NewListType()
			listTyp.ColumnList = yyDollar[4].unresolveNamesUnion()
			yyLOCAL = tree.NewPartitionBy(
				listTyp,
			)
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7838
		{
			keyTyp := tree.NewKeyType()
			keyTyp.Linear = yyDollar[1].boolValUnion()
			keyTyp.Algorithm = yyDollar[3].int64ValUnion()
			yyLOCAL = tree.NewPartitionBy(
				keyTyp,
			)
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7847
		{
			keyTyp := tree.NewKeyType()
			keyTyp.Linear = yyDollar[1].boolValUnion()
			keyTyp.Algorithm = yyDollar[3].int64ValUnion()
			keyTyp.ColumnList = yyDollar[5].unresolveNamesUnion()
			yyLOCAL = tree.NewPartitionBy(
				keyTyp,
			)
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7857
		{
			Linear := yyDollar[1].boolValUnion()
			Expr := yyDollar[4].exprUnion()
			hashTyp := tree.NewHashType(Linear, Expr)
			yyLOCAL = tree.NewPartitionBy(
				hashTyp,
			)
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7867
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7871
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7876
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7880
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ConnectorOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7886
		{
			yyLOCAL = []*tree.ConnectorOption{yyDollar[1].connectorOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.ConnectorOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7890
		{
			yyLOCAL = append(yyDollar[1].connectorOptionsUnion(), yyDollar[3].connectorOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ConnectorOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7896
		{
			var Key = tree.Identifier(yyDollar[1].cstrUnion().Compare())
			var Val = yyDollar[3].exprUnion()
			yyLOCAL = tree.NewConnectorOption(
				Key,
				Val,
			)
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ConnectorOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7905
		{
			var Key = tree.Identifier(yyDollar[1].str)
			var Val = yyDollar[3].exprUnion()
			yyLOCAL = tree.NewConnectorOption(
				Key,
				Val,
			)
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7915
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7919
		{
			yyLOCAL = yyDollar[3].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7925
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7929
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7935
		{
			var Key = tree.Identifier(yyDollar[1].cstrUnion().Compare())
			var Val = yyDollar[3].exprUnion()
			yyLOCAL = tree.NewCreateSourceWithOption(
				Key,
				Val,
			)
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7944
		{
			var Key = tree.Identifier(yyDollar[1].str)
			var Val = yyDollar[3].exprUnion()
			yyLOCAL = tree.NewCreateSourceWithOption(
				Key,
				Val,
			)
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7954
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7958
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7964
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7968
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7972
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7978
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7982
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7986
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7990
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7994
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:7998
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8002
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8007
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8011
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8015
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8019
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8023
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8027
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8031
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8035
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8039
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8043
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8047
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8051
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8055
		{
			t := tree.NewTableOptionPackKeys()
			t.Value = yyDollar[3].item.(int64)
			yyLOCAL = t
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8061
		{
			t := tree.NewTableOptionPackKeys()
			t.Default = true
			yyLOCAL = t
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8067
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8071
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8075
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8079
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8083
		{
			t := tree.NewTableOptionStatsAutoRecalc()
			t.Value = uint64(yyDollar[3].item.(int64))
			yyLOCAL = t
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8089
		{
			t := tree.NewTableOptionStatsAutoRecalc()
			t.Default = true
			yyLOCAL = t
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8095
		{
			t := tree.NewTableOptionStatsPersistent()
			t.Value = uint64(yyDollar[3].item.(int64))
			yyLOCAL = t
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8101
		{
			t := tree.NewTableOptionStatsPersistent()
			t.Default = true
			yyLOCAL = t
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8107
		{
			t := tree.NewTableOptionStatsSamplePages()
			t.Value = uint64(yyDollar[3].item.(int64))
			yyLOCAL = t
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8113
		{
			t := tree.NewTableOptionStatsSamplePages()
			t.Default = true
			yyLOCAL = t
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8119
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8123
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8127
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8131
		{
			var Preperties = yyDollar[3].propertiesUnion()
			yyLOCAL = tree.NewTableOptionProperties(Preperties)
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8138
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8142
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8148
		{
			var Key = yyDollar[1].str
			var Value = yyDollar[3].str
			yyLOCAL = *tree.NewProperty(
				Key,
				Value,
			)
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8159
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8163
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8169
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8173
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8177
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8181
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8185
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8189
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8203
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8207
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8216
		{
			tblName := yylex.(*Lexer).GetDbOrTblName(yyDollar[1].cstrUnion().Origin())
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(tblName), prefix, yyDollar[2].atTimeStampUnion())
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8222
		{
			dbName := yylex.(*Lexer).GetDbOrTblName(yyDollar[1].cstrUnion().Origin())
			tblName := yylex.(*Lexer).GetDbOrTblName(yyDollar[3].cstrUnion().Origin())
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(dbName), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(tblName), prefix, yyDollar[4].atTimeStampUnion())
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AtTimeStamp
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8230
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AtTimeStamp
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8234
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AtTimeStamp
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8238
		{
			yyLOCAL = &tree.AtTimeStamp{
				Type: tree.ATTIMESTAMPTIME,
				Expr: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AtTimeStamp
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8245
		{
			var Str = yyDollar[4].cstrUnion().Compare()
			yyLOCAL = &tree.AtTimeStamp{
				Type: tree.ATTIMESTAMPSNAPSHOT,
				Expr: tree.NewNumValWithType(constant.MakeString(Str), Str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AtTimeStamp
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8253
		{
			yyLOCAL = &tree.AtTimeStamp{
				Type: tree.ATTIMESTAMPSNAPSHOT,
				Expr: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AtTimeStamp
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8260
		{
			yyLOCAL = &tree.AtTimeStamp{
				Type: tree.ATMOTIMESTAMP,
				Expr: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8268
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8275
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8279
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8285
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8289
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8293
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8299
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8303
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8309
		{
			var KeyParts = yyDollar[5].keyPartsUnion()
			var Name = yyDollar[3].str
			var Empty = true
			var IndexOption = yyDollar[7].indexOptionUnion()
			yyLOCAL = tree.NewFullTextIndex(
				KeyParts,
				Name,
				Empty,
				IndexOption,
			)
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8322
		{
			var KeyParts = yyDollar[5].keyPartsUnion()
			var Name = yyDollar[3].str
			var Empty = true
			var IndexOption = yyDollar[9].indexOptionUnion()
			yyLOCAL = tree.NewFullTextIndex(
				KeyParts,
				Name,
				Empty,
				IndexOption,
			)
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8335
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "btree":
					keyTyp = tree.INDEX_TYPE_BTREE
				case "ivfflat":
					keyTyp = tree.INDEX_TYPE_IVFFLAT
				case "master":
					keyTyp = tree.INDEX_TYPE_MASTER
				case "hash":
					keyTyp = tree.INDEX_TYPE_HASH
				case "rtree":
					keyTyp = tree.INDEX_TYPE_RTREE
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invalid the type of index")
					goto ret1
				}
			}

			var IfNotExists = yyDollar[2].ifNotExistsUnion()
			var KeyParts = yyDollar[5].keyPartsUnion()
			var Name = yyDollar[3].strsUnion()[0]
			var KeyType = keyTyp
			var IndexOption = yyDollar[7].indexOptionUnion()
			yyLOCAL = tree.NewIndex(
				IfNotExists,
				KeyParts,
				Name,
				KeyType,
				IndexOption,
			)
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8374
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "btree":
					keyTyp = tree.INDEX_TYPE_BTREE
				case "ivfflat":
					keyTyp = tree.INDEX_TYPE_IVFFLAT
				case "master":
					keyTyp = tree.INDEX_TYPE_MASTER
				case "hash":
					keyTyp = tree.INDEX_TYPE_HASH
				case "rtree":
					keyTyp = tree.INDEX_TYPE_RTREE
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invalid type of index")
					goto ret1
				}
			}
			var IfNotExists = yyDollar[2].ifNotExistsUnion()
			var KeyParts = yyDollar[5].keyPartsUnion()
			var Name = yyDollar[3].strsUnion()[0]
			var KeyType = keyTyp
			var IndexOption = yyDollar[9].indexOptionUnion()
			yyLOCAL = tree.NewIndex(
				IfNotExists,
				KeyParts,
				Name,
				KeyType,
				IndexOption,
			)
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8414
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8428
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8434
		{
			var KeyParts = yyDollar[5].keyPartsUnion()
			var Name = yyDollar[3].strsUnion()[0]
			var Empty = yyDollar[3].strsUnion()[1] == ""
			var IndexOption = yyDollar[7].indexOptionUnion()
			yyLOCAL = tree.NewPrimaryKeyIndex(
				KeyParts,
				Name,
				Empty,
				IndexOption,
			)
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8447
		{
			var KeyParts = yyDollar[5].keyPartsUnion()
			var Name = yyDollar[3].strsUnion()[0]
			var Empty = yyDollar[3].strsUnion()[1] == ""
			var IndexOption = yyDollar[9].indexOptionUnion()
			yyLOCAL = tree.NewPrimaryKeyIndex(
				KeyParts,
				Name,
				Empty,
				IndexOption,
			)
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8460
		{
			var KeyParts = yyDollar[5].keyPartsUnion()
			var Name = yyDollar[3].strsUnion()[0]
			var Empty = yyDollar[3].strsUnion()[1] == ""
			var IndexOption = yyDollar[7].indexOptionUnion()
			yyLOCAL = tree.NewUniqueIndex(
				KeyParts,
				Name,
				Empty,
				IndexOption,
			)
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8473
		{
			var KeyParts = yyDollar[5].keyPartsUnion()
			var Name = yyDollar[3].strsUnion()[0]
			var Empty = yyDollar[3].strsUnion()[1] == ""
			var IndexOption = yyDollar[9].indexOptionUnion()
			yyLOCAL = tree.NewUniqueIndex(
				KeyParts,
				Name,
				Empty,
				IndexOption,
			)
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8486
		{
			var IfNotExists = yyDollar[3].ifNotExistsUnion()
			var KeyParts = yyDollar[6].keyPartsUnion()
			var Name = yyDollar[4].str
			var Refer = yyDollar[8].attributeReferenceUnion()
			var Empty = true
			yyLOCAL = tree.NewForeignKey(
				IfNotExists,
				KeyParts,
				Name,
				Refer,
				Empty,
			)
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8501
		{
			var Expr = yyDollar[3].exprUnion()
			var Enforced = yyDollar[5].boolValUnion()
			yyLOCAL = tree.NewCheckIndex(
				Expr,
				Enforced,
			)
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8511
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8517
		{
			yyVAL.str = ""
		}
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8521
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8531
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8537
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8543
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8564
		{
			yyVAL.str = ""
		}
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8568
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1308:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8574
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8580
		{
			yyLOCAL = tree.NewUnresolvedName(yyDollar[1].cstrUnion())
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8584
		{
			tblNameCStr := yylex.(*Lexer).GetDbOrTblNameCStr(yyDollar[1].cstrUnion().Origin())
			yyLOCAL = tree.NewUnresolvedName(tblNameCStr, yyDollar[3].cstrUnion())
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8589
		{
			dbNameCStr := yylex.(*Lexer).GetDbOrTblNameCStr(yyDollar[1].cstrUnion().Origin())
			tblNameCStr := yylex.(*Lexer).GetDbOrTblNameCStr(yyDollar[3].cstrUnion().Origin())
			yyLOCAL = tree.NewUnresolvedName(dbNameCStr, tblNameCStr, yyDollar[5].cstrUnion())
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8597
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, 1)
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8601
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, 1)
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8605
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, 1)
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8609
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, 1)
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8615
		{
			yyLOCAL = yylex.(*Lexer).GetDbOrTblNameCStr(yyDollar[1].cstrUnion().Origin())
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8621
		{
			yyLOCAL = tree.NewUnresolvedName(yyDollar[1].cstrUnion())
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8625
		{
			tblNameCStr := yylex.(*Lexer).GetDbOrTblNameCStr(yyDollar[1].cstrUnion().Origin())
			yyLOCAL = tree.NewUnresolvedName(tblNameCStr, yyDollar[3].cstrUnion())
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8630
		{
			dbNameCStr := yylex.(*Lexer).GetDbOrTblNameCStr(yyDollar[1].cstrUnion().Origin())
			tblNameCStr := yylex.(*Lexer).GetDbOrTblNameCStr(yyDollar[3].cstrUnion().Origin())
			yyLOCAL = tree.NewUnresolvedName(dbNameCStr, tblNameCStr, yyDollar[5].cstrUnion())
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8637
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8641
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8647
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8651
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8657
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8661
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8665
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8669
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8673
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8677
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8682
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8686
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8690
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8694
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8698
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8702
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8706
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8710
		{
			yyLOCAL = tree.NewAttributeCheckConstraint(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8714
		{
			yyLOCAL = tree.NewAttributeCheckConstraint(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8718
		{
			name := tree.NewUnresolvedColName(yyDollar[3].str)
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[3].str, 1),
				Exprs:    es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8732
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8736
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8740
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8744
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8748
		{
			yyLOCAL = tree.NewAttributeHeader(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8752
		{
			yyLOCAL = tree.NewAttributeHeaders()
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8758
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8762
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8767
		{
			yyVAL.str = ""
		}
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8771
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8777
		{
			yyVAL.str = ""
		}
	case 1351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8781
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1352:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8787
		{
			var TableName = yyDollar[2].tableNameUnion()
			var KeyParts = yyDollar[3].keyPartsUnion()
			var Match = yyDollar[4].matchTypeUnion()
			var OnDelete = yyDollar[5].referenceOnRecordUnion().OnDelete
			var OnUpdate = yyDollar[5].referenceOnRecordUnion().OnUpdate
			yyLOCAL = tree.NewAttributeReference(
				TableName,
				KeyParts,
				Match,
				OnDelete,
				OnUpdate,
			)
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8804
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8811
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8818
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8825
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8832
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8841
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8847
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8853
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8857
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8861
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8865
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8869
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8874
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8881
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8885
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8889
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8894
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8898
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8903
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8907
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8923
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8929
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8933
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8937
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8941
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8945
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8949
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8953
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8957
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8961
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8965
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8969
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8973
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8977
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8983
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8987
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8991
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8995
		{
			yyLOCAL = tree.NewParentExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:8999
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9003
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9007
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9011
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9015
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9019
		{
			hint := strings.ToLower(yyDollar[2].cstrUnion().Compare())
			switch hint {
			case "d":
				locale := ""
				t := &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.TimestampFamily,
						FamilyString: "DATETIME",
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
				yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), t)
			case "t":
				locale := ""
				t := &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.TimeFamily,
						FamilyString: "TIME",
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_TIME),
					},
				}
				yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), t)
			case "ts":
				locale := ""
				t := &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.TimestampFamily,
						FamilyString: "TIMESTAMP",
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
				yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), t)
			default:
				yylex.Error("Invalid type")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9061
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9065
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9069
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9074
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9082
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9086
		{
			yyLOCAL = tree.NewSerialExtractExpr(yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9090
		{
			yyLOCAL = tree.NewBitCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9094
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9098
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9108
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9112
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9116
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9120
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9124
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9128
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9132
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9138
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9147
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9156
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9167
		{
			v := int(yyDollar[5].item.(int64))
			val, err := tree.NewSampleRowsFuncExpression(v, true, nil, "block")
			if err != nil {
				yylex.Error(err.Error())
				goto ret1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9177
		{
			v := int(yyDollar[5].item.(int64))
			val, err := tree.NewSampleRowsFuncExpression(v, true, nil, yyDollar[8].str)
			if err != nil {
				yylex.Error(err.Error())
				goto ret1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9187
		{
			val, err := tree.NewSamplePercentFuncExpression1(yyDollar[5].item.(int64), true, nil)
			if err != nil {
				yylex.Error(err.Error())
				goto ret1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9196
		{
			val, err := tree.NewSamplePercentFuncExpression2(yyDollar[5].item.(float64), true, nil)
			if err != nil {
				yylex.Error(err.Error())
				goto ret1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9206
		{
			v := int(yyDollar[5].item.(int64))
			val, err := tree.NewSampleRowsFuncExpression(v, false, yyDollar[3].exprsUnion(), "block")
			if err != nil {
				yylex.Error(err.Error())
				goto ret1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9216
		{
			v := int(yyDollar[5].item.(int64))
			val, err := tree.NewSampleRowsFuncExpression(v, false, yyDollar[3].exprsUnion(), yyDollar[8].str)
			if err != nil {
				yylex.Error(err.Error())
				goto ret1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9226
		{
			val, err := tree.NewSamplePercentFuncExpression1(yyDollar[5].item.(int64), false, yyDollar[3].exprsUnion())
			if err != nil {
				yylex.Error(err.Error())
				goto ret1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9235
		{
			val, err := tree.NewSamplePercentFuncExpression2(yyDollar[5].item.(float64), false, yyDollar[3].exprsUnion())
			if err != nil {
				yylex.Error(err.Error())
				goto ret1
			}
			yyLOCAL = val
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9245
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9249
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9254
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9258
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9264
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9268
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9274
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9283
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9295
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9312
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9329
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9342
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9355
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9367
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9381
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9396
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9411
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9428
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9443
		{
		}
	case 1454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9450
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9454
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9458
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9464
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9468
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9472
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9476
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9482
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9486
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9490
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9496
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9504
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9514
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9518
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9525
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9530
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9534
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9539
		{
			yyVAL.str = ","
		}
	case 1472:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9543
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1473:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9548
		{
			yyVAL.str = "1,vector_l2_ops,random,false"
		}
	case 1474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9552
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1475:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9557
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9564
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9590
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9602
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9614
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9625
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9636
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9647
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9657
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9667
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9678
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9689
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9700
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9711
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9722
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9733
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9744
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9755
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9766
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9777
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9788
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9799
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9810
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9821
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9832
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				FuncName:   tree.NewCStr(yyDollar[1].str, 1),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9850
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9859
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9868
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9877
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9886
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9897
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9906
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    tree.Exprs{yyDollar[4].exprUnion()},
				Type:     yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9916
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9925
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9934
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9943
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9952
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9964
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9975
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:9988
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10000
		{
			column := tree.NewUnresolvedColName(yyDollar[3].str)
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10023
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1555:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10059
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10072
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10085
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10097
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10106
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
			}
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10114
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
			}
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10122
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10135
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10144
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10155
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10166
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10175
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10187
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10197
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10207
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10216
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10227
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10236
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10246
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10255
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10264
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10274
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10278
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10284
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10288
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				goto ret1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10307
		{
		}
	case 1587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10309
		{
		}
	case 1621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10350
		{
			name := tree.NewUnresolvedColName(yyDollar[1].str)
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr(yyDollar[1].str, 1),
				Exprs:    tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1622:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10362
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1623:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10366
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10370
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10376
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1626:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10381
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10385
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10391
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10395
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10401
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10405
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10412
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10416
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10420
		{
			name := tree.NewUnresolvedColName("concat")
			yyLOCAL = &tree.FuncExpr{
				Func:     tree.FuncName2ResolvableFunctionReference(name),
				FuncName: tree.NewCStr("concat", 1),
				Exprs:    tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10429
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10433
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10437
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10442
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10446
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10452
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1641:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10456
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10460
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1643:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10464
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10468
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1645:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10472
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10476
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1647:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10480
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10484
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1649:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10488
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10496
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10500
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1653:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10504
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1654:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10508
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1655:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10512
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1656:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10516
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10520
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1658:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10524
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1659:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10528
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1660:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10532
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1662:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10538
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10542
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1664:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10548
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10552
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1666:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10559
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10563
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10567
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1669:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10573
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1670:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10577
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1671:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10581
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10585
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10589
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10593
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10597
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10603
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10607
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10611
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1679:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10615
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10621
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				goto ret1
			}
		}
		yyVAL.union = yyLOCAL
	case 1681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10634
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10639
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10645
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1684:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10649
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				goto ret1
			}
		}
		yyVAL.union = yyLOCAL
	case 1685:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10662
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1686:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10667
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1687:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10671
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1688:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10675
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10679
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10683
		{
			if strings.HasPrefix(yyDollar[2].str, "0x") {
				yyDollar[2].str = yyDollar[2].str[2:]
			}
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10690
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10694
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10698
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10702
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10709
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1699:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10720
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10725
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10731
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10743
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10755
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10767
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1705:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10780
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10793
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10806
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10819
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10832
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10845
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10858
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10871
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10884
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1714:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10897
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10912
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				goto ret1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				goto ret1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				goto ret1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1716:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10939
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				goto ret1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				goto ret1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				goto ret1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:10981
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				goto ret1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				goto ret1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1718:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11017
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				goto ret1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				goto ret1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1719:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11053
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1720:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11070
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11082
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				goto ret1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11102
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				goto ret1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11122
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				goto ret1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11142
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11158
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11171
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11184
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11197
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1729:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11210
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1730:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11222
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11234
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1732:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11246
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11258
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11270
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1735:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11282
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1736:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11294
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1737:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11306
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1738:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11318
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11331
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1740:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11344
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1741:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11357
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11370
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11385
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11393
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1745:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11402
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1746:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11412
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1747:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11435
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1748:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11440
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1749:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11446
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1751:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11453
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11457
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1753:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11462
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11466
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11472
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1756:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11478
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11485
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1758:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11492
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1759:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11501
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11508
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1761:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11515
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1762:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11524
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11528
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11532
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1765:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11538
		{
		}
	case 1766:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11540
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1770:
		yyDollar = yyS[yypt-0 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11550
		{
			yyVAL.str = ""
		}
	case 1771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line /data/homedata/lch/matrixone/pkg/sql/parsers/dialect/mysql/mysql_sql.y:11554
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}
